{"ast":null,"code":"var _jsxFileName = \"E:\\\\GENText\\\\src\\\\app\\\\modules\\\\apps\\\\user-management\\\\users-list\\\\table\\\\columns\\\\UserSelectionCell.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useListView } from '../../core/ListViewProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSelectionCell = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const {\n    selected,\n    onSelect\n  } = useListView();\n  const isSelected = useMemo(() => selected.includes(id), [id, selected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-check form-check-custom form-check-solid\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      \"data-kt-check\": isSelected,\n      \"data-kt-check-target\": \"#kt_table_users .form-check-input\",\n      checked: isSelected,\n      onChange: () => onSelect(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(UserSelectionCell, \"DhrD0HFv4P0MLaudHz0kyZJkkBY=\", false, function () {\n  return [useListView];\n});\n_c = UserSelectionCell;\nexport { UserSelectionCell };\nvar _c;\n$RefreshReg$(_c, \"UserSelectionCell\");","map":{"version":3,"names":["useMemo","useListView","jsxDEV","_jsxDEV","UserSelectionCell","_ref","_s","id","selected","onSelect","isSelected","includes","className","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/GENText/src/app/modules/apps/user-management/users-list/table/columns/UserSelectionCell.tsx"],"sourcesContent":["import {FC, useMemo} from 'react'\nimport {ID} from '../../../../../../../_metronic/helpers'\nimport {useListView} from '../../core/ListViewProvider'\n\ntype Props = {\n  id: ID\n}\n\nconst UserSelectionCell: FC<Props> = ({id}) => {\n  const {selected, onSelect} = useListView()\n  const isSelected = useMemo(() => selected.includes(id), [id, selected])\n  return (\n    <div className='form-check form-check-custom form-check-solid'>\n      <input\n        className='form-check-input'\n        type='checkbox'\n        data-kt-check={isSelected}\n        data-kt-check-target='#kt_table_users .form-check-input'\n        checked={isSelected}\n        onChange={() => onSelect(id)}\n      />\n    </div>\n  )\n}\n\nexport {UserSelectionCell}\n"],"mappings":";;AAAA,SAAYA,OAAO,QAAO,OAAO;AAEjC,SAAQC,WAAW,QAAO,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMvD,MAAMC,iBAA4B,GAAGC,IAAA,IAAU;EAAAC,EAAA;EAAA,IAAT;IAACC;EAAE,CAAC,GAAAF,IAAA;EACxC,MAAM;IAACG,QAAQ;IAAEC;EAAQ,CAAC,GAAGR,WAAW,CAAC,CAAC;EAC1C,MAAMS,UAAU,GAAGV,OAAO,CAAC,MAAMQ,QAAQ,CAACG,QAAQ,CAACJ,EAAE,CAAC,EAAE,CAACA,EAAE,EAAEC,QAAQ,CAAC,CAAC;EACvE,oBACEL,OAAA;IAAKS,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC5DV,OAAA;MACES,SAAS,EAAC,kBAAkB;MAC5BE,IAAI,EAAC,UAAU;MACf,iBAAeJ,UAAW;MAC1B,wBAAqB,mCAAmC;MACxDK,OAAO,EAAEL,UAAW;MACpBM,QAAQ,EAAEA,CAAA,KAAMP,QAAQ,CAACF,EAAE;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAd,EAAA,CAfKF,iBAA4B;EAAA,QACHH,WAAW;AAAA;AAAAoB,EAAA,GADpCjB,iBAA4B;AAiBlC,SAAQA,iBAAiB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}