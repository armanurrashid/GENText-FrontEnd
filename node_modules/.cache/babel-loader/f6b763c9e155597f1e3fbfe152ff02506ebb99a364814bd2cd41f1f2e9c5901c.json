{"ast":null,"code":"var _jsxFileName = \"E:\\\\GENText\\\\src\\\\app\\\\modules\\\\auth\\\\core\\\\Auth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { LayoutSplashScreen } from '../../../../_metronic/layout/core';\nimport * as authHelper from './AuthHelpers';\nimport { getUserByToken } from './_requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initAuthContextPropsState = {\n  auth: authHelper.getAuth(),\n  saveAuth: () => {},\n  currentUser: undefined,\n  setCurrentUser: () => {},\n  logout: () => {}\n};\nconst AuthContext = /*#__PURE__*/createContext(initAuthContextPropsState);\nconst useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst AuthProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [auth, setAuth] = useState(authHelper.getAuth());\n  const [currentUser, setCurrentUser] = useState();\n  const saveAuth = auth => {\n    setAuth(auth);\n    if (auth) {\n      authHelper.setAuth(auth);\n    } else {\n      authHelper.removeAuth();\n    }\n  };\n  const logout = () => {\n    saveAuth(undefined);\n    setCurrentUser(undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      saveAuth,\n      currentUser,\n      setCurrentUser,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"G82xl4FfwRiphoqVowsoibmuR5g=\");\n_c = AuthProvider;\nconst AuthInit = _ref2 => {\n  _s3();\n  let {\n    children\n  } = _ref2;\n  const {\n    auth,\n    currentUser,\n    logout,\n    setCurrentUser\n  } = useAuth();\n  const [showSplashScreen, setShowSplashScreen] = useState(true);\n\n  // We should request user by authToken (IN OUR EXAMPLE IT'S API_TOKEN) before rendering the application\n  useEffect(() => {\n    const requestUser = async apiToken => {\n      try {\n        if (!currentUser) {\n          const {\n            data\n          } = await getUserByToken(apiToken);\n          if (data) {\n            setCurrentUser(data);\n          }\n        }\n      } catch (error) {\n        console.error(error);\n        if (currentUser) {\n          logout();\n        }\n      } finally {\n        setShowSplashScreen(false);\n      }\n    };\n    if (auth && auth.api_token) {\n      requestUser(auth.api_token);\n    } else {\n      logout();\n      setShowSplashScreen(false);\n    }\n    // eslint-disable-next-line\n  }, []);\n  return showSplashScreen ? /*#__PURE__*/_jsxDEV(LayoutSplashScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 29\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s3(AuthInit, \"l1r6N5ts0pJOfyFbdwhgX5mlVIE=\", false, function () {\n  return [useAuth];\n});\n_c2 = AuthInit;\nexport { AuthProvider, AuthInit, useAuth };\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"AuthInit\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","LayoutSplashScreen","authHelper","getUserByToken","jsxDEV","_jsxDEV","Fragment","_Fragment","initAuthContextPropsState","auth","getAuth","saveAuth","currentUser","undefined","setCurrentUser","logout","AuthContext","useAuth","_s","AuthProvider","_ref","_s2","children","setAuth","removeAuth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","AuthInit","_ref2","_s3","showSplashScreen","setShowSplashScreen","requestUser","apiToken","data","error","console","api_token","_c2","$RefreshReg$"],"sources":["E:/GENText/src/app/modules/auth/core/Auth.tsx"],"sourcesContent":["import {FC, useState, useEffect, createContext, useContext, Dispatch, SetStateAction} from 'react'\nimport {LayoutSplashScreen} from '../../../../_metronic/layout/core'\nimport {AuthModel, UserModel} from './_models'\nimport * as authHelper from './AuthHelpers'\nimport {getUserByToken} from './_requests'\nimport {WithChildren} from '../../../../_metronic/helpers'\n\ntype AuthContextProps = {\n  auth: AuthModel | undefined\n  saveAuth: (auth: AuthModel | undefined) => void\n  currentUser: UserModel | undefined\n  setCurrentUser: Dispatch<SetStateAction<UserModel | undefined>>\n  logout: () => void\n}\n\nconst initAuthContextPropsState = {\n  auth: authHelper.getAuth(),\n  saveAuth: () => {},\n  currentUser: undefined,\n  setCurrentUser: () => {},\n  logout: () => {},\n}\n\nconst AuthContext = createContext<AuthContextProps>(initAuthContextPropsState)\n\nconst useAuth = () => {\n  return useContext(AuthContext)\n}\n\nconst AuthProvider: FC<WithChildren> = ({children}) => {\n  const [auth, setAuth] = useState<AuthModel | undefined>(authHelper.getAuth())\n  const [currentUser, setCurrentUser] = useState<UserModel | undefined>()\n  const saveAuth = (auth: AuthModel | undefined) => {\n    setAuth(auth)\n    if (auth) {\n      authHelper.setAuth(auth)\n    } else {\n      authHelper.removeAuth()\n    }\n  }\n\n  const logout = () => {\n    saveAuth(undefined)\n    setCurrentUser(undefined)\n  }\n\n  return (\n    <AuthContext.Provider value={{auth, saveAuth, currentUser, setCurrentUser, logout}}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nconst AuthInit: FC<WithChildren> = ({children}) => {\n  const {auth, currentUser, logout, setCurrentUser} = useAuth()\n  const [showSplashScreen, setShowSplashScreen] = useState(true)\n\n  // We should request user by authToken (IN OUR EXAMPLE IT'S API_TOKEN) before rendering the application\n  useEffect(() => {\n    const requestUser = async (apiToken: string) => {\n      try {\n        if (!currentUser) {\n          const {data} = await getUserByToken(apiToken)\n          if (data) {\n            setCurrentUser(data)\n          }\n        }\n      } catch (error) {\n        console.error(error)\n        if (currentUser) {\n          logout()\n        }\n      } finally {\n        setShowSplashScreen(false)\n      }\n    }\n\n    if (auth && auth.api_token) {\n      requestUser(auth.api_token)\n    } else {\n      logout()\n      setShowSplashScreen(false)\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  return showSplashScreen ? <LayoutSplashScreen /> : <>{children}</>\n}\n\nexport {AuthProvider, AuthInit, useAuth}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}