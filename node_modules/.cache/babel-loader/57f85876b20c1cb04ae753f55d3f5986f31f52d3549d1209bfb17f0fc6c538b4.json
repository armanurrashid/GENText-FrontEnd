{"ast":null,"code":"var _jsxFileName = \"E:\\\\GENText\\\\src\\\\_metronic\\\\partials\\\\layout\\\\theme-mode\\\\ThemeModeProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ThemeModeComponent } from '../../../assets/ts/layout';\nimport { toAbsoluteUrl } from '../../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themeModelSKey = 'kt_theme_mode_value';\nexport const themeMenuModeLSKey = 'kt_theme_mode_menu';\nconst systemMode = ThemeModeComponent.getSystemMode();\nconst themeModeSwitchHelper = _mode => {\n  // change background image url\n  const mode = _mode !== 'system' ? _mode : systemMode;\n  const imageUrl = '/media/patterns/header-bg' + (mode === 'light' ? '.jpg' : '-dark.png');\n  document.body.style.backgroundImage = `url(\"${toAbsoluteUrl(imageUrl)}\")`;\n};\nconst getThemeModeFromLocalStorage = lsKey => {\n  if (!localStorage) {\n    return 'light';\n  }\n  const data = localStorage.getItem(lsKey);\n  if (data === 'dark' || data === 'light' || data === 'system') {\n    return data;\n  }\n  if (document.documentElement.hasAttribute('data-bs-theme')) {\n    const dataTheme = document.documentElement.getAttribute('data-bs-theme');\n    if (dataTheme && (dataTheme === 'dark' || dataTheme === 'light' || dataTheme === 'system')) {\n      return dataTheme;\n    }\n  }\n  return 'system';\n};\nconst defaultThemeMode = {\n  mode: getThemeModeFromLocalStorage(themeModelSKey),\n  menuMode: getThemeModeFromLocalStorage(themeMenuModeLSKey),\n  updateMode: _mode => {},\n  updateMenuMode: _menuMode => {}\n};\nconst ThemeModeContext = /*#__PURE__*/createContext({\n  mode: defaultThemeMode.mode,\n  menuMode: defaultThemeMode.menuMode,\n  updateMode: _mode => {},\n  updateMenuMode: _menuMode => {}\n});\nconst useThemeMode = () => {\n  _s();\n  return useContext(ThemeModeContext);\n};\n_s(useThemeMode, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ThemeModeProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [mode, setMode] = useState(defaultThemeMode.mode);\n  const [menuMode, setMenuMode] = useState(defaultThemeMode.menuMode);\n  const updateMode = function (_mode) {\n    let saveInLocalStorage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    setMode(_mode);\n    // themeModeSwitchHelper(updatedMode)\n    if (saveInLocalStorage && localStorage) {\n      localStorage.setItem(themeModelSKey, _mode);\n    }\n    if (saveInLocalStorage) {\n      const updatedMode = _mode === 'system' ? systemMode : _mode;\n      document.documentElement.setAttribute('data-bs-theme', updatedMode);\n    }\n    ThemeModeComponent.init();\n  };\n  const updateMenuMode = function (_menuMode) {\n    let saveInLocalStorage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    setMenuMode(_menuMode);\n    if (saveInLocalStorage && localStorage) {\n      localStorage.setItem(themeMenuModeLSKey, _menuMode);\n    }\n  };\n  useEffect(() => {\n    updateMode(mode, false);\n    updateMenuMode(menuMode, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeModeContext.Provider, {\n    value: {\n      mode,\n      menuMode,\n      updateMode,\n      updateMenuMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeModeProvider, \"vkUTdyCu+7CjlBbhg31k02X9ka4=\");\n_c = ThemeModeProvider;\nexport { ThemeModeProvider, useThemeMode, systemMode, themeModeSwitchHelper };\nvar _c;\n$RefreshReg$(_c, \"ThemeModeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","ThemeModeComponent","toAbsoluteUrl","jsxDEV","_jsxDEV","themeModelSKey","themeMenuModeLSKey","systemMode","getSystemMode","themeModeSwitchHelper","_mode","mode","imageUrl","document","body","style","backgroundImage","getThemeModeFromLocalStorage","lsKey","localStorage","data","getItem","documentElement","hasAttribute","dataTheme","getAttribute","defaultThemeMode","menuMode","updateMode","updateMenuMode","_menuMode","ThemeModeContext","useThemeMode","_s","ThemeModeProvider","_ref","_s2","children","setMode","setMenuMode","saveInLocalStorage","arguments","length","undefined","setItem","updatedMode","setAttribute","init","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/GENText/src/_metronic/partials/layout/theme-mode/ThemeModeProvider.tsx"],"sourcesContent":["import React, {createContext, useContext, useEffect, useState} from 'react'\nimport {ThemeModeComponent} from '../../../assets/ts/layout'\nimport {toAbsoluteUrl} from '../../../helpers'\n\nexport type ThemeModeType = 'dark' | 'light' | 'system'\nexport const themeModelSKey = 'kt_theme_mode_value'\nexport const themeMenuModeLSKey = 'kt_theme_mode_menu'\n\nconst systemMode = ThemeModeComponent.getSystemMode() as 'light' | 'dark'\n\ntype ThemeModeContextType = {\n  mode: ThemeModeType\n  menuMode: ThemeModeType\n  updateMode: (_mode: ThemeModeType) => void\n  updateMenuMode: (_mode: ThemeModeType) => void\n}\n\nconst themeModeSwitchHelper = (_mode: ThemeModeType) => {\n  // change background image url\n  const mode = _mode !== 'system' ? _mode : systemMode\n  const imageUrl = '/media/patterns/header-bg' + (mode === 'light' ? '.jpg' : '-dark.png')\n  document.body.style.backgroundImage = `url(\"${toAbsoluteUrl(imageUrl)}\")`\n}\n\nconst getThemeModeFromLocalStorage = (lsKey: string): ThemeModeType => {\n  if (!localStorage) {\n    return 'light'\n  }\n\n  const data = localStorage.getItem(lsKey)\n  if (data === 'dark' || data === 'light' || data === 'system') {\n    return data\n  }\n\n  if (document.documentElement.hasAttribute('data-bs-theme')) {\n    const dataTheme = document.documentElement.getAttribute('data-bs-theme')\n    if (dataTheme && (dataTheme === 'dark' || dataTheme === 'light' || dataTheme === 'system')) {\n      return dataTheme\n    }\n  }\n\n  return 'system'\n}\n\nconst defaultThemeMode: ThemeModeContextType = {\n  mode: getThemeModeFromLocalStorage(themeModelSKey),\n  menuMode: getThemeModeFromLocalStorage(themeMenuModeLSKey),\n  updateMode: (_mode: ThemeModeType) => {},\n  updateMenuMode: (_menuMode: ThemeModeType) => {},\n}\n\nconst ThemeModeContext = createContext<ThemeModeContextType>({\n  mode: defaultThemeMode.mode,\n  menuMode: defaultThemeMode.menuMode,\n  updateMode: (_mode: ThemeModeType) => {},\n  updateMenuMode: (_menuMode: ThemeModeType) => {},\n})\n\nconst useThemeMode = () => useContext(ThemeModeContext)\n\nconst ThemeModeProvider = ({children}: {children: React.ReactNode}) => {\n  const [mode, setMode] = useState<ThemeModeType>(defaultThemeMode.mode)\n  const [menuMode, setMenuMode] = useState<ThemeModeType>(defaultThemeMode.menuMode)\n\n  const updateMode = (_mode: ThemeModeType, saveInLocalStorage: boolean = true) => {\n    setMode(_mode)\n    // themeModeSwitchHelper(updatedMode)\n    if (saveInLocalStorage && localStorage) {\n      localStorage.setItem(themeModelSKey, _mode)\n    }\n\n    if (saveInLocalStorage) {\n      const updatedMode = _mode === 'system' ? systemMode : _mode\n      document.documentElement.setAttribute('data-bs-theme', updatedMode)\n    }\n    ThemeModeComponent.init()\n  }\n\n  const updateMenuMode = (_menuMode: ThemeModeType, saveInLocalStorage: boolean = true) => {\n    setMenuMode(_menuMode)\n    if (saveInLocalStorage && localStorage) {\n      localStorage.setItem(themeMenuModeLSKey, _menuMode)\n    }\n  }\n\n  useEffect(() => {\n    updateMode(mode, false)\n    updateMenuMode(menuMode, false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <ThemeModeContext.Provider value={{mode, menuMode, updateMode, updateMenuMode}}>\n      {children}\n    </ThemeModeContext.Provider>\n  )\n}\n\nexport {ThemeModeProvider, useThemeMode, systemMode, themeModeSwitchHelper}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}