{"ast":null,"code":"var _jsxFileName = \"E:\\\\tappware Task\\\\react app\\\\GENText-FrontEnd\\\\src\\\\app\\\\modules\\\\apps\\\\user-management\\\\users-list\\\\table\\\\UsersTable.tsx\",\n  _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport { CustomHeaderColumn } from '../table/columns/CustomHeaderColumn';\nimport { CustomRow } from '../table/columns/CustomRow';\nimport { useQueryResponseData, useQueryResponseLoading } from '../core/QueryResponseProvider';\nimport { usersColumns } from './columns/_columns';\nimport { UsersListLoading } from '../components/loading/UsersListLoading';\nimport { UsersListPagination } from '../components/pagination/UsersListPagination';\nimport { KTCardBody } from '../../../../../../_metronic/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersTable = () => {\n  _s();\n  const users = useQueryResponseData();\n  const isLoading = useQueryResponseLoading();\n  const data = useMemo(() => users, [users]);\n  const columns = useMemo(() => usersColumns, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headers,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(KTCardBody, {\n    className: \"py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"kt_table_users\",\n        className: \"table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer\",\n        ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"text-start text-muted fw-bolder fs-7 text-uppercase gs-0\",\n            children: headers.map(column => /*#__PURE__*/_jsxDEV(CustomHeaderColumn, {\n              column: column\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"text-gray-600 fw-bold\",\n          ...getTableBodyProps(),\n          children: rows.length > 0 ? rows.map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(CustomRow, {\n              row: row\n            }, `row-${i}-${row.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 24\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 7,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex text-center w-100 align-content-center justify-content-center\",\n                children: \"No matching records found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UsersListPagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(UsersListLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersTable, \"6xmKP7iHHONd77q+NuIh4Ra6N+Q=\", false, function () {\n  return [useQueryResponseData, useQueryResponseLoading, useTable];\n});\n_c = UsersTable;\nexport { UsersTable };\nvar _c;\n$RefreshReg$(_c, \"UsersTable\");","map":{"version":3,"names":["useMemo","useTable","CustomHeaderColumn","CustomRow","useQueryResponseData","useQueryResponseLoading","usersColumns","UsersListLoading","UsersListPagination","KTCardBody","jsxDEV","_jsxDEV","UsersTable","_s","users","isLoading","data","columns","getTableProps","getTableBodyProps","headers","rows","prepareRow","className","children","id","map","column","fileName","_jsxFileName","lineNumber","columnNumber","length","row","i","colSpan","_c","$RefreshReg$"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/app/modules/apps/user-management/users-list/table/UsersTable.tsx"],"sourcesContent":["import {useMemo} from 'react'\r\nimport {useTable, ColumnInstance, Row} from 'react-table'\r\nimport {CustomHeaderColumn} from '../table/columns/CustomHeaderColumn'\r\nimport {CustomRow} from '../table/columns/CustomRow'\r\nimport {useQueryResponseData, useQueryResponseLoading} from '../core/QueryResponseProvider'\r\nimport {usersColumns} from './columns/_columns'\r\nimport {User} from '../core/_models'\r\nimport {UsersListLoading} from '../components/loading/UsersListLoading'\r\nimport {UsersListPagination} from '../components/pagination/UsersListPagination'\r\nimport {KTCardBody} from '../../../../../../_metronic/helpers'\r\n\r\nconst UsersTable = () => {\r\n  const users = useQueryResponseData()\r\n  const isLoading = useQueryResponseLoading()\r\n  const data = useMemo(() => users, [users])\r\n  const columns = useMemo(() => usersColumns, [])\r\n  const {getTableProps, getTableBodyProps, headers, rows, prepareRow} = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n    <KTCardBody className='py-4'>\r\n      <div className='table-responsive'>\r\n        <table\r\n          id='kt_table_users'\r\n          className='table align-middle table-row-dashed fs-6 gy-5 dataTable no-footer'\r\n          {...getTableProps()}\r\n        >\r\n          <thead>\r\n            <tr className='text-start text-muted fw-bolder fs-7 text-uppercase gs-0'>\r\n              {headers.map((column: ColumnInstance<User>) => (\r\n                <CustomHeaderColumn key={column.id} column={column} />\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody className='text-gray-600 fw-bold' {...getTableBodyProps()}>\r\n            {rows.length > 0 ? (\r\n              rows.map((row: Row<User>, i) => {\r\n                prepareRow(row)\r\n                return <CustomRow row={row} key={`row-${i}-${row.id}`} />\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={7}>\r\n                  <div className='d-flex text-center w-100 align-content-center justify-content-center'>\r\n                    No matching records found\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <UsersListPagination />\r\n      {isLoading && <UsersListLoading />}\r\n    </KTCardBody>\r\n  )\r\n}\r\n\r\nexport {UsersTable}\r\n"],"mappings":";;AAAA,SAAQA,OAAO,QAAO,OAAO;AAC7B,SAAQC,QAAQ,QAA4B,aAAa;AACzD,SAAQC,kBAAkB,QAAO,qCAAqC;AACtE,SAAQC,SAAS,QAAO,4BAA4B;AACpD,SAAQC,oBAAoB,EAAEC,uBAAuB,QAAO,+BAA+B;AAC3F,SAAQC,YAAY,QAAO,oBAAoB;AAE/C,SAAQC,gBAAgB,QAAO,wCAAwC;AACvE,SAAQC,mBAAmB,QAAO,8CAA8C;AAChF,SAAQC,UAAU,QAAO,qCAAqC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;EACpC,MAAMW,SAAS,GAAGV,uBAAuB,CAAC,CAAC;EAC3C,MAAMW,IAAI,GAAGhB,OAAO,CAAC,MAAMc,KAAK,EAAE,CAACA,KAAK,CAAC,CAAC;EAC1C,MAAMG,OAAO,GAAGjB,OAAO,CAAC,MAAMM,YAAY,EAAE,EAAE,CAAC;EAC/C,MAAM;IAACY,aAAa;IAAEC,iBAAiB;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGrB,QAAQ,CAAC;IAC7EgB,OAAO;IACPD;EACF,CAAC,CAAC;EAEF,oBACEL,OAAA,CAACF,UAAU;IAACc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAC1Bb,OAAA;MAAKY,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/Bb,OAAA;QACEc,EAAE,EAAC,gBAAgB;QACnBF,SAAS,EAAC,mEAAmE;QAAA,GACzEL,aAAa,CAAC,CAAC;QAAAM,QAAA,gBAEnBb,OAAA;UAAAa,QAAA,eACEb,OAAA;YAAIY,SAAS,EAAC,0DAA0D;YAAAC,QAAA,EACrEJ,OAAO,CAACM,GAAG,CAAEC,MAA4B,iBACxChB,OAAA,CAACT,kBAAkB;cAAiByB,MAAM,EAAEA;YAAO,GAA1BA,MAAM,CAACF,EAAE;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmB,CACtD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpB,OAAA;UAAOY,SAAS,EAAC,uBAAuB;UAAA,GAAKJ,iBAAiB,CAAC,CAAC;UAAAK,QAAA,EAC7DH,IAAI,CAACW,MAAM,GAAG,CAAC,GACdX,IAAI,CAACK,GAAG,CAAC,CAACO,GAAc,EAAEC,CAAC,KAAK;YAC9BZ,UAAU,CAACW,GAAG,CAAC;YACf,oBAAOtB,OAAA,CAACR,SAAS;cAAC8B,GAAG,EAAEA;YAAI,GAAO,OAAMC,CAAE,IAAGD,GAAG,CAACR,EAAG,EAAC;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAC3D,CAAC,CAAC,gBAEFpB,OAAA;YAAAa,QAAA,eACEb,OAAA;cAAIwB,OAAO,EAAE,CAAE;cAAAX,QAAA,eACbb,OAAA;gBAAKY,SAAS,EAAC,sEAAsE;gBAAAC,QAAA,EAAC;cAEtF;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNpB,OAAA,CAACH,mBAAmB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtBhB,SAAS,iBAAIJ,OAAA,CAACJ,gBAAgB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEjB,CAAC;AAAAlB,EAAA,CA/CKD,UAAU;EAAA,QACAR,oBAAoB,EAChBC,uBAAuB,EAG6BJ,QAAQ;AAAA;AAAAmC,EAAA,GAL1ExB,UAAU;AAiDhB,SAAQA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}