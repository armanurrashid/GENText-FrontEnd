{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:\\tappware Task\\react app\\GENText-FrontEnd\\node_modules\\react-inlinesvg\\src\\types.ts"],"sourcesContent":["import * as React from 'react';\r\n\r\nexport type ErrorCallback = (error: Error | FetchError) => void;\r\nexport type LoadCallback = (src: string, isCached: boolean) => void;\r\nexport type PlainObject<T = unknown> = Record<string | number | symbol, T>;\r\nexport type PreProcessorCallback = (code: string) => string;\r\n\r\nexport interface Props extends Omit<React.SVGProps<SVGElement>, 'onLoad' | 'onError' | 'ref'> {\r\n  baseURL?: string;\r\n  cacheRequests?: boolean;\r\n  children?: React.ReactNode;\r\n  description?: string;\r\n  fetchOptions?: RequestInit;\r\n  innerRef?: React.Ref<SVGElement>;\r\n  loader?: React.ReactNode;\r\n  onError?: ErrorCallback;\r\n  onLoad?: LoadCallback;\r\n  preProcessor?: PreProcessorCallback;\r\n  src: string;\r\n  title?: string;\r\n  uniqueHash?: string;\r\n  uniquifyIDs?: boolean;\r\n}\r\n\r\nexport interface State {\r\n  content: string;\r\n  element: React.ReactNode;\r\n  hasCache: boolean;\r\n  status: string;\r\n}\r\n\r\nexport interface FetchError extends Error {\r\n  code: string;\r\n  errno: string;\r\n  message: string;\r\n  type: string;\r\n}\r\n\r\nexport interface StorageItem {\r\n  content: string;\r\n  status: string;\r\n}\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}