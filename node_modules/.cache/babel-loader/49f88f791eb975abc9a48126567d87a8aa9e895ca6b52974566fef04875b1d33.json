{"ast":null,"code":"var _jsxFileName = \"E:\\\\tappware Task\\\\react app\\\\GENText-FrontEnd\\\\src\\\\_metronic\\\\layout\\\\components\\\\scroll-top\\\\ScrollTop.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { DrawerComponent, ScrollTopComponent, StickyComponent, ToggleComponent } from '../../../assets/ts/components';\nimport { KTIcon } from '../../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ScrollTop() {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  const [initialized, setInintialized] = useState(false);\n  const pluginsReinitialization = () => {\n    setTimeout(() => {\n      StickyComponent.reInitialization();\n      setTimeout(() => {\n        ToggleComponent.reinitialization();\n        DrawerComponent.reinitialization();\n      }, 70);\n    }, 140);\n  };\n  const scrollTop = () => {\n    ScrollTopComponent.goTop();\n  };\n  const updateHeaderSticky = () => {\n    const stickyHeader = document.body.querySelectorAll(`[data-kt-sticky-name=\"header\"]`);\n    if (stickyHeader && stickyHeader.length > 0) {\n      const sticky = StickyComponent.getInstance(stickyHeader[0]);\n      if (sticky) {\n        sticky.update();\n      }\n    }\n  };\n  useEffect(() => {\n    if (!initialized) {\n      setInintialized(true);\n    } else {\n      pluginsReinitialization();\n    }\n    updateHeaderSticky();\n    setTimeout(() => {\n      scrollTop();\n    }, 0);\n  }, [initialized, pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"kt_scrolltop\",\n    className: \"scrolltop\",\n    \"data-kt-scrolltop\": \"true\",\n    children: /*#__PURE__*/_jsxDEV(KTIcon, {\n      iconName: \"arrow-up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ScrollTop, \"nBysAYVTx5BloqwcbVB1jrHdPsQ=\", false, function () {\n  return [useLocation];\n});\n_c = ScrollTop;\nvar _c;\n$RefreshReg$(_c, \"ScrollTop\");","map":{"version":3,"names":["useEffect","useState","useLocation","DrawerComponent","ScrollTopComponent","StickyComponent","ToggleComponent","KTIcon","jsxDEV","_jsxDEV","ScrollTop","_s","pathname","initialized","setInintialized","pluginsReinitialization","setTimeout","reInitialization","reinitialization","scrollTop","goTop","updateHeaderSticky","stickyHeader","document","body","querySelectorAll","length","sticky","getInstance","update","id","className","children","iconName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/layout/components/scroll-top/ScrollTop.tsx"],"sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\nimport {\r\n  DrawerComponent,\r\n  ScrollTopComponent,\r\n  StickyComponent,\r\n  ToggleComponent,\r\n} from '../../../assets/ts/components'\r\nimport {KTIcon} from '../../../helpers'\r\n\r\nexport function ScrollTop() {\r\n  const {pathname} = useLocation()\r\n  const [initialized, setInintialized] = useState(false)\r\n\r\n  const pluginsReinitialization = () => {\r\n    setTimeout(() => {\r\n      StickyComponent.reInitialization()\r\n      setTimeout(() => {\r\n        ToggleComponent.reinitialization()\r\n        DrawerComponent.reinitialization()\r\n      }, 70)\r\n    }, 140)\r\n  }\r\n\r\n  const scrollTop = () => {\r\n    ScrollTopComponent.goTop()\r\n  }\r\n\r\n  const updateHeaderSticky = () => {\r\n    const stickyHeader = document.body.querySelectorAll(`[data-kt-sticky-name=\"header\"]`)\r\n    if (stickyHeader && stickyHeader.length > 0) {\r\n      const sticky = StickyComponent.getInstance(stickyHeader[0] as HTMLElement)\r\n      if (sticky) {\r\n        sticky.update()\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      setInintialized(true)\r\n    } else {\r\n      pluginsReinitialization()\r\n    }\r\n\r\n    updateHeaderSticky()\r\n    setTimeout(() => {\r\n      scrollTop()\r\n    }, 0)\r\n  }, [initialized, pathname])\r\n\r\n  return (\r\n    <div id='kt_scrolltop' className='scrolltop' data-kt-scrolltop='true'>\r\n      <KTIcon iconName='arrow-up' />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SACEC,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfC,eAAe,QACV,+BAA+B;AACtC,SAAQC,MAAM,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAACC;EAAQ,CAAC,GAAGV,WAAW,CAAC,CAAC;EAChC,MAAM,CAACW,WAAW,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEtD,MAAMc,uBAAuB,GAAGA,CAAA,KAAM;IACpCC,UAAU,CAAC,MAAM;MACfX,eAAe,CAACY,gBAAgB,CAAC,CAAC;MAClCD,UAAU,CAAC,MAAM;QACfV,eAAe,CAACY,gBAAgB,CAAC,CAAC;QAClCf,eAAe,CAACe,gBAAgB,CAAC,CAAC;MACpC,CAAC,EAAE,EAAE,CAAC;IACR,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBf,kBAAkB,CAACgB,KAAK,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAE,gCAA+B,CAAC;IACrF,IAAIH,YAAY,IAAIA,YAAY,CAACI,MAAM,GAAG,CAAC,EAAE;MAC3C,MAAMC,MAAM,GAAGtB,eAAe,CAACuB,WAAW,CAACN,YAAY,CAAC,CAAC,CAAgB,CAAC;MAC1E,IAAIK,MAAM,EAAE;QACVA,MAAM,CAACE,MAAM,CAAC,CAAC;MACjB;IACF;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,WAAW,EAAE;MAChBC,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLC,uBAAuB,CAAC,CAAC;IAC3B;IAEAM,kBAAkB,CAAC,CAAC;IACpBL,UAAU,CAAC,MAAM;MACfG,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,CAAC,CAAC;EACP,CAAC,EAAE,CAACN,WAAW,EAAED,QAAQ,CAAC,CAAC;EAE3B,oBACEH,OAAA;IAAKqB,EAAE,EAAC,cAAc;IAACC,SAAS,EAAC,WAAW;IAAC,qBAAkB,MAAM;IAAAC,QAAA,eACnEvB,OAAA,CAACF,MAAM;MAAC0B,QAAQ,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAAC1B,EAAA,CA9CeD,SAAS;EAAA,QACJR,WAAW;AAAA;AAAAoC,EAAA,GADhB5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}