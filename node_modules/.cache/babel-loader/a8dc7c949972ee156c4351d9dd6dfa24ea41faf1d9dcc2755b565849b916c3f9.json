{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/partials/widgets/_new/cards/CardsWidget17.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {FC, useEffect, useRef} from 'react'\r\nimport {KTIcon} from '../../../../helpers'\r\nimport {getCSSVariableValue} from '../../../../assets/ts/_utils'\r\nimport {useThemeMode} from '../../../layout/theme-mode/ThemeModeProvider'\r\n\r\n// type Props = {\r\n//   className: string\r\n//   chartSize?: number\r\n//   chartLine?: number\r\n//   chartRotate?: number\r\n// }\r\n\r\n// const CardsWidget17: FC<Props> = ({\r\n//   className,\r\n//   chartSize = 70,\r\n//   chartLine = 11,\r\n//   chartRotate = 145,\r\n// }) => {\r\n  // const chartRef = useRef<HTMLDivElement | null>(null)\r\n  // const {mode} = useThemeMode()\r\n  // useEffect(() => {\r\n    // refreshChart()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [mode])\r\n\r\n  // const refreshChart = () => {\r\n  //   if (!chartRef.current) {\r\n  //     return\r\n  //   }\r\n\r\n  //   setTimeout(() => {\r\n  //     initChart(chartSize, chartLine, chartRotate)\r\n  //   }, 10)\r\n  // }\r\n\r\n  // return (\r\n  //   <div className={`card card-flush ${className}`}>\r\n  //     <div className='card-header pt-5'>\r\n  //       <div className='card-title d-flex flex-column'>\r\n  //         <div className='d-flex align-items-center'>\r\n  //           <span className='fs-4 fw-semibold text-gray-400 me-1 align-self-start'>$</span>\r\n\r\n  //           <span className='fs-2hx fw-bold text-dark me-2 lh-1 ls-n2'>69,700</span>\r\n\r\n  //           <span className='badge badge-light-success fs-base'>\r\n  //             <KTIcon iconName='arrow-up' className='fs-5 text-success ms-n1' /> 2.2%\r\n  //           </span>\r\n  //         </div>\r\n  //         <span className='text-gray-400 pt-1 fw-semibold fs-6'>Projects Earnings in April</span>\r\n  //       </div>\r\n  //     </div>\r\n\r\n  //     <div className='card-body pt-2 pb-4 d-flex flex-wrap align-items-center'>\r\n  //       <div className='d-flex flex-center me-5 pt-2'>\r\n  //         <div\r\n  //           id='kt_card_widget_17_chart'\r\n  //           ref={chartRef}\r\n  //           style={{minWidth: chartSize + 'px', minHeight: chartSize + 'px'}}\r\n  //           data-kt-size={chartSize}\r\n  //           data-kt-line={chartLine}\r\n  //         ></div>\r\n  //       </div>\r\n\r\n  //       <div className='d-flex flex-column content-justify-center flex-row-fluid'>\r\n  //         <div className='d-flex fw-semibold align-items-center'>\r\n  //           <div className='bullet w-8px h-3px rounded-2 bg-success me-3'></div>\r\n  //           <div className='text-gray-500 flex-grow-1 me-4'>Leaf CRM</div>\r\n  //           <div className='fw-bolder text-gray-700 text-xxl-end'>$7,660</div>\r\n  //         </div>\r\n  //         <div className='d-flex fw-semibold align-items-center my-3'>\r\n  //           <div className='bullet w-8px h-3px rounded-2 bg-primary me-3'></div>\r\n  //           <div className='text-gray-500 flex-grow-1 me-4'>Mivy App</div>\r\n  //           <div className='fw-bolder text-gray-700 text-xxl-end'>$2,820</div>\r\n  //         </div>\r\n  //         <div className='d-flex fw-semibold align-items-center'>\r\n  //           <div\r\n  //             className='bullet w-8px h-3px rounded-2 me-3'\r\n  //             style={{backgroundColor: '#E4E6EF'}}\r\n  //           ></div>\r\n  //           <div className='text-gray-500 flex-grow-1 me-4'>Others</div>\r\n  //           <div className=' fw-bolder text-gray-700 text-xxl-end'>$45,257</div>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n// }\r\n\r\n// const initChart = function (\r\n//   chartSize: number = 70,\r\n//   chartLine: number = 11,\r\n//   chartRotate: number = 145\r\n// ) {\r\n//   const el = document.getElementById('kt_card_widget_17_chart')\r\n//   if (!el) {\r\n//     return\r\n//   }\r\n//   el.innerHTML = ''\r\n\r\n//   var options = {\r\n//     size: chartSize,\r\n//     lineWidth: chartLine,\r\n//     rotate: chartRotate,\r\n//     //percent:  el.getAttribute('data-kt-percent') ,\r\n//   }\r\n\r\n//   const canvas = document.createElement('canvas')\r\n//   const span = document.createElement('span')\r\n\r\n//   // @ts-ignore\r\n//   if (typeof G_vmlCanvasManager !== 'undefined') {\r\n//     // @ts-ignore\r\n//     G_vmlCanvasManager.initElement(canvas)\r\n//   }\r\n\r\n//   const ctx = canvas.getContext('2d')\r\n//   canvas.width = canvas.height = options.size\r\n\r\n//   el.appendChild(span)\r\n//   el.appendChild(canvas)\r\n\r\n  // @ts-ignore\r\n  // ctx.translate(options.size / 2, options.size / 2) // change center\r\n  // @ts-ignore\r\n  // ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI) // rotate -90 deg\r\n\r\n  //imd = ctx.getImageData(0, 0, 240, 240);\r\n  // const radius = (options.size - options.lineWidth) / 2\r\n\r\n  // const drawCircle = function (color: string, lineWidth: number, percent: number) {\r\n  //   percent = Math.min(Math.max(0, percent || 1), 1)\r\n  //   if (!ctx) {\r\n  //     return\r\n  //   }\r\n\r\n  //   ctx.beginPath()\r\n  //   ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false)\r\n  //   ctx.strokeStyle = color\r\n  //   ctx.lineCap = 'round' // butt, round or square\r\n  //   ctx.lineWidth = lineWidth\r\n  //   ctx.stroke()\r\n  // }\r\n\r\n  // Init 2\r\n  // drawCircle('#E4E6EF', options.lineWidth, 100 / 100)\r\n  // drawCircle(getCSSVariableValue('--bs-primary'), options.lineWidth, 100 / 150)\r\n  // drawCircle(getCSSVariableValue('--bs-success'), options.lineWidth, 100 / 250)\r\n// }\r\n\r\n// export {CardsWidget17}\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}