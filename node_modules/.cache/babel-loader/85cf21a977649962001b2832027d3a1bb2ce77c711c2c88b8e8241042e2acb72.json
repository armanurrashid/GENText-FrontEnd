{"ast":null,"code":"var _jsxFileName = \"E:\\\\GENText\\\\src\\\\_metronic\\\\partials\\\\content\\\\code-highlight\\\\CodeBlock.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Highlight } from 'prism-react-renderer';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeBlock = _ref => {\n  _s();\n  let {\n    code,\n    language\n  } = _ref;\n  const codeRef = useRef(null);\n  const [copied, setCopied] = useState(false);\n  useEffect(() => {\n    if (!copied) {\n      return;\n    }\n    setTimeout(() => {\n      setCopied(false);\n    }, 1500);\n  }, [copied]);\n  useEffect(() => {\n    if (!codeRef.current) {\n      return;\n    }\n    const prismCodeElement = codeRef.current.querySelector('.prism-code ');\n    if (prismCodeElement) {\n      prismCodeElement.style.background = 'none';\n      prismCodeElement.style.fontSize = '13px';\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlight\",\n      children: [/*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: \"top\",\n        overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n          id: \"tooltip-copy-to-clipboard\",\n          children: \"Copy Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 20\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: code,\n          onCopy: () => setCopied(true),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"highlight-copy btn\",\n            children: copied ? 'copied' : 'copy'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, 'copy-to-clipboard', false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight-code\",\n        ref: codeRef,\n        children: /*#__PURE__*/_jsxDEV(Highlight, {\n          code: code,\n          language: language,\n          children: _ref2 => {\n            let {\n              className,\n              style,\n              tokens,\n              getLineProps,\n              getTokenProps\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: className,\n              style: {\n                maxHeight: '300px',\n                ...style\n              },\n              children: tokens.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ...getLineProps({\n                  line,\n                  key: i\n                }),\n                children: line.map((token, key) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  ...getTokenProps({\n                    token,\n                    key\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeBlock, \"kJ1Wcs6ScucFQbCfmaIItBP7BQA=\");\n_c = CodeBlock;\nexport { CodeBlock };\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CopyToClipboard","Highlight","OverlayTrigger","Tooltip","jsxDEV","_jsxDEV","CodeBlock","_ref","_s","code","language","codeRef","copied","setCopied","setTimeout","current","prismCodeElement","querySelector","style","background","fontSize","className","children","placement","overlay","id","fileName","_jsxFileName","lineNumber","columnNumber","text","onCopy","ref","_ref2","tokens","getLineProps","getTokenProps","maxHeight","map","line","i","key","token","_c","$RefreshReg$"],"sources":["E:/GENText/src/_metronic/partials/content/code-highlight/CodeBlock.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect, useRef} from 'react'\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {Highlight} from 'prism-react-renderer'\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\n\ntype Props = {\n  code: string\n  language: string\n}\n\nconst CodeBlock: React.FC<Props> = ({code, language}) => {\n  const codeRef = useRef<HTMLDivElement | null>(null)\n  const [copied, setCopied] = useState(false)\n  useEffect(() => {\n    if (!copied) {\n      return\n    }\n\n    setTimeout(() => {\n      setCopied(false)\n    }, 1500)\n  }, [copied])\n\n  useEffect(() => {\n    if (!codeRef.current) {\n      return\n    }\n\n    const prismCodeElement = codeRef.current.querySelector('.prism-code ') as HTMLDivElement\n    if (prismCodeElement) {\n      prismCodeElement.style.background = 'none'\n      prismCodeElement.style.fontSize = '13px'\n    }\n  }, [])\n\n  return (\n    <div className='py-5'>\n      <div className='highlight'>\n        <OverlayTrigger\n          key='copy-to-clipboard'\n          placement='top'\n          overlay={<Tooltip id='tooltip-copy-to-clipboard'>Copy Code</Tooltip>}\n        >\n          <CopyToClipboard text={code} onCopy={() => setCopied(true)}>\n            <a className='highlight-copy btn'>{copied ? 'copied' : 'copy'}</a>\n          </CopyToClipboard>\n        </OverlayTrigger>\n\n        <div className='highlight-code' ref={codeRef}>\n          <Highlight code={code} language={language}>\n            {({className, style, tokens, getLineProps, getTokenProps}) => {\n              return (\n                <pre className={className} style={{maxHeight: '300px', ...style}}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({line, key: i})}>\n                      {line.map((token, key) => (\n                        <span {...getTokenProps({token, key})} />\n                      ))}\n                    </div>\n                  ))}\n                </pre>\n              )\n            }}\n          </Highlight>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport {CodeBlock}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}