{"ast":null,"code":"import { getScrollTop, getAttributeValueByBreakpoint, throttle, getObjectPropertyValueByKey, stringSnakeToCamel, getUniqueIdWithPrefix, DataUtil, ElementAnimateUtil } from '../_utils/index';\nconst defaultScrollTopOptions = {\n  offset: 200,\n  speed: 600\n};\nclass ScrollTopComponent {\n  constructor(_element, options) {\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this._handlers = () => {\n      let timer;\n      window.addEventListener('scroll', () => {\n        throttle(timer, () => {\n          this._scroll();\n        });\n      });\n      this.element.addEventListener('click', e => {\n        e.preventDefault();\n        this._go();\n      });\n    };\n    this._scroll = () => {\n      const offset = parseInt(this._getOption('offset'));\n      const pos = getScrollTop(); // current vertical position\n      if (pos > offset) {\n        if (!document.body.hasAttribute('data-kt-scrolltop')) {\n          document.body.setAttribute('data-kt-scrolltop', 'on');\n        }\n      } else {\n        if (document.body.hasAttribute('data-kt-scrolltop')) {\n          document.body.removeAttribute('data-kt-scrolltop');\n        }\n      }\n    };\n    this._go = () => {\n      const speed = parseInt(this._getOption('speed'));\n      ElementAnimateUtil.scrollTop(0, speed);\n    };\n    this._getOption = name => {\n      const attr = this.element.getAttribute(`data-kt-scrolltop-${name}`);\n      if (attr) {\n        const value = getAttributeValueByBreakpoint(attr);\n        return value !== null && String(value) === 'true';\n      }\n      const optionName = stringSnakeToCamel(name);\n      const option = getObjectPropertyValueByKey(this.options, optionName);\n      if (option) {\n        return getAttributeValueByBreakpoint(option);\n      }\n      return null;\n    };\n    ///////////////////////\n    // ** Public API  ** //\n    ///////////////////////\n    // Plugin API\n    this.go = () => {\n      return this._go();\n    };\n    this.getElement = () => {\n      return this.element;\n    };\n    this.element = _element;\n    this.options = Object.assign(defaultScrollTopOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('scrolltop');\n\n    // Event Handlers\n    this._handlers();\n\n    // Bind Instance\n    DataUtil.set(this.element, 'scrolltop', this);\n  }\n}\n// Static methods\nScrollTopComponent.getInstance = el => {\n  const scrollTop = DataUtil.get(el, 'scrolltop');\n  if (scrollTop) {\n    return scrollTop;\n  }\n};\nScrollTopComponent.createInstances = selector => {\n  const elements = document.body.querySelectorAll(selector);\n  elements.forEach(el => {\n    const item = el;\n    let scrollTop = ScrollTopComponent.getInstance(item);\n    if (!scrollTop) {\n      scrollTop = new ScrollTopComponent(item, defaultScrollTopOptions);\n    }\n  });\n};\nScrollTopComponent.createInsance = function (selector) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultScrollTopOptions;\n  const element = document.body.querySelector(selector);\n  if (!element) {\n    return;\n  }\n  const item = element;\n  let scrollTop = ScrollTopComponent.getInstance(item);\n  if (!scrollTop) {\n    scrollTop = new ScrollTopComponent(item, options);\n  }\n  return scrollTop;\n};\nScrollTopComponent.bootstrap = () => {\n  ScrollTopComponent.createInstances('[data-kt-scrolltop=\"true\"]');\n};\nScrollTopComponent.reinitialization = () => {\n  ScrollTopComponent.createInstances('[data-kt-scrolltop=\"true\"]');\n};\nScrollTopComponent.goTop = () => {\n  ElementAnimateUtil.scrollTop(0, defaultScrollTopOptions.speed);\n};\nexport { ScrollTopComponent, defaultScrollTopOptions };","map":{"version":3,"names":["getScrollTop","getAttributeValueByBreakpoint","throttle","getObjectPropertyValueByKey","stringSnakeToCamel","getUniqueIdWithPrefix","DataUtil","ElementAnimateUtil","defaultScrollTopOptions","offset","speed","ScrollTopComponent","constructor","_element","options","element","instanceUid","_handlers","timer","window","addEventListener","_scroll","e","preventDefault","_go","parseInt","_getOption","pos","document","body","hasAttribute","setAttribute","removeAttribute","scrollTop","name","attr","getAttribute","value","String","optionName","option","go","getElement","Object","assign","set","getInstance","el","get","createInstances","selector","elements","querySelectorAll","forEach","item","createInsance","arguments","length","undefined","querySelector","bootstrap","reinitialization","goTop"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/assets/ts/components/_ScrollTopComponent.ts"],"sourcesContent":["import {\r\n  getScrollTop,\r\n  getAttributeValueByBreakpoint,\r\n  throttle,\r\n  getObjectPropertyValueByKey,\r\n  stringSnakeToCamel,\r\n  getUniqueIdWithPrefix,\r\n  DataUtil,\r\n  ElementAnimateUtil,\r\n} from '../_utils/index'\r\n\r\nexport interface IScrollTopOptions {\r\n  offset: number\r\n  speed: number\r\n}\r\n\r\nconst defaultScrollTopOptions: IScrollTopOptions = {\r\n  offset: 200,\r\n  speed: 600,\r\n}\r\n\r\nclass ScrollTopComponent {\r\n  element: HTMLElement\r\n  options: IScrollTopOptions\r\n  instanceUid: string\r\n\r\n  constructor(_element: HTMLElement, options: IScrollTopOptions) {\r\n    this.element = _element\r\n    this.options = Object.assign(defaultScrollTopOptions, options)\r\n    this.instanceUid = getUniqueIdWithPrefix('scrolltop')\r\n\r\n    // Event Handlers\r\n    this._handlers()\r\n\r\n    // Bind Instance\r\n    DataUtil.set(this.element, 'scrolltop', this)\r\n  }\r\n\r\n  private _handlers = () => {\r\n    let timer: number\r\n    window.addEventListener('scroll', () => {\r\n      throttle(timer, () => {\r\n        this._scroll()\r\n      })\r\n    })\r\n\r\n    this.element.addEventListener('click', (e: Event) => {\r\n      e.preventDefault()\r\n      this._go()\r\n    })\r\n  }\r\n\r\n  private _scroll = () => {\r\n    const offset = parseInt(this._getOption('offset') as string)\r\n    const pos = getScrollTop() // current vertical position\r\n    if (pos > offset) {\r\n      if (!document.body.hasAttribute('data-kt-scrolltop')) {\r\n        document.body.setAttribute('data-kt-scrolltop', 'on')\r\n      }\r\n    } else {\r\n      if (document.body.hasAttribute('data-kt-scrolltop')) {\r\n        document.body.removeAttribute('data-kt-scrolltop')\r\n      }\r\n    }\r\n  }\r\n\r\n  private _go = () => {\r\n    const speed = parseInt(this._getOption('speed') as string)\r\n    ElementAnimateUtil.scrollTop(0, speed)\r\n  }\r\n\r\n  private _getOption = (name: string) => {\r\n    const attr = this.element.getAttribute(`data-kt-scrolltop-${name}`)\r\n    if (attr) {\r\n      const value = getAttributeValueByBreakpoint(attr)\r\n      return value !== null && String(value) === 'true'\r\n    }\r\n\r\n    const optionName = stringSnakeToCamel(name)\r\n    const option = getObjectPropertyValueByKey(this.options, optionName)\r\n    if (option) {\r\n      return getAttributeValueByBreakpoint(option)\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  ///////////////////////\r\n  // ** Public API  ** //\r\n  ///////////////////////\r\n\r\n  // Plugin API\r\n  public go = () => {\r\n    return this._go()\r\n  }\r\n\r\n  public getElement = () => {\r\n    return this.element\r\n  }\r\n\r\n  // Static methods\r\n  public static getInstance = (el: HTMLElement): ScrollTopComponent | undefined => {\r\n    const scrollTop = DataUtil.get(el, 'scrolltop')\r\n    if (scrollTop) {\r\n      return scrollTop as ScrollTopComponent\r\n    }\r\n  }\r\n\r\n  public static createInstances = (selector: string) => {\r\n    const elements = document.body.querySelectorAll(selector)\r\n    elements.forEach((el) => {\r\n      const item = el as HTMLElement\r\n      let scrollTop = ScrollTopComponent.getInstance(item)\r\n      if (!scrollTop) {\r\n        scrollTop = new ScrollTopComponent(item, defaultScrollTopOptions)\r\n      }\r\n    })\r\n  }\r\n\r\n  public static createInsance = (\r\n    selector: string,\r\n    options: IScrollTopOptions = defaultScrollTopOptions\r\n  ): ScrollTopComponent | undefined => {\r\n    const element = document.body.querySelector(selector)\r\n    if (!element) {\r\n      return\r\n    }\r\n    const item = element as HTMLElement\r\n    let scrollTop = ScrollTopComponent.getInstance(item)\r\n    if (!scrollTop) {\r\n      scrollTop = new ScrollTopComponent(item, options)\r\n    }\r\n    return scrollTop\r\n  }\r\n\r\n  public static bootstrap = () => {\r\n    ScrollTopComponent.createInstances('[data-kt-scrolltop=\"true\"]')\r\n  }\r\n\r\n  public static reinitialization = () => {\r\n    ScrollTopComponent.createInstances('[data-kt-scrolltop=\"true\"]')\r\n  }\r\n\r\n  public static goTop = () => {\r\n    ElementAnimateUtil.scrollTop(0, defaultScrollTopOptions.speed)\r\n  }\r\n}\r\nexport {ScrollTopComponent, defaultScrollTopOptions}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}