{"ast":null,"code":"import { DataUtil, getUniqueIdWithPrefix, EventHandlerUtil } from '../_utils/index';\n// Helpers\nimport { CookieComponent } from './_CookieComponent';\nconst defaultToggleOptions = {\n  saveState: false\n};\nclass ToggleComponent {\n  constructor(_element, options) {\n    this.element = void 0;\n    this.instanceUid = void 0;\n    this.options = void 0;\n    this.state = '';\n    this.mode = '';\n    this.target = null;\n    this.attribute = '';\n    this._handlers = () => {\n      this.element.addEventListener('click', e => {\n        e.preventDefault();\n        if (this.mode === '') {\n          this._toggle();\n          return;\n        }\n        if (this.mode === 'off' && !this._isEnabled()) {\n          this._toggle();\n        } else if (this.mode === 'on' && this._isEnabled()) {\n          this._toggle();\n        }\n      });\n    };\n    // Event handlers\n    this._toggle = () => {\n      // Trigger \"after.toggle\" event\n      EventHandlerUtil.trigger(this.element, 'kt.toggle.change');\n      if (this._isEnabled()) {\n        this._disable();\n      } else {\n        this._enable();\n      }\n\n      // Trigger \"before.toggle\" event\n      EventHandlerUtil.trigger(this.element, 'kt.toggle.changed');\n      return this;\n    };\n    this._enable = () => {\n      var _this$target;\n      if (this._isEnabled()) {\n        return;\n      }\n      EventHandlerUtil.trigger(this.element, 'kt.toggle.enable');\n      (_this$target = this.target) === null || _this$target === void 0 ? void 0 : _this$target.setAttribute(this.attribute, 'on');\n      if (this.state.length > 0) {\n        this.element.classList.add(this.state);\n      }\n      if (this.options.saveState) {\n        CookieComponent.set(this.attribute, 'on', {});\n      }\n      EventHandlerUtil.trigger(this.element, 'kt.toggle.enabled');\n      return this;\n    };\n    this._disable = () => {\n      var _this$target2;\n      if (!this._isEnabled()) {\n        return false;\n      }\n      EventHandlerUtil.trigger(this.element, 'kt.toggle.disable');\n      (_this$target2 = this.target) === null || _this$target2 === void 0 ? void 0 : _this$target2.removeAttribute(this.attribute);\n      if (this.state.length > 0) {\n        this.element.classList.remove(this.state);\n      }\n      if (this.options.saveState) {\n        CookieComponent.delete(this.attribute);\n      }\n      EventHandlerUtil.trigger(this.element, 'kt.toggle.disabled');\n      return this;\n    };\n    this._isEnabled = () => {\n      if (!this.target) {\n        return false;\n      }\n      return String(this.target.getAttribute(this.attribute)).toLowerCase() === 'on';\n    };\n    ///////////////////////\n    // ** Public API  ** //\n    ///////////////////////\n    // Plugin API\n    // Plugin API\n    this.toggle = () => {\n      return this._toggle();\n    };\n    this.enable = () => {\n      return this._enable();\n    };\n    this.disable = () => {\n      return this._disable();\n    };\n    this.isEnabled = () => {\n      return this._isEnabled();\n    };\n    this.goElement = () => {\n      return this.element;\n    };\n    // Event API\n    this.on = (name, handler) => {\n      return EventHandlerUtil.on(this.element, name, handler);\n    };\n    this.one = (name, handler) => {\n      return EventHandlerUtil.one(this.element, name, handler);\n    };\n    this.off = (name, handlerId) => {\n      return EventHandlerUtil.off(this.element, name, handlerId);\n    };\n    this.trigger = (name, event) => {\n      return EventHandlerUtil.trigger(this.element, name, event);\n    };\n    this.options = Object.assign(defaultToggleOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('toggle');\n    this.element = _element;\n    const elementTargetAttr = this.element.getAttribute('data-kt-toggle-target');\n    if (elementTargetAttr) {\n      this.target = document.querySelector(elementTargetAttr);\n    }\n    const elementToggleAttr = this.element.getAttribute('data-kt-toggle-state');\n    this.state = elementToggleAttr || '';\n    const elementModeAttr = this.element.getAttribute('data-kt-toggle-mode');\n    this.mode = elementModeAttr || '';\n    this.attribute = 'data-kt-' + this.element.getAttribute('data-kt-toggle-name');\n\n    // Event Handlers\n    this._handlers();\n\n    // Update Instance\n    // Bind Instance\n    DataUtil.set(this.element, 'toggle', this);\n  }\n}\n// Static methods\nToggleComponent.getInstance = el => {\n  const toggleElement = DataUtil.get(el, 'toggle');\n  if (toggleElement) {\n    return toggleElement;\n  }\n  return null;\n};\nToggleComponent.createInstances = selector => {\n  const elements = document.body.querySelectorAll(selector);\n  elements.forEach(el => {\n    let toggle = ToggleComponent.getInstance(el);\n    if (!toggle) {\n      toggle = new ToggleComponent(el, defaultToggleOptions);\n    }\n  });\n};\nToggleComponent.reinitialization = () => {\n  ToggleComponent.createInstances('[data-kt-toggle]');\n};\nToggleComponent.bootstrap = () => {\n  ToggleComponent.createInstances('[data-kt-toggle]');\n};\nexport { ToggleComponent, defaultToggleOptions };","map":{"version":3,"names":["DataUtil","getUniqueIdWithPrefix","EventHandlerUtil","CookieComponent","defaultToggleOptions","saveState","ToggleComponent","constructor","_element","options","element","instanceUid","state","mode","target","attribute","_handlers","addEventListener","e","preventDefault","_toggle","_isEnabled","trigger","_disable","_enable","_this$target","setAttribute","length","classList","add","set","_this$target2","removeAttribute","remove","delete","String","getAttribute","toLowerCase","toggle","enable","disable","isEnabled","goElement","on","name","handler","one","off","handlerId","event","Object","assign","elementTargetAttr","document","querySelector","elementToggleAttr","elementModeAttr","getInstance","el","toggleElement","get","createInstances","selector","elements","body","querySelectorAll","forEach","reinitialization","bootstrap"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/assets/ts/components/_ToggleComponent.ts"],"sourcesContent":["import {DataUtil, getUniqueIdWithPrefix, EventHandlerUtil} from '../_utils/index'\r\n// Helpers\r\nimport {CookieComponent} from './_CookieComponent'\r\n\r\nexport interface ToggleOptions {\r\n  saveState: boolean\r\n  targetState?: string\r\n  toggleState?: string\r\n  targetToggleMode?: string\r\n}\r\n\r\nconst defaultToggleOptions: ToggleOptions = {\r\n  saveState: false,\r\n}\r\n\r\nclass ToggleComponent {\r\n  element: HTMLElement\r\n  instanceUid: string\r\n  options: ToggleOptions\r\n  state: string = ''\r\n  mode: string = ''\r\n  target: HTMLElement | null = null\r\n  attribute: string = ''\r\n\r\n  constructor(_element: HTMLElement, options: ToggleOptions) {\r\n    this.options = Object.assign(defaultToggleOptions, options)\r\n    this.instanceUid = getUniqueIdWithPrefix('toggle')\r\n    this.element = _element\r\n\r\n    const elementTargetAttr = this.element.getAttribute('data-kt-toggle-target')\r\n    if (elementTargetAttr) {\r\n      this.target = document.querySelector(elementTargetAttr)\r\n    }\r\n    const elementToggleAttr = this.element.getAttribute('data-kt-toggle-state')\r\n    this.state = elementToggleAttr || ''\r\n    const elementModeAttr = this.element.getAttribute('data-kt-toggle-mode')\r\n    this.mode = elementModeAttr || ''\r\n    this.attribute = 'data-kt-' + this.element.getAttribute('data-kt-toggle-name')\r\n\r\n    // Event Handlers\r\n    this._handlers()\r\n\r\n    // Update Instance\r\n    // Bind Instance\r\n    DataUtil.set(this.element, 'toggle', this)\r\n  }\r\n\r\n  private _handlers = () => {\r\n    this.element.addEventListener('click', (e: Event) => {\r\n      e.preventDefault()\r\n\r\n      if (this.mode === '') {\r\n        this._toggle()\r\n        return\r\n      }\r\n\r\n      if (this.mode === 'off' && !this._isEnabled()) {\r\n        this._toggle()\r\n      } else if (this.mode === 'on' && this._isEnabled()) {\r\n        this._toggle()\r\n      }\r\n    })\r\n  }\r\n\r\n  // Event handlers\r\n  private _toggle = () => {\r\n    // Trigger \"after.toggle\" event\r\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.change')\r\n\r\n    if (this._isEnabled()) {\r\n      this._disable()\r\n    } else {\r\n      this._enable()\r\n    }\r\n\r\n    // Trigger \"before.toggle\" event\r\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.changed')\r\n    return this\r\n  }\r\n\r\n  private _enable = () => {\r\n    if (this._isEnabled()) {\r\n      return\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.enable')\r\n    this.target?.setAttribute(this.attribute, 'on')\r\n    if (this.state.length > 0) {\r\n      this.element.classList.add(this.state)\r\n    }\r\n\r\n    if (this.options.saveState) {\r\n      CookieComponent.set(this.attribute, 'on', {})\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.enabled')\r\n    return this\r\n  }\r\n\r\n  private _disable = () => {\r\n    if (!this._isEnabled()) {\r\n      return false\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.disable')\r\n    this.target?.removeAttribute(this.attribute)\r\n\r\n    if (this.state.length > 0) {\r\n      this.element.classList.remove(this.state)\r\n    }\r\n\r\n    if (this.options.saveState) {\r\n      CookieComponent.delete(this.attribute)\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.toggle.disabled')\r\n    return this\r\n  }\r\n\r\n  private _isEnabled = () => {\r\n    if (!this.target) {\r\n      return false\r\n    }\r\n\r\n    return String(this.target.getAttribute(this.attribute)).toLowerCase() === 'on'\r\n  }\r\n\r\n  ///////////////////////\r\n  // ** Public API  ** //\r\n  ///////////////////////\r\n\r\n  // Plugin API\r\n  // Plugin API\r\n  public toggle = () => {\r\n    return this._toggle()\r\n  }\r\n\r\n  public enable = () => {\r\n    return this._enable()\r\n  }\r\n\r\n  public disable = () => {\r\n    return this._disable()\r\n  }\r\n\r\n  public isEnabled = () => {\r\n    return this._isEnabled()\r\n  }\r\n\r\n  public goElement = () => {\r\n    return this.element\r\n  }\r\n\r\n  // Event API\r\n  public on = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, handler)\r\n  }\r\n\r\n  public one = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, handler)\r\n  }\r\n\r\n  public off = (name: string, handlerId: string) => {\r\n    return EventHandlerUtil.off(this.element, name, handlerId)\r\n  }\r\n\r\n  public trigger = (name: string, event?: Event) => {\r\n    return EventHandlerUtil.trigger(this.element, name, event)\r\n  }\r\n\r\n  // Static methods\r\n  public static getInstance = (el: HTMLElement) => {\r\n    const toggleElement = DataUtil.get(el, 'toggle')\r\n    if (toggleElement) {\r\n      return toggleElement\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  public static createInstances = (selector: string) => {\r\n    const elements = document.body.querySelectorAll<HTMLElement>(selector)\r\n    elements.forEach((el) => {\r\n      let toggle = ToggleComponent.getInstance(el)\r\n      if (!toggle) {\r\n        toggle = new ToggleComponent(el, defaultToggleOptions)\r\n      }\r\n    })\r\n  }\r\n\r\n  public static reinitialization = () => {\r\n    ToggleComponent.createInstances('[data-kt-toggle]')\r\n  }\r\n\r\n  public static bootstrap = () => {\r\n    ToggleComponent.createInstances('[data-kt-toggle]')\r\n  }\r\n}\r\n\r\nexport {ToggleComponent, defaultToggleOptions}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}