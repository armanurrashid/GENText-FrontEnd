{"ast":null,"code":"var _jsxFileName = \"E:\\\\tappware Task\\\\react app\\\\GENText-FrontEnd\\\\src\\\\_metronic\\\\layout\\\\components\\\\toolbar\\\\ToolbarWrapper.tsx\",\n  _s = $RefreshSig$();\nimport clsx from 'clsx';\nimport { useLayout } from '../../core';\nimport { Toolbar } from './Toolbar';\nimport { PageTitleWrapper } from './page-title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToolbarWrapper = () => {\n  _s();\n  var _config$app, _config$app$toolbar, _config$app2, _config$app2$toolbar, _config$app3, _config$app3$pageTitl, _config$app4, _config$app4$toolbar, _config$app5, _config$app5$toolbar, _config$app6, _config$app6$toolbar, _config$app6$toolbar$, _config$app7, _config$app7$toolbar, _config$app8, _config$app8$toolbar;\n  const {\n    config,\n    classes\n  } = useLayout();\n  if (!((_config$app = config.app) !== null && _config$app !== void 0 && (_config$app$toolbar = _config$app.toolbar) !== null && _config$app$toolbar !== void 0 && _config$app$toolbar.display)) {\n    return null;\n  }\n  const isPageTitleVisible = showPageTitle((_config$app2 = config.app) === null || _config$app2 === void 0 ? void 0 : (_config$app2$toolbar = _config$app2.toolbar) === null || _config$app2$toolbar === void 0 ? void 0 : _config$app2$toolbar.layout, (_config$app3 = config.app) === null || _config$app3 === void 0 ? void 0 : (_config$app3$pageTitl = _config$app3.pageTitle) === null || _config$app3$pageTitl === void 0 ? void 0 : _config$app3$pageTitl.display);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"kt_app_toolbar\",\n    className: clsx('app-toolbar', classes.toolbar.join(' '), config === null || config === void 0 ? void 0 : (_config$app4 = config.app) === null || _config$app4 === void 0 ? void 0 : (_config$app4$toolbar = _config$app4.toolbar) === null || _config$app4$toolbar === void 0 ? void 0 : _config$app4$toolbar.class),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"kt_app_toolbar_container\",\n      className: clsx('app-container', classes.toolbarContainer.join(' '), (_config$app5 = config.app) === null || _config$app5 === void 0 ? void 0 : (_config$app5$toolbar = _config$app5.toolbar) === null || _config$app5$toolbar === void 0 ? void 0 : _config$app5$toolbar.containerClass, (_config$app6 = config.app) !== null && _config$app6 !== void 0 && (_config$app6$toolbar = _config$app6.toolbar) !== null && _config$app6$toolbar !== void 0 && (_config$app6$toolbar$ = _config$app6$toolbar.minimize) !== null && _config$app6$toolbar$ !== void 0 && _config$app6$toolbar$.enabled ? 'app-toolbar-minimize' : '', {\n        'container-fluid': ((_config$app7 = config.app) === null || _config$app7 === void 0 ? void 0 : (_config$app7$toolbar = _config$app7.toolbar) === null || _config$app7$toolbar === void 0 ? void 0 : _config$app7$toolbar.container) === 'fluid',\n        'container-xxl': ((_config$app8 = config.app) === null || _config$app8 === void 0 ? void 0 : (_config$app8$toolbar = _config$app8.toolbar) === null || _config$app8$toolbar === void 0 ? void 0 : _config$app8$toolbar.container) === 'fixed'\n      }),\n      children: [isPageTitleVisible && /*#__PURE__*/_jsxDEV(PageTitleWrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(ToolbarWrapper, \"ZcpBImJRdxvhn2TlOHbNXtILdJg=\", false, function () {\n  return [useLayout];\n});\n_c = ToolbarWrapper;\nconst showPageTitle = (appToolbarLayout, appPageTitleDisplay) => {\n  const viewsWithPageTitles = ['classic', 'reports', 'saas'];\n  if (!appToolbarLayout || !appPageTitleDisplay) {\n    return false;\n  }\n  return appPageTitleDisplay && viewsWithPageTitles.some(t => t === appToolbarLayout);\n};\nexport { ToolbarWrapper };\nvar _c;\n$RefreshReg$(_c, \"ToolbarWrapper\");","map":{"version":3,"names":["clsx","useLayout","Toolbar","PageTitleWrapper","jsxDEV","_jsxDEV","ToolbarWrapper","_s","_config$app","_config$app$toolbar","_config$app2","_config$app2$toolbar","_config$app3","_config$app3$pageTitl","_config$app4","_config$app4$toolbar","_config$app5","_config$app5$toolbar","_config$app6","_config$app6$toolbar","_config$app6$toolbar$","_config$app7","_config$app7$toolbar","_config$app8","_config$app8$toolbar","config","classes","app","toolbar","display","isPageTitleVisible","showPageTitle","layout","pageTitle","id","className","join","class","children","toolbarContainer","containerClass","minimize","enabled","container","fileName","_jsxFileName","lineNumber","columnNumber","_c","appToolbarLayout","appPageTitleDisplay","viewsWithPageTitles","some","t","$RefreshReg$"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/layout/components/toolbar/ToolbarWrapper.tsx"],"sourcesContent":["import clsx from 'clsx'\r\nimport {ToolbarType, useLayout} from '../../core'\r\nimport {Toolbar} from './Toolbar'\r\nimport {PageTitleWrapper} from './page-title'\r\n\r\nconst ToolbarWrapper = () => {\r\n  const {config, classes} = useLayout()\r\n  if (!config.app?.toolbar?.display) {\r\n    return null\r\n  }\r\n\r\n  const isPageTitleVisible = showPageTitle(\r\n    config.app?.toolbar?.layout,\r\n    config.app?.pageTitle?.display\r\n  )\r\n\r\n  return (\r\n    <div\r\n      id='kt_app_toolbar'\r\n      className={clsx('app-toolbar', classes.toolbar.join(' '), config?.app?.toolbar?.class)}\r\n    >\r\n      <div\r\n        id='kt_app_toolbar_container'\r\n        className={clsx(\r\n          'app-container',\r\n          classes.toolbarContainer.join(' '),\r\n          config.app?.toolbar?.containerClass,\r\n          config.app?.toolbar?.minimize?.enabled ? 'app-toolbar-minimize' : '',\r\n          {\r\n            'container-fluid': config.app?.toolbar?.container === 'fluid',\r\n            'container-xxl': config.app?.toolbar?.container === 'fixed',\r\n          }\r\n        )}\r\n      >\r\n        {isPageTitleVisible && <PageTitleWrapper />}\r\n        <Toolbar />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst showPageTitle = (appToolbarLayout?: ToolbarType, appPageTitleDisplay?: boolean): boolean => {\r\n  const viewsWithPageTitles = ['classic', 'reports', 'saas']\r\n  if (!appToolbarLayout || !appPageTitleDisplay) {\r\n    return false\r\n  }\r\n\r\n  return appPageTitleDisplay && viewsWithPageTitles.some((t) => t === appToolbarLayout)\r\n}\r\n\r\nexport {ToolbarWrapper}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}