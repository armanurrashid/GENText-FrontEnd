{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:/GENText/src/_metronic/partials/widgets/_new/cards/CardsWidget17.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {FC, useEffect, useRef} from 'react'\nimport {KTIcon} from '../../../../helpers'\nimport {getCSSVariableValue} from '../../../../assets/ts/_utils'\nimport {useThemeMode} from '../../../layout/theme-mode/ThemeModeProvider'\n\n// type Props = {\n//   className: string\n//   chartSize?: number\n//   chartLine?: number\n//   chartRotate?: number\n// }\n\n// const CardsWidget17: FC<Props> = ({\n//   className,\n//   chartSize = 70,\n//   chartLine = 11,\n//   chartRotate = 145,\n// }) => {\n  // const chartRef = useRef<HTMLDivElement | null>(null)\n  // const {mode} = useThemeMode()\n  // useEffect(() => {\n    // refreshChart()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [mode])\n\n  // const refreshChart = () => {\n  //   if (!chartRef.current) {\n  //     return\n  //   }\n\n  //   setTimeout(() => {\n  //     initChart(chartSize, chartLine, chartRotate)\n  //   }, 10)\n  // }\n\n  // return (\n  //   <div className={`card card-flush ${className}`}>\n  //     <div className='card-header pt-5'>\n  //       <div className='card-title d-flex flex-column'>\n  //         <div className='d-flex align-items-center'>\n  //           <span className='fs-4 fw-semibold text-gray-400 me-1 align-self-start'>$</span>\n\n  //           <span className='fs-2hx fw-bold text-dark me-2 lh-1 ls-n2'>69,700</span>\n\n  //           <span className='badge badge-light-success fs-base'>\n  //             <KTIcon iconName='arrow-up' className='fs-5 text-success ms-n1' /> 2.2%\n  //           </span>\n  //         </div>\n  //         <span className='text-gray-400 pt-1 fw-semibold fs-6'>Projects Earnings in April</span>\n  //       </div>\n  //     </div>\n\n  //     <div className='card-body pt-2 pb-4 d-flex flex-wrap align-items-center'>\n  //       <div className='d-flex flex-center me-5 pt-2'>\n  //         <div\n  //           id='kt_card_widget_17_chart'\n  //           ref={chartRef}\n  //           style={{minWidth: chartSize + 'px', minHeight: chartSize + 'px'}}\n  //           data-kt-size={chartSize}\n  //           data-kt-line={chartLine}\n  //         ></div>\n  //       </div>\n\n  //       <div className='d-flex flex-column content-justify-center flex-row-fluid'>\n  //         <div className='d-flex fw-semibold align-items-center'>\n  //           <div className='bullet w-8px h-3px rounded-2 bg-success me-3'></div>\n  //           <div className='text-gray-500 flex-grow-1 me-4'>Leaf CRM</div>\n  //           <div className='fw-bolder text-gray-700 text-xxl-end'>$7,660</div>\n  //         </div>\n  //         <div className='d-flex fw-semibold align-items-center my-3'>\n  //           <div className='bullet w-8px h-3px rounded-2 bg-primary me-3'></div>\n  //           <div className='text-gray-500 flex-grow-1 me-4'>Mivy App</div>\n  //           <div className='fw-bolder text-gray-700 text-xxl-end'>$2,820</div>\n  //         </div>\n  //         <div className='d-flex fw-semibold align-items-center'>\n  //           <div\n  //             className='bullet w-8px h-3px rounded-2 me-3'\n  //             style={{backgroundColor: '#E4E6EF'}}\n  //           ></div>\n  //           <div className='text-gray-500 flex-grow-1 me-4'>Others</div>\n  //           <div className=' fw-bolder text-gray-700 text-xxl-end'>$45,257</div>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   </div>\n  // )\n// }\n\n// const initChart = function (\n//   chartSize: number = 70,\n//   chartLine: number = 11,\n//   chartRotate: number = 145\n// ) {\n//   const el = document.getElementById('kt_card_widget_17_chart')\n//   if (!el) {\n//     return\n//   }\n//   el.innerHTML = ''\n\n//   var options = {\n//     size: chartSize,\n//     lineWidth: chartLine,\n//     rotate: chartRotate,\n//     //percent:  el.getAttribute('data-kt-percent') ,\n//   }\n\n//   const canvas = document.createElement('canvas')\n//   const span = document.createElement('span')\n\n//   // @ts-ignore\n//   if (typeof G_vmlCanvasManager !== 'undefined') {\n//     // @ts-ignore\n//     G_vmlCanvasManager.initElement(canvas)\n//   }\n\n//   const ctx = canvas.getContext('2d')\n//   canvas.width = canvas.height = options.size\n\n//   el.appendChild(span)\n//   el.appendChild(canvas)\n\n  // @ts-ignore\n  // ctx.translate(options.size / 2, options.size / 2) // change center\n  // @ts-ignore\n  // ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI) // rotate -90 deg\n\n  //imd = ctx.getImageData(0, 0, 240, 240);\n  // const radius = (options.size - options.lineWidth) / 2\n\n  // const drawCircle = function (color: string, lineWidth: number, percent: number) {\n  //   percent = Math.min(Math.max(0, percent || 1), 1)\n  //   if (!ctx) {\n  //     return\n  //   }\n\n  //   ctx.beginPath()\n  //   ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false)\n  //   ctx.strokeStyle = color\n  //   ctx.lineCap = 'round' // butt, round or square\n  //   ctx.lineWidth = lineWidth\n  //   ctx.stroke()\n  // }\n\n  // Init 2\n  // drawCircle('#E4E6EF', options.lineWidth, 100 / 100)\n  // drawCircle(getCSSVariableValue('--bs-primary'), options.lineWidth, 100 / 150)\n  // drawCircle(getCSSVariableValue('--bs-success'), options.lineWidth, 100 / 250)\n// }\n\n// export {CardsWidget17}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}