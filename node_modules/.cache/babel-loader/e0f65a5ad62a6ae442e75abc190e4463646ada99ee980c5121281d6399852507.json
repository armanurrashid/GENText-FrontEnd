{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useLayout } from '../layout/core';\nimport { ThemeModeComponent } from '../assets/ts/layout';\nexport const toAbsoluteUrl = pathname => process.env.PUBLIC_URL + pathname;\nexport const useIllustrationsPath = illustrationName => {\n  _s();\n  var _config$illustrations;\n  const {\n    config\n  } = useLayout();\n  const extension = illustrationName.substring(illustrationName.lastIndexOf('.'), illustrationName.length);\n  const illustration = ThemeModeComponent.getMode() === 'dark' ? `${illustrationName.substring(0, illustrationName.lastIndexOf('.'))}-dark` : illustrationName.substring(0, illustrationName.lastIndexOf('.'));\n  return toAbsoluteUrl(`/media/illustrations/${(_config$illustrations = config.illustrations) === null || _config$illustrations === void 0 ? void 0 : _config$illustrations.set}/${illustration}${extension}`);\n};\n_s(useIllustrationsPath, \"tLT2zkhWE0Pm2ewyPzsVsFB5cSM=\", false, function () {\n  return [useLayout];\n});","map":{"version":3,"names":["useLayout","ThemeModeComponent","toAbsoluteUrl","pathname","process","env","PUBLIC_URL","useIllustrationsPath","illustrationName","_s","_config$illustrations","config","extension","substring","lastIndexOf","length","illustration","getMode","illustrations","set"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/helpers/AssetHelpers.ts"],"sourcesContent":["import {useLayout} from '../layout/core'\r\nimport {ThemeModeComponent} from '../assets/ts/layout'\r\n\r\nexport const toAbsoluteUrl = (pathname: string) => process.env.PUBLIC_URL + pathname\r\n\r\nexport const useIllustrationsPath = (illustrationName: string): string => {\r\n  const {config} = useLayout()\r\n\r\n  const extension = illustrationName.substring(\r\n    illustrationName.lastIndexOf('.'),\r\n    illustrationName.length\r\n  )\r\n  const illustration =\r\n    ThemeModeComponent.getMode() === 'dark'\r\n      ? `${illustrationName.substring(0, illustrationName.lastIndexOf('.'))}-dark`\r\n      : illustrationName.substring(0, illustrationName.lastIndexOf('.'))\r\n  return toAbsoluteUrl(\r\n    `/media/illustrations/${config.illustrations?.set}/${illustration}${extension}`\r\n  )\r\n}\r\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,gBAAgB;AACxC,SAAQC,kBAAkB,QAAO,qBAAqB;AAEtD,OAAO,MAAMC,aAAa,GAAIC,QAAgB,IAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGH,QAAQ;AAEpF,OAAO,MAAMI,oBAAoB,GAAIC,gBAAwB,IAAa;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACxE,MAAM;IAACC;EAAM,CAAC,GAAGX,SAAS,CAAC,CAAC;EAE5B,MAAMY,SAAS,GAAGJ,gBAAgB,CAACK,SAAS,CAC1CL,gBAAgB,CAACM,WAAW,CAAC,GAAG,CAAC,EACjCN,gBAAgB,CAACO,MACnB,CAAC;EACD,MAAMC,YAAY,GAChBf,kBAAkB,CAACgB,OAAO,CAAC,CAAC,KAAK,MAAM,GAClC,GAAET,gBAAgB,CAACK,SAAS,CAAC,CAAC,EAAEL,gBAAgB,CAACM,WAAW,CAAC,GAAG,CAAC,CAAE,OAAM,GAC1EN,gBAAgB,CAACK,SAAS,CAAC,CAAC,EAAEL,gBAAgB,CAACM,WAAW,CAAC,GAAG,CAAC,CAAC;EACtE,OAAOZ,aAAa,CACjB,wBAAqB,CAAAQ,qBAAA,GAAEC,MAAM,CAACO,aAAa,cAAAR,qBAAA,uBAApBA,qBAAA,CAAsBS,GAAI,IAAGH,YAAa,GAAEJ,SAAU,EAChF,CAAC;AACH,CAAC;AAAAH,EAAA,CAdYF,oBAAoB;EAAA,QACdP,SAAS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}