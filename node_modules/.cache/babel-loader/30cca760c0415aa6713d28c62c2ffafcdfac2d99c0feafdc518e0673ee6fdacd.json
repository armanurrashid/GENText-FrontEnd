{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:/GENText/src/_metronic/layout/core/_Models.ts"],"sourcesContent":["export type LayoutType = 'dark-sidebar' | 'light-sidebar' | 'dark-header' | 'light-header'\n\nexport type CSSClassesType = {\n  [key: string]: string[]\n}\n\nexport type HTMLAttributesType = {\n  [key: string]: {\n    [attrName: string]: string | boolean\n  }\n}\n\nexport interface ILayoutComponent {\n  componentName?: string\n}\n\nexport interface IPageLoader extends ILayoutComponent {\n  componentName?: 'page-loader'\n  type?: 'none' | 'default' | 'spinner-message' | 'spinner-logo'\n  logoImage?: string\n  logoClass?: string\n}\n\nexport interface IScrollTop extends ILayoutComponent {\n  display?: boolean\n}\n\nexport interface IHeader extends ILayoutComponent {\n  componentName?: 'header'\n  display?: boolean\n  default?: {\n    container?: 'fluid' | 'fixed'\n    containerClass?: string\n    fixed?: {\n      desktop?: boolean\n      mobile?: boolean\n    }\n    content?: string\n    menu?: {\n      display?: boolean\n      iconType?: 'svg' | 'font'\n    }\n    stacked?: boolean\n    sticky?: {\n      enabled?: boolean\n      attributes?: {[attrName: string]: string}\n    }\n    minimize?: {\n      enabled?: boolean\n      attributes?: {[attrName: string]: string}\n    }\n  }\n}\n\nexport interface ISidebar extends ILayoutComponent {\n  componentName?: 'sidebar'\n  display?: boolean\n  default?: {\n    class?: string\n    push?: {\n      header?: boolean\n      toolbar?: boolean\n      footer?: boolean\n    }\n    drawer?: {\n      enabled?: boolean\n      attributes?: {[attrName: string]: string}\n    }\n    sticky?: {\n      enabled?: boolean\n      attributes?: {[attrName: string]: string}\n    }\n    fixed?: {\n      desktop?: boolean\n    }\n    minimize?: {\n      desktop?: {\n        enabled?: boolean\n        default?: boolean\n        hoverable?: boolean\n      }\n      mobile?: {\n        enabled?: boolean\n        default?: boolean\n        hoverable?: boolean\n      }\n    }\n    menu?: {\n      iconType?: 'svg' | 'font'\n    }\n    collapse?: {\n      desktop?: {\n        enabled?: boolean\n        default?: boolean\n      }\n      mobile?: {\n        enabled?: boolean\n        default?: boolean\n      }\n    }\n    stacked?: boolean\n  }\n  toggle?: boolean\n}\n\nexport type ToolbarType = 'classic' | 'accounting' | 'extended' | 'reports' | 'saas'\n\nexport interface IToolbar extends ILayoutComponent {\n  componentName?: 'toolbar'\n  display?: boolean\n  layout?: ToolbarType\n  class?: string\n  container?: 'fixed' | 'fluid'\n  containerClass?: string\n  fixed?: {\n    desktop?: boolean\n    mobile?: boolean\n  }\n  swap?: {\n    enabled?: boolean\n    attributes?: {[attrName: string]: string}\n  }\n  sticky?: {\n    enabled?: boolean\n    attributes?: {[attrName: string]: string}\n  }\n  minimize?: {\n    enabled?: boolean\n    attributes?: {[attrName: string]: string}\n  }\n\n  // Custom settings\n  filterButton?: boolean\n  daterangepickerButton?: boolean\n  primaryButton?: boolean\n  primaryButtonLabel?: string\n  primaryButtonModal?: string\n  secondaryButton?: boolean\n}\n\nexport interface IMain extends ILayoutComponent {\n  type?: 'blank' | 'default' | 'none' // Set layout type: default|blank|none\n  pageBgWhite?: boolean // Set true if page background color is white\n  iconType: 'duotone' | 'solid' | 'outline'\n}\n\nexport interface IIllustrations extends ILayoutComponent {\n  componentName?: 'illustrations'\n  set?: 'dozzy-1' | 'sigma-1' | 'sketchy-1' | 'unitedpalms-1'\n}\n\nexport interface IGeneral extends ILayoutComponent {\n  componentName?: 'general'\n  evolution?: boolean\n  layoutType?: 'default' | 'blank'\n  mode?: 'light' | 'dark' | 'system'\n  rtl?: boolean\n  primaryColor?: string // Used in email templates\n  pageBgWhite?: boolean // Set true if page background color is white\n  pageWidth?: 'default' | 'fluid' | 'fixed'\n}\n\nexport interface IMegaMenu extends ILayoutComponent {\n  display: boolean\n}\n\nexport interface ISidebarPanel extends ILayoutComponent {\n  componentName?: 'sidebar-panel'\n  display: boolean\n}\n\nexport interface IContent extends ILayoutComponent {\n  componentName?: 'content'\n  container?: 'fixed' | 'fluid'\n  class?: string\n}\n\nexport interface IFooter extends ILayoutComponent {\n  componentName?: 'footer'\n  display?: boolean\n  container?: 'fluid' | 'fixed'\n  containerClass?: string\n  placement?: string\n  fixed?: {\n    desktop?: boolean\n    mobile?: boolean\n  }\n}\n\nexport interface IPageTitle extends ILayoutComponent {\n  componentName?: 'page-title'\n  display?: boolean\n  breadCrumb?: boolean\n  description?: boolean\n  direction?: 'row' | 'column'\n  class?: string\n}\n\nexport interface IEngage extends ILayoutComponent {\n  componentName?: 'engage'\n  demos?: {\n    enabled?: boolean\n  }\n  purchase?: {\n    enabled?: boolean\n  }\n}\n\nexport interface IApp {\n  general?: IGeneral\n  header?: IHeader\n  sidebar?: ISidebar\n  sidebarPanel?: ISidebarPanel\n  toolbar?: IToolbar\n  pageTitle?: IPageTitle\n  content?: IContent\n  footer?: IFooter\n  pageLoader?: IPageLoader\n}\n\nexport interface ILayout {\n  layoutType: LayoutType\n  main?: IMain\n  app?: IApp\n  illustrations?: IIllustrations\n  scrolltop?: IScrollTop\n  engage?: IEngage\n}\n\nexport interface ILayoutCSSClasses {\n  header: Array<string>\n  headerContainer: Array<string>\n  headerMobile: Array<string>\n  headerMenu: Array<string>\n  aside: Array<string>\n  asideMenu: Array<string>\n  asideToggle: Array<string>\n  sidebar: Array<string>\n  toolbar: Array<string>\n  toolbarContainer: Array<string>\n  content: Array<string>\n  contentContainer: Array<string>\n  footerContainer: Array<string>\n  pageTitle: Array<string>\n  pageContainer: Array<string>\n}\n\nexport interface ILayoutHTMLAttributes {\n  asideMenu: Map<string, string | number | boolean>\n  headerMobile: Map<string, string | number | boolean>\n  headerMenu: Map<string, string | number | boolean>\n  headerContainer: Map<string, string | number | boolean>\n  pageTitle: Map<string, string | number | boolean>\n}\n\nexport interface ILayoutCSSVariables {\n  body: Map<string, string | number | boolean>\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}