{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/layout/core/_Models.ts"],"sourcesContent":["export type LayoutType = 'dark-sidebar' | 'light-sidebar' | 'dark-header' | 'light-header'\r\n\r\nexport type CSSClassesType = {\r\n  [key: string]: string[]\r\n}\r\n\r\nexport type HTMLAttributesType = {\r\n  [key: string]: {\r\n    [attrName: string]: string | boolean\r\n  }\r\n}\r\n\r\nexport interface ILayoutComponent {\r\n  componentName?: string\r\n}\r\n\r\nexport interface IPageLoader extends ILayoutComponent {\r\n  componentName?: 'page-loader'\r\n  type?: 'none' | 'default' | 'spinner-message' | 'spinner-logo'\r\n  logoImage?: string\r\n  logoClass?: string\r\n}\r\n\r\nexport interface IScrollTop extends ILayoutComponent {\r\n  display?: boolean\r\n}\r\n\r\nexport interface IHeader extends ILayoutComponent {\r\n  componentName?: 'header'\r\n  display?: boolean\r\n  default?: {\r\n    container?: 'fluid' | 'fixed'\r\n    containerClass?: string\r\n    fixed?: {\r\n      desktop?: boolean\r\n      mobile?: boolean\r\n    }\r\n    content?: string\r\n    menu?: {\r\n      display?: boolean\r\n      iconType?: 'svg' | 'font'\r\n    }\r\n    stacked?: boolean\r\n    sticky?: {\r\n      enabled?: boolean\r\n      attributes?: {[attrName: string]: string}\r\n    }\r\n    minimize?: {\r\n      enabled?: boolean\r\n      attributes?: {[attrName: string]: string}\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ISidebar extends ILayoutComponent {\r\n  componentName?: 'sidebar'\r\n  display?: boolean\r\n  default?: {\r\n    class?: string\r\n    push?: {\r\n      header?: boolean\r\n      toolbar?: boolean\r\n      footer?: boolean\r\n    }\r\n    drawer?: {\r\n      enabled?: boolean\r\n      attributes?: {[attrName: string]: string}\r\n    }\r\n    sticky?: {\r\n      enabled?: boolean\r\n      attributes?: {[attrName: string]: string}\r\n    }\r\n    fixed?: {\r\n      desktop?: boolean\r\n    }\r\n    minimize?: {\r\n      desktop?: {\r\n        enabled?: boolean\r\n        default?: boolean\r\n        hoverable?: boolean\r\n      }\r\n      mobile?: {\r\n        enabled?: boolean\r\n        default?: boolean\r\n        hoverable?: boolean\r\n      }\r\n    }\r\n    menu?: {\r\n      iconType?: 'svg' | 'font'\r\n    }\r\n    collapse?: {\r\n      desktop?: {\r\n        enabled?: boolean\r\n        default?: boolean\r\n      }\r\n      mobile?: {\r\n        enabled?: boolean\r\n        default?: boolean\r\n      }\r\n    }\r\n    stacked?: boolean\r\n  }\r\n  toggle?: boolean\r\n}\r\n\r\nexport type ToolbarType = 'classic' | 'accounting' | 'extended' | 'reports' | 'saas'\r\n\r\nexport interface IToolbar extends ILayoutComponent {\r\n  componentName?: 'toolbar'\r\n  display?: boolean\r\n  layout?: ToolbarType\r\n  class?: string\r\n  container?: 'fixed' | 'fluid'\r\n  containerClass?: string\r\n  fixed?: {\r\n    desktop?: boolean\r\n    mobile?: boolean\r\n  }\r\n  swap?: {\r\n    enabled?: boolean\r\n    attributes?: {[attrName: string]: string}\r\n  }\r\n  sticky?: {\r\n    enabled?: boolean\r\n    attributes?: {[attrName: string]: string}\r\n  }\r\n  minimize?: {\r\n    enabled?: boolean\r\n    attributes?: {[attrName: string]: string}\r\n  }\r\n\r\n  // Custom settings\r\n  filterButton?: boolean\r\n  daterangepickerButton?: boolean\r\n  primaryButton?: boolean\r\n  primaryButtonLabel?: string\r\n  primaryButtonModal?: string\r\n  secondaryButton?: boolean\r\n}\r\n\r\nexport interface IMain extends ILayoutComponent {\r\n  type?: 'blank' | 'default' | 'none' // Set layout type: default|blank|none\r\n  pageBgWhite?: boolean // Set true if page background color is white\r\n  iconType: 'duotone' | 'solid' | 'outline'\r\n}\r\n\r\nexport interface IIllustrations extends ILayoutComponent {\r\n  componentName?: 'illustrations'\r\n  set?: 'dozzy-1' | 'sigma-1' | 'sketchy-1' | 'unitedpalms-1'\r\n}\r\n\r\nexport interface IGeneral extends ILayoutComponent {\r\n  componentName?: 'general'\r\n  evolution?: boolean\r\n  layoutType?: 'default' | 'blank'\r\n  mode?: 'light' | 'dark' | 'system'\r\n  rtl?: boolean\r\n  primaryColor?: string // Used in email templates\r\n  pageBgWhite?: boolean // Set true if page background color is white\r\n  pageWidth?: 'default' | 'fluid' | 'fixed'\r\n}\r\n\r\nexport interface IMegaMenu extends ILayoutComponent {\r\n  display: boolean\r\n}\r\n\r\nexport interface ISidebarPanel extends ILayoutComponent {\r\n  componentName?: 'sidebar-panel'\r\n  display: boolean\r\n}\r\n\r\nexport interface IContent extends ILayoutComponent {\r\n  componentName?: 'content'\r\n  container?: 'fixed' | 'fluid'\r\n  class?: string\r\n}\r\n\r\nexport interface IFooter extends ILayoutComponent {\r\n  componentName?: 'footer'\r\n  display?: boolean\r\n  container?: 'fluid' | 'fixed'\r\n  containerClass?: string\r\n  placement?: string\r\n  fixed?: {\r\n    desktop?: boolean\r\n    mobile?: boolean\r\n  }\r\n}\r\n\r\nexport interface IPageTitle extends ILayoutComponent {\r\n  componentName?: 'page-title'\r\n  display?: boolean\r\n  breadCrumb?: boolean\r\n  description?: boolean\r\n  direction?: 'row' | 'column'\r\n  class?: string\r\n}\r\n\r\nexport interface IEngage extends ILayoutComponent {\r\n  componentName?: 'engage'\r\n  demos?: {\r\n    enabled?: boolean\r\n  }\r\n  purchase?: {\r\n    enabled?: boolean\r\n  }\r\n}\r\n\r\nexport interface IApp {\r\n  general?: IGeneral\r\n  header?: IHeader\r\n  sidebar?: ISidebar\r\n  sidebarPanel?: ISidebarPanel\r\n  toolbar?: IToolbar\r\n  pageTitle?: IPageTitle\r\n  content?: IContent\r\n  footer?: IFooter\r\n  pageLoader?: IPageLoader\r\n}\r\n\r\nexport interface ILayout {\r\n  layoutType: LayoutType\r\n  main?: IMain\r\n  app?: IApp\r\n  illustrations?: IIllustrations\r\n  scrolltop?: IScrollTop\r\n  engage?: IEngage\r\n}\r\n\r\nexport interface ILayoutCSSClasses {\r\n  header: Array<string>\r\n  headerContainer: Array<string>\r\n  headerMobile: Array<string>\r\n  headerMenu: Array<string>\r\n  aside: Array<string>\r\n  asideMenu: Array<string>\r\n  asideToggle: Array<string>\r\n  sidebar: Array<string>\r\n  toolbar: Array<string>\r\n  toolbarContainer: Array<string>\r\n  content: Array<string>\r\n  contentContainer: Array<string>\r\n  footerContainer: Array<string>\r\n  pageTitle: Array<string>\r\n  pageContainer: Array<string>\r\n}\r\n\r\nexport interface ILayoutHTMLAttributes {\r\n  asideMenu: Map<string, string | number | boolean>\r\n  headerMobile: Map<string, string | number | boolean>\r\n  headerMenu: Map<string, string | number | boolean>\r\n  headerContainer: Map<string, string | number | boolean>\r\n  pageTitle: Map<string, string | number | boolean>\r\n}\r\n\r\nexport interface ILayoutCSSVariables {\r\n  body: Map<string, string | number | boolean>\r\n}\r\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}