{"ast":null,"code":"/* eslint-disable no-useless-escape */\n// DOCS: https://javascript.info/cookie\nexport class CookieComponent {\n  /**\r\n   * Returns the cookie with the given name, or undefined if not found\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @returns string | null\r\n   */\n  static get(name) {\n    let matches = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)'));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n  }\n\n  /**\r\n   * Please note that a cookie value is encoded,\r\n   * so getCookie uses a built-in decodeURIComponent function to decode it.\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @param  {string | number | boolean} value - cookie value\r\n   * @param  {any} cookieOptions - cookie options\r\n   * @returns void\r\n   */\n  static set(name, value, cookieOptions) {\n    const options = {\n      path: '/',\n      // add other defaults here if necessary\n      ...cookieOptions\n    };\n    if (options.expires instanceof Date) {\n      options.expires = options.expires.toUTCString();\n    }\n    let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    for (let optionKey in options) {\n      updatedCookie += '; ' + optionKey;\n      let optionValue = options[optionKey];\n      if (optionValue !== true) {\n        updatedCookie += '=' + optionValue;\n      }\n    }\n    document.cookie = updatedCookie;\n  }\n\n  /**\r\n   * To delete a cookie, we can call it with a negative expiration date\r\n   *\r\n   * @param  {string} name\r\n   */\n  static delete(name) {\n    CookieComponent.set(name, '', {\n      'max-age': -1\n    });\n  }\n}","map":{"version":3,"names":["CookieComponent","get","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","set","value","cookieOptions","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","delete"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/_metronic/assets/ts/components/_CookieComponent.ts"],"sourcesContent":["/* eslint-disable no-useless-escape */\r\n// DOCS: https://javascript.info/cookie\r\nexport class CookieComponent {\r\n  /**\r\n   * Returns the cookie with the given name, or undefined if not found\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @returns string | null\r\n   */\r\n  public static get(name: string): string | undefined {\r\n    let matches = document.cookie.match(\r\n      new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    )\r\n    return matches ? decodeURIComponent(matches[1]) : undefined\r\n  }\r\n\r\n  /**\r\n   * Please note that a cookie value is encoded,\r\n   * so getCookie uses a built-in decodeURIComponent function to decode it.\r\n   *\r\n   * @param  {string} name - cookie name\r\n   * @param  {string | number | boolean} value - cookie value\r\n   * @param  {any} cookieOptions - cookie options\r\n   * @returns void\r\n   */\r\n  public static set(name: string, value: string | number | boolean, cookieOptions: any): void {\r\n    const options = {\r\n      path: '/',\r\n      // add other defaults here if necessary\r\n      ...cookieOptions,\r\n    }\r\n\r\n    if (options.expires instanceof Date) {\r\n      options.expires = options.expires.toUTCString()\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value)\r\n\r\n    for (let optionKey in options) {\r\n      updatedCookie += '; ' + optionKey\r\n      let optionValue = options[optionKey]\r\n      if (optionValue !== true) {\r\n        updatedCookie += '=' + optionValue\r\n      }\r\n    }\r\n\r\n    document.cookie = updatedCookie\r\n  }\r\n\r\n  /**\r\n   * To delete a cookie, we can call it with a negative expiration date\r\n   *\r\n   * @param  {string} name\r\n   */\r\n  public static delete(name: string): void {\r\n    CookieComponent.set(name, '', {\r\n      'max-age': -1,\r\n    })\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA,OAAO,MAAMA,eAAe,CAAC;EAC3B;AACF;AACA;AACA;AACA;AACA;EACE,OAAcC,GAAGA,CAACC,IAAY,EAAsB;IAClD,IAAIC,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CACjC,IAAIC,MAAM,CAAC,UAAU,GAAGL,IAAI,CAACM,OAAO,CAAC,8BAA8B,EAAE,MAAM,CAAC,GAAG,UAAU,CAC3F,CAAC;IACD,OAAOL,OAAO,GAAGM,kBAAkB,CAACN,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGO,SAAS;EAC7D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAcC,GAAGA,CAACT,IAAY,EAAEU,KAAgC,EAAEC,aAAkB,EAAQ;IAC1F,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAE,GAAG;MACT;MACA,GAAGF;IACL,CAAC;IAED,IAAIC,OAAO,CAACE,OAAO,YAAYC,IAAI,EAAE;MACnCH,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO,CAACE,WAAW,CAAC,CAAC;IACjD;IAEA,IAAIC,aAAa,GAAGC,kBAAkB,CAAClB,IAAI,CAAC,GAAG,GAAG,GAAGkB,kBAAkB,CAACR,KAAK,CAAC;IAE9E,KAAK,IAAIS,SAAS,IAAIP,OAAO,EAAE;MAC7BK,aAAa,IAAI,IAAI,GAAGE,SAAS;MACjC,IAAIC,WAAW,GAAGR,OAAO,CAACO,SAAS,CAAC;MACpC,IAAIC,WAAW,KAAK,IAAI,EAAE;QACxBH,aAAa,IAAI,GAAG,GAAGG,WAAW;MACpC;IACF;IAEAlB,QAAQ,CAACC,MAAM,GAAGc,aAAa;EACjC;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAcI,MAAMA,CAACrB,IAAY,EAAQ;IACvCF,eAAe,CAACW,GAAG,CAACT,IAAI,EAAE,EAAE,EAAE;MAC5B,SAAS,EAAE,CAAC;IACd,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}