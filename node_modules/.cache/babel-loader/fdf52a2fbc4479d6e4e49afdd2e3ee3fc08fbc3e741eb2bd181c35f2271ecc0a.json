{"ast":null,"code":"var _jsxFileName = \"E:\\\\GENText\\\\src\\\\app\\\\modules\\\\auth\\\\components\\\\OTP.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './OTP.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  otp: ''\n};\nexport function OTP() {\n  _s();\n  //   const [loading, setLoading] = useState(false)\n  //   const [hasErrors, setHasErrors] = useState<boolean | undefined>(undefined)\n  //   const formik = useFormik({\n  //     initialValues,\n  //     onSubmit: async (values, {setStatus, setSubmitting}) => {\n  //       try {\n  //         setLoading(true)\n  //         const response = await fetch('http://localhost:8000/api/user/confirm-otp/', {\n  //           method: 'POST',\n  //           headers: {\n  //             'Content-Type': 'application/json',\n  //           },\n  //           body: JSON.stringify({\n  //             email: values.email,\n  //           }),\n  //         })\n  //         if (!response.ok) {\n  //           setHasErrors(true)\n  //           setLoading(false)\n  //           setSubmitting(false)\n  //         }\n  //         if (response.ok) {\n  //           setHasErrors(false)\n  //           setLoading(false)\n  //         }\n  //       } catch (error) {\n  //         setStatus('An error occurred during registration.')\n  //       }\n  //     },\n  //   })\n\n  //   return (\n  //     <form\n  //       className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\n  //       noValidate\n  //       id='kt_login_password_reset_form'\n  //       onSubmit={formik.handleSubmit}\n  //     >\n  //       <div className='text-center mb-10'>\n  //         <h1 className='text-dark fw-bolder mb-3'>Enter OTP</h1>\n  //         <div className='text-gray-500 fw-semibold fs-6'>\n  //           An OTP was sent to your email. Please Check\n  //         </div>\n  //       </div>\n  //       {hasErrors === true && (\n  //         <div className='mb-lg-15 alert alert-danger'>\n  //           <div className='alert-text font-weight-bold'>\n  //             Sorry, looks like there are some errors detected, please try again.\n  //           </div>\n  //         </div>\n  //       )}\n\n  //       {hasErrors === false && (\n  //         <div className='mb-10 bg-light-info p-8 rounded'>\n  //           <div className='text-info'>Sent password reset. Please check your email</div>\n  //         </div>\n  //       )}\n\n  //       <div className='fv-row mb-8'>\n  //         <label className='form-label fw-bolder text-gray-900 fs-6'>OTP</label>\n  //         <input\n  //           type='email'\n  //           placeholder=''\n  //           autoComplete='off'\n  //           {...formik.getFieldProps('email')}\n  //           className={clsx(\n  //             'form-control bg-transparent',\n  //             {'is-invalid': formik.touched.email && formik.errors.email},\n  //             {\n  //               'is-valid': formik.touched.email && !formik.errors.email,\n  //             }\n  //           )}\n  //         />\n  //         {formik.touched.email && formik.errors.email && (\n  //           <div className='fv-plugins-message-container'>\n  //             <div className='fv-help-block'>\n  //               <span role='alert'>{formik.errors.email}</span>\n  //             </div>\n  //           </div>\n  //         )}\n  //       </div>\n  //       <div className='d-flex flex-wrap justify-content-center pb-lg-0'>\n  //         <button type='submit' id='kt_password_reset_submit' className='btn btn-primary me-4'>\n  //           <span className='indicator-label'>Submit</span>\n  //           {loading && (\n  //             <span className='indicator-progress'>\n  //               Please wait...\n  //               <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n  //             </span>\n  //           )}\n  //         </button>\n  //         <Link to='/auth/login'>\n  //           <button\n  //             type='button'\n  //             id='kt_login_password_reset_form_cancel_button'\n  //             className='btn btn-light'\n  //             disabled={formik.isSubmitting || !formik.isValid}\n  //           >\n  //             Cancel\n  //           </button>\n  //         </Link>{' '}\n  //       </div>\n  //     </form>\n  //   )\n  // }\n\n  // export function OTP() {\n  const [inputValues, setInputValues] = useState(['', '', '', '', '', '']);\n  const [buttonActive, setButtonActive] = useState(false);\n  const inputRefs = useRef(inputValues.map(() => null));\n  const handleInputChange = (index, value) => {\n    const newInputValues = [...inputValues];\n    newInputValues[index] = value;\n    setInputValues(newInputValues);\n  };\n  const handleKeyUp = (index, e) => {\n    const currentInput = e.target;\n    const nextIndex = index + 1;\n    const prevIndex = index - 1;\n    if (currentInput.value.length > 1) {\n      currentInput.value = '';\n      return;\n    }\n    if (e.key === 'Backspace') {\n      // Move focus to the previous input box when Backspace is pressed\n      if (prevIndex >= 0 && inputRefs.current[prevIndex]) {\n        var _inputRefs$current$pr;\n        (_inputRefs$current$pr = inputRefs.current[prevIndex]) === null || _inputRefs$current$pr === void 0 ? void 0 : _inputRefs$current$pr.focus();\n      }\n    } else if (nextIndex < inputValues.length && inputValues[nextIndex] === '') {\n      setInputValues(prevValues => {\n        const newValues = [...prevValues];\n        newValues[nextIndex] = ' ';\n        return newValues;\n      });\n\n      // Move focus to the next input box\n      if (inputRefs.current[nextIndex]) {\n        var _inputRefs$current$ne;\n        (_inputRefs$current$ne = inputRefs.current[nextIndex]) === null || _inputRefs$current$ne === void 0 ? void 0 : _inputRefs$current$ne.focus();\n      }\n    }\n  };\n  useEffect(() => {\n    const isAllFilled = inputValues.every(value => value !== '');\n    setButtonActive(isAllFilled);\n  }, [inputValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Enter OTP Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: inputValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mx-1\",\n          type: \"number\",\n          value: value,\n          onChange: e => handleInputChange(index, e.target.value),\n          onKeyUp: e => handleKeyUp(index, e),\n          ref: ref => inputRefs.current[index] = ref\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !buttonActive,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: \"Time Remaining: 15s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(OTP, \"OmBm0Ea7ddpmS2NGxDasjqXKwFE=\");\n_c = OTP;\nexport default OTP;\nvar _c;\n$RefreshReg$(_c, \"OTP\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","initialValues","otp","OTP","_s","inputValues","setInputValues","buttonActive","setButtonActive","inputRefs","map","handleInputChange","index","value","newInputValues","handleKeyUp","e","currentInput","target","nextIndex","prevIndex","length","key","current","_inputRefs$current$pr","focus","prevValues","newValues","_inputRefs$current$ne","isAllFilled","every","children","fileName","_jsxFileName","lineNumber","columnNumber","action","className","type","onChange","onKeyUp","ref","disabled","_c","$RefreshReg$"],"sources":["E:/GENText/src/app/modules/auth/components/OTP.tsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport clsx from 'clsx'\r\nimport {Link} from 'react-router-dom'\r\nimport {useFormik} from 'formik'\r\nimport './OTP.css'\r\n\r\nconst initialValues = {\r\n  otp: '',\r\n}\r\n\r\nexport function OTP() {\r\n//   const [loading, setLoading] = useState(false)\r\n//   const [hasErrors, setHasErrors] = useState<boolean | undefined>(undefined)\r\n//   const formik = useFormik({\r\n//     initialValues,\r\n//     onSubmit: async (values, {setStatus, setSubmitting}) => {\r\n//       try {\r\n//         setLoading(true)\r\n//         const response = await fetch('http://localhost:8000/api/user/confirm-otp/', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify({\r\n//             email: values.email,\r\n//           }),\r\n//         })\r\n//         if (!response.ok) {\r\n//           setHasErrors(true)\r\n//           setLoading(false)\r\n//           setSubmitting(false)\r\n//         }\r\n//         if (response.ok) {\r\n//           setHasErrors(false)\r\n//           setLoading(false)\r\n//         }\r\n//       } catch (error) {\r\n//         setStatus('An error occurred during registration.')\r\n//       }\r\n//     },\r\n//   })\r\n\r\n//   return (\r\n//     <form\r\n//       className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\r\n//       noValidate\r\n//       id='kt_login_password_reset_form'\r\n//       onSubmit={formik.handleSubmit}\r\n//     >\r\n//       <div className='text-center mb-10'>\r\n//         <h1 className='text-dark fw-bolder mb-3'>Enter OTP</h1>\r\n//         <div className='text-gray-500 fw-semibold fs-6'>\r\n//           An OTP was sent to your email. Please Check\r\n//         </div>\r\n//       </div>\r\n//       {hasErrors === true && (\r\n//         <div className='mb-lg-15 alert alert-danger'>\r\n//           <div className='alert-text font-weight-bold'>\r\n//             Sorry, looks like there are some errors detected, please try again.\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {hasErrors === false && (\r\n//         <div className='mb-10 bg-light-info p-8 rounded'>\r\n//           <div className='text-info'>Sent password reset. Please check your email</div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className='fv-row mb-8'>\r\n//         <label className='form-label fw-bolder text-gray-900 fs-6'>OTP</label>\r\n//         <input\r\n//           type='email'\r\n//           placeholder=''\r\n//           autoComplete='off'\r\n//           {...formik.getFieldProps('email')}\r\n//           className={clsx(\r\n//             'form-control bg-transparent',\r\n//             {'is-invalid': formik.touched.email && formik.errors.email},\r\n//             {\r\n//               'is-valid': formik.touched.email && !formik.errors.email,\r\n//             }\r\n//           )}\r\n//         />\r\n//         {formik.touched.email && formik.errors.email && (\r\n//           <div className='fv-plugins-message-container'>\r\n//             <div className='fv-help-block'>\r\n//               <span role='alert'>{formik.errors.email}</span>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//       <div className='d-flex flex-wrap justify-content-center pb-lg-0'>\r\n//         <button type='submit' id='kt_password_reset_submit' className='btn btn-primary me-4'>\r\n//           <span className='indicator-label'>Submit</span>\r\n//           {loading && (\r\n//             <span className='indicator-progress'>\r\n//               Please wait...\r\n//               <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n//             </span>\r\n//           )}\r\n//         </button>\r\n//         <Link to='/auth/login'>\r\n//           <button\r\n//             type='button'\r\n//             id='kt_login_password_reset_form_cancel_button'\r\n//             className='btn btn-light'\r\n//             disabled={formik.isSubmitting || !formik.isValid}\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//         </Link>{' '}\r\n//       </div>\r\n//     </form>\r\n//   )\r\n// }\r\n\r\n\r\n// export function OTP() {\r\n  const [inputValues, setInputValues] = useState(['', '', '', '', '', ''])\r\n  const [buttonActive, setButtonActive] = useState(false)\r\n  const inputRefs = useRef<Array<HTMLInputElement | null>>(inputValues.map(() => null))\r\n\r\n  const handleInputChange = (index: number, value: string) => {\r\n    const newInputValues = [...inputValues]\r\n    newInputValues[index] = value\r\n    setInputValues(newInputValues)\r\n  }\r\n\r\n  const handleKeyUp = (index: number, e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const currentInput = e.target as HTMLInputElement\r\n    const nextIndex = index + 1\r\n    const prevIndex = index - 1\r\n\r\n    if (currentInput.value.length > 1) {\r\n      currentInput.value = ''\r\n      return\r\n    }\r\n\r\n    if (e.key === 'Backspace') {\r\n      // Move focus to the previous input box when Backspace is pressed\r\n      if (prevIndex >= 0 && inputRefs.current[prevIndex]) {\r\n        inputRefs.current[prevIndex]?.focus()\r\n      }\r\n    } else if (nextIndex < inputValues.length && inputValues[nextIndex] === '') {\r\n      setInputValues((prevValues) => {\r\n        const newValues = [...prevValues]\r\n        newValues[nextIndex] = ' '\r\n        return newValues\r\n      })\r\n\r\n      // Move focus to the next input box\r\n      if (inputRefs.current[nextIndex]) {\r\n        inputRefs.current[nextIndex]?.focus()\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const isAllFilled = inputValues.every((value) => value !== '')\r\n    setButtonActive(isAllFilled)\r\n  }, [inputValues])\r\n\r\n  return (\r\n    <div>\r\n      <h4>Enter OTP Code</h4>\r\n      <form action='#'>\r\n        <div className='input-field'>\r\n          {inputValues.map((value, index) => (\r\n            <input\r\n              key={index}\r\n              className='mx-1'\r\n              type='number'\r\n              value={value}\r\n              onChange={(e) => handleInputChange(index, e.target.value)}\r\n              onKeyUp={(e) => handleKeyUp(index, e)}\r\n              ref={(ref) => (inputRefs.current[index] = ref)}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <button disabled={!buttonActive}>Verify OTP</button>\r\n      </form>\r\n      <div className='py-4 text-center'>\r\n        <p className='text-danger'>Time Remaining: 15s</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OTP\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}