{"ast":null,"code":"var _jsxFileName = \"E:\\\\tappware Task\\\\react app\\\\GENText-FrontEnd\\\\src\\\\app\\\\modules\\\\apps\\\\user-management\\\\users-list\\\\core\\\\QueryResponseProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useContext, useState, useEffect, useMemo } from 'react';\nimport { useQuery } from 'react-query';\nimport { createResponseContext, initialQueryResponse, initialQueryState, QUERIES, stringifyRequestQuery } from '../../../../../../_metronic/helpers';\nimport { getUsers } from './_requests';\nimport { useQueryRequest } from './QueryRequestProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryResponseContext = createResponseContext(initialQueryResponse);\nconst QueryResponseProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    state\n  } = useQueryRequest();\n  const [query, setQuery] = useState(stringifyRequestQuery(state));\n  const updatedQuery = useMemo(() => stringifyRequestQuery(state), [state]);\n  useEffect(() => {\n    if (query !== updatedQuery) {\n      setQuery(updatedQuery);\n    }\n  }, [updatedQuery]);\n  const {\n    isFetching,\n    refetch,\n    data: response\n  } = useQuery(`${QUERIES.USERS_LIST}-${query}`, () => {\n    return getUsers(query);\n  }, {\n    cacheTime: 0,\n    keepPreviousData: true,\n    refetchOnWindowFocus: false\n  });\n  return /*#__PURE__*/_jsxDEV(QueryResponseContext.Provider, {\n    value: {\n      isLoading: isFetching,\n      refetch,\n      response,\n      query\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryResponseProvider, \"/jh8aV3XZp85f/y8anwBCED0fd0=\", false, function () {\n  return [useQueryRequest, useQuery];\n});\n_c = QueryResponseProvider;\nconst useQueryResponse = () => {\n  _s2();\n  return useContext(QueryResponseContext);\n};\n_s2(useQueryResponse, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst useQueryResponseData = () => {\n  _s3();\n  const {\n    response\n  } = useQueryResponse();\n  if (!response) {\n    return [];\n  }\n  return (response === null || response === void 0 ? void 0 : response.data) || [];\n};\n_s3(useQueryResponseData, \"z5Pvnu5ySFf57QCj19QAHuLvvPg=\", false, function () {\n  return [useQueryResponse];\n});\nconst useQueryResponsePagination = () => {\n  _s4();\n  const defaultPaginationState = {\n    links: [],\n    ...initialQueryState\n  };\n  const {\n    response\n  } = useQueryResponse();\n  if (!response || !response.payload || !response.payload.pagination) {\n    return defaultPaginationState;\n  }\n  return response.payload.pagination;\n};\n_s4(useQueryResponsePagination, \"z5Pvnu5ySFf57QCj19QAHuLvvPg=\", false, function () {\n  return [useQueryResponse];\n});\nconst useQueryResponseLoading = () => {\n  _s5();\n  const {\n    isLoading\n  } = useQueryResponse();\n  return isLoading;\n};\n_s5(useQueryResponseLoading, \"OUJ1sfWX7RGWgk6GFJaaAapdFs8=\", false, function () {\n  return [useQueryResponse];\n});\nexport { QueryResponseProvider, useQueryResponse, useQueryResponseData, useQueryResponsePagination, useQueryResponseLoading };\nvar _c;\n$RefreshReg$(_c, \"QueryResponseProvider\");","map":{"version":3,"names":["useContext","useState","useEffect","useMemo","useQuery","createResponseContext","initialQueryResponse","initialQueryState","QUERIES","stringifyRequestQuery","getUsers","useQueryRequest","jsxDEV","_jsxDEV","QueryResponseContext","QueryResponseProvider","_ref","_s","children","state","query","setQuery","updatedQuery","isFetching","refetch","data","response","USERS_LIST","cacheTime","keepPreviousData","refetchOnWindowFocus","Provider","value","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","_c","useQueryResponse","_s2","useQueryResponseData","_s3","useQueryResponsePagination","_s4","defaultPaginationState","links","payload","pagination","useQueryResponseLoading","_s5","$RefreshReg$"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/app/modules/apps/user-management/users-list/core/QueryResponseProvider.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {FC, useContext, useState, useEffect, useMemo} from 'react'\r\nimport {useQuery} from 'react-query'\r\nimport {\r\n  createResponseContext,\r\n  initialQueryResponse,\r\n  initialQueryState,\r\n  PaginationState,\r\n  QUERIES,\r\n  stringifyRequestQuery,\r\n  WithChildren,\r\n} from '../../../../../../_metronic/helpers'\r\nimport {getUsers} from './_requests'\r\nimport {User} from './_models'\r\nimport {useQueryRequest} from './QueryRequestProvider'\r\n\r\nconst QueryResponseContext = createResponseContext<User>(initialQueryResponse)\r\nconst QueryResponseProvider: FC<WithChildren> = ({children}) => {\r\n  const {state} = useQueryRequest()\r\n  const [query, setQuery] = useState<string>(stringifyRequestQuery(state))\r\n  const updatedQuery = useMemo(() => stringifyRequestQuery(state), [state])\r\n\r\n  useEffect(() => {\r\n    if (query !== updatedQuery) {\r\n      setQuery(updatedQuery)\r\n    }\r\n  }, [updatedQuery])\r\n\r\n  const {\r\n    isFetching,\r\n    refetch,\r\n    data: response,\r\n  } = useQuery(\r\n    `${QUERIES.USERS_LIST}-${query}`,\r\n    () => {\r\n      return getUsers(query)\r\n    },\r\n    {cacheTime: 0, keepPreviousData: true, refetchOnWindowFocus: false}\r\n  )\r\n\r\n  return (\r\n    <QueryResponseContext.Provider value={{isLoading: isFetching, refetch, response, query}}>\r\n      {children}\r\n    </QueryResponseContext.Provider>\r\n  )\r\n}\r\n\r\nconst useQueryResponse = () => useContext(QueryResponseContext)\r\n\r\nconst useQueryResponseData = () => {\r\n  const {response} = useQueryResponse()\r\n  if (!response) {\r\n    return []\r\n  }\r\n\r\n  return response?.data || []\r\n}\r\n\r\nconst useQueryResponsePagination = () => {\r\n  const defaultPaginationState: PaginationState = {\r\n    links: [],\r\n    ...initialQueryState,\r\n  }\r\n\r\n  const {response} = useQueryResponse()\r\n  if (!response || !response.payload || !response.payload.pagination) {\r\n    return defaultPaginationState\r\n  }\r\n\r\n  return response.payload.pagination\r\n}\r\n\r\nconst useQueryResponseLoading = (): boolean => {\r\n  const {isLoading} = useQueryResponse()\r\n  return isLoading\r\n}\r\n\r\nexport {\r\n  QueryResponseProvider,\r\n  useQueryResponse,\r\n  useQueryResponseData,\r\n  useQueryResponsePagination,\r\n  useQueryResponseLoading,\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}