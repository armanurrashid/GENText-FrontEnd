{"ast":null,"code":"var _jsxFileName = \"E:\\\\tappware Task\\\\react app\\\\GENText-FrontEnd\\\\src\\\\app\\\\modules\\\\apps\\\\user-management\\\\users-list\\\\table\\\\columns\\\\UserCustomHeader.tsx\",\n  _s = $RefreshSig$();\nimport clsx from 'clsx';\nimport { useMemo } from 'react';\nimport { initialQueryState } from '../../../../../../../_metronic/helpers';\nimport { useQueryRequest } from '../../core/QueryRequestProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCustomHeader = _ref => {\n  _s();\n  let {\n    className,\n    title,\n    tableProps\n  } = _ref;\n  const id = tableProps.column.id;\n  const {\n    state,\n    updateState\n  } = useQueryRequest();\n  const isSelectedForSorting = useMemo(() => {\n    return state.sort && state.sort === id;\n  }, [state, id]);\n  const order = useMemo(() => state.order, [state]);\n  const sortColumn = () => {\n    // avoid sorting for these columns\n    if (id === 'actions' || id === 'selection') {\n      return;\n    }\n    if (!isSelectedForSorting) {\n      // enable sort asc\n      updateState({\n        sort: id,\n        order: 'asc',\n        ...initialQueryState\n      });\n      return;\n    }\n    if (isSelectedForSorting && order !== undefined) {\n      if (order === 'asc') {\n        // enable sort desc\n        updateState({\n          sort: id,\n          order: 'desc',\n          ...initialQueryState\n        });\n        return;\n      }\n\n      // disable sort\n      updateState({\n        sort: undefined,\n        order: undefined,\n        ...initialQueryState\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"th\", {\n    ...tableProps.column.getHeaderProps(),\n    className: clsx(className, isSelectedForSorting && order !== undefined && `table-sort-${order}`),\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: sortColumn,\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(UserCustomHeader, \"zVAYaYkWsJsD1ozMDjclMoc6xgc=\", false, function () {\n  return [useQueryRequest];\n});\n_c = UserCustomHeader;\nexport { UserCustomHeader };\nvar _c;\n$RefreshReg$(_c, \"UserCustomHeader\");","map":{"version":3,"names":["clsx","useMemo","initialQueryState","useQueryRequest","jsxDEV","_jsxDEV","UserCustomHeader","_ref","_s","className","title","tableProps","id","column","state","updateState","isSelectedForSorting","sort","order","sortColumn","undefined","getHeaderProps","style","cursor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/app/modules/apps/user-management/users-list/table/columns/UserCustomHeader.tsx"],"sourcesContent":["import clsx from 'clsx'\r\nimport {FC, PropsWithChildren, useMemo} from 'react'\r\nimport {HeaderProps} from 'react-table'\r\nimport {initialQueryState} from '../../../../../../../_metronic/helpers'\r\nimport {useQueryRequest} from '../../core/QueryRequestProvider'\r\nimport {User} from '../../core/_models'\r\n\r\ntype Props = {\r\n  className?: string\r\n  title?: string\r\n  tableProps: PropsWithChildren<HeaderProps<User>>\r\n}\r\nconst UserCustomHeader: FC<Props> = ({className, title, tableProps}) => {\r\n  const id = tableProps.column.id\r\n  const {state, updateState} = useQueryRequest()\r\n\r\n  const isSelectedForSorting = useMemo(() => {\r\n    return state.sort && state.sort === id\r\n  }, [state, id])\r\n  const order: 'asc' | 'desc' | undefined = useMemo(() => state.order, [state])\r\n\r\n  const sortColumn = () => {\r\n    // avoid sorting for these columns\r\n    if (id === 'actions' || id === 'selection') {\r\n      return\r\n    }\r\n\r\n    if (!isSelectedForSorting) {\r\n      // enable sort asc\r\n      updateState({sort: id, order: 'asc', ...initialQueryState})\r\n      return\r\n    }\r\n\r\n    if (isSelectedForSorting && order !== undefined) {\r\n      if (order === 'asc') {\r\n        // enable sort desc\r\n        updateState({sort: id, order: 'desc', ...initialQueryState})\r\n        return\r\n      }\r\n\r\n      // disable sort\r\n      updateState({sort: undefined, order: undefined, ...initialQueryState})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <th\r\n      {...tableProps.column.getHeaderProps()}\r\n      className={clsx(\r\n        className,\r\n        isSelectedForSorting && order !== undefined && `table-sort-${order}`\r\n      )}\r\n      style={{cursor: 'pointer'}}\r\n      onClick={sortColumn}\r\n    >\r\n      {title}\r\n    </th>\r\n  )\r\n}\r\n\r\nexport {UserCustomHeader}\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAA+BC,OAAO,QAAO,OAAO;AAEpD,SAAQC,iBAAiB,QAAO,wCAAwC;AACxE,SAAQC,eAAe,QAAO,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQ/D,MAAMC,gBAA2B,GAAGC,IAAA,IAAoC;EAAAC,EAAA;EAAA,IAAnC;IAACC,SAAS;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACjE,MAAMK,EAAE,GAAGD,UAAU,CAACE,MAAM,CAACD,EAAE;EAC/B,MAAM;IAACE,KAAK;IAAEC;EAAW,CAAC,GAAGZ,eAAe,CAAC,CAAC;EAE9C,MAAMa,oBAAoB,GAAGf,OAAO,CAAC,MAAM;IACzC,OAAOa,KAAK,CAACG,IAAI,IAAIH,KAAK,CAACG,IAAI,KAAKL,EAAE;EACxC,CAAC,EAAE,CAACE,KAAK,EAAEF,EAAE,CAAC,CAAC;EACf,MAAMM,KAAiC,GAAGjB,OAAO,CAAC,MAAMa,KAAK,CAACI,KAAK,EAAE,CAACJ,KAAK,CAAC,CAAC;EAE7E,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIP,EAAE,KAAK,SAAS,IAAIA,EAAE,KAAK,WAAW,EAAE;MAC1C;IACF;IAEA,IAAI,CAACI,oBAAoB,EAAE;MACzB;MACAD,WAAW,CAAC;QAACE,IAAI,EAAEL,EAAE;QAAEM,KAAK,EAAE,KAAK;QAAE,GAAGhB;MAAiB,CAAC,CAAC;MAC3D;IACF;IAEA,IAAIc,oBAAoB,IAAIE,KAAK,KAAKE,SAAS,EAAE;MAC/C,IAAIF,KAAK,KAAK,KAAK,EAAE;QACnB;QACAH,WAAW,CAAC;UAACE,IAAI,EAAEL,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAE,GAAGhB;QAAiB,CAAC,CAAC;QAC5D;MACF;;MAEA;MACAa,WAAW,CAAC;QAACE,IAAI,EAAEG,SAAS;QAAEF,KAAK,EAAEE,SAAS;QAAE,GAAGlB;MAAiB,CAAC,CAAC;IACxE;EACF,CAAC;EAED,oBACEG,OAAA;IAAA,GACMM,UAAU,CAACE,MAAM,CAACQ,cAAc,CAAC,CAAC;IACtCZ,SAAS,EAAET,IAAI,CACbS,SAAS,EACTO,oBAAoB,IAAIE,KAAK,KAAKE,SAAS,IAAK,cAAaF,KAAM,EACrE,CAAE;IACFI,KAAK,EAAE;MAACC,MAAM,EAAE;IAAS,CAAE;IAC3BC,OAAO,EAAEL,UAAW;IAAAM,QAAA,EAEnBf;EAAK;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAAArB,EAAA,CA9CKF,gBAA2B;EAAA,QAEFH,eAAe;AAAA;AAAA2B,EAAA,GAFxCxB,gBAA2B;AAgDjC,SAAQA,gBAAgB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}