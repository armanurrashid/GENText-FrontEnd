{"ast":null,"code":"var _jsxFileName = \"E:\\\\GENText\\\\src\\\\app\\\\modules\\\\auth\\\\components\\\\OTP.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport './OTP.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  otp: ''\n};\nexport function OTP() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [hasErrors, setHasErrors] = useState(undefined);\n  const formik = useFormik({\n    initialValues,\n    onSubmit: async (values, _ref) => {\n      let {\n        setStatus,\n        setSubmitting\n      } = _ref;\n      try {\n        setLoading(true);\n        const response = await fetch('http://localhost:8000/api/user/confirm-otp/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            otp: values.otp\n          })\n        });\n        if (!response.ok) {\n          setHasErrors(true);\n          setLoading(false);\n          setSubmitting(false);\n        }\n        if (response.ok) {\n          setHasErrors(false);\n          setLoading(false);\n        }\n      } catch (error) {\n        setStatus('An error occurred.');\n      }\n    }\n  });\n\n  //   return (\n  //     <form\n  //       className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\n  //       noValidate\n  //       id='kt_login_password_reset_form'\n  //       onSubmit={formik.handleSubmit}\n  //     >\n  //       <div className='text-center mb-10'>\n  //         <h1 className='text-dark fw-bolder mb-3'>Enter OTP</h1>\n  //         <div className='text-gray-500 fw-semibold fs-6'>\n  //           An OTP was sent to your email. Please Check\n  //         </div>\n  //       </div>\n  //       {hasErrors === true && (\n  //         <div className='mb-lg-15 alert alert-danger'>\n  //           <div className='alert-text font-weight-bold'>\n  //             Sorry, looks like there are some errors detected, please try again.\n  //           </div>\n  //         </div>\n  //       )}\n\n  //       {hasErrors === false && (\n  //         <div className='mb-10 bg-light-info p-8 rounded'>\n  //           <div className='text-info'>Sent password reset. Please check your email</div>\n  //         </div>\n  //       )}\n\n  //       <div className='fv-row mb-8'>\n  //         <label className='form-label fw-bolder text-gray-900 fs-6'>OTP</label>\n  //         <input\n  //           type='email'\n  //           placeholder=''\n  //           autoComplete='off'\n  //           {...formik.getFieldProps('email')}\n  //           className={clsx(\n  //             'form-control bg-transparent',\n  //             {'is-invalid': formik.touched.email && formik.errors.email},\n  //             {\n  //               'is-valid': formik.touched.email && !formik.errors.email,\n  //             }\n  //           )}\n  //         />\n  //         {formik.touched.email && formik.errors.email && (\n  //           <div className='fv-plugins-message-container'>\n  //             <div className='fv-help-block'>\n  //               <span role='alert'>{formik.errors.email}</span>\n  //             </div>\n  //           </div>\n  //         )}\n  //       </div>\n  //       <div className='d-flex flex-wrap justify-content-center pb-lg-0'>\n  //         <button type='submit' id='kt_password_reset_submit' className='btn btn-primary me-4'>\n  //           <span className='indicator-label'>Submit</span>\n  //           {loading && (\n  //             <span className='indicator-progress'>\n  //               Please wait...\n  //               <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n  //             </span>\n  //           )}\n  //         </button>\n  //         <Link to='/auth/login'>\n  //           <button\n  //             type='button'\n  //             id='kt_login_password_reset_form_cancel_button'\n  //             className='btn btn-light'\n  //             disabled={formik.isSubmitting || !formik.isValid}\n  //           >\n  //             Cancel\n  //           </button>\n  //         </Link>{' '}\n  //       </div>\n  //     </form>\n  //   )\n  // }\n\n  // export function OTP() {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Enter OTP Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: inputValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"mx-1\",\n          type: \"number\",\n          value: value,\n          onChange: e => handleInputChange(index, e.target.value),\n          onKeyUp: e => handleKeyUp(index, e),\n          ref: ref => inputRefs.current[index] = ref\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !buttonActive,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-4 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: \"Time Remaining: 15s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(OTP, \"R6pB/IyuAZWI7C+iCHZHJjajYuo=\", false, function () {\n  return [useFormik];\n});\n_c = OTP;\nexport default OTP;\nvar _c;\n$RefreshReg$(_c, \"OTP\");","map":{"version":3,"names":["React","useState","useFormik","jsxDEV","_jsxDEV","initialValues","otp","OTP","_s","loading","setLoading","hasErrors","setHasErrors","undefined","formik","onSubmit","values","_ref","setStatus","setSubmitting","response","fetch","method","headers","body","JSON","stringify","ok","error","children","fileName","_jsxFileName","lineNumber","columnNumber","action","className","inputValues","map","value","index","type","onChange","e","handleInputChange","target","onKeyUp","handleKeyUp","ref","inputRefs","current","disabled","buttonActive","_c","$RefreshReg$"],"sources":["E:/GENText/src/app/modules/auth/components/OTP.tsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport clsx from 'clsx'\r\nimport {Link} from 'react-router-dom'\r\nimport {useFormik} from 'formik'\r\nimport './OTP.css'\r\n\r\nconst initialValues = {\r\n  otp: '',\r\n}\r\n\r\nexport function OTP() {\r\n  const [loading, setLoading] = useState(false)\r\n  const [hasErrors, setHasErrors] = useState<boolean | undefined>(undefined)\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit: async (values, {setStatus, setSubmitting}) => {\r\n      try {\r\n        setLoading(true)\r\n        const response = await fetch('http://localhost:8000/api/user/confirm-otp/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            otp: values.otp,\r\n          }),\r\n        })\r\n        if (!response.ok) {\r\n          setHasErrors(true)\r\n          setLoading(false)\r\n          setSubmitting(false)\r\n        }\r\n        if (response.ok) {\r\n          setHasErrors(false)\r\n          setLoading(false)\r\n        }\r\n      } catch (error) {\r\n        setStatus('An error occurred.')\r\n      }\r\n    },\r\n  })\r\n\r\n//   return (\r\n//     <form\r\n//       className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\r\n//       noValidate\r\n//       id='kt_login_password_reset_form'\r\n//       onSubmit={formik.handleSubmit}\r\n//     >\r\n//       <div className='text-center mb-10'>\r\n//         <h1 className='text-dark fw-bolder mb-3'>Enter OTP</h1>\r\n//         <div className='text-gray-500 fw-semibold fs-6'>\r\n//           An OTP was sent to your email. Please Check\r\n//         </div>\r\n//       </div>\r\n//       {hasErrors === true && (\r\n//         <div className='mb-lg-15 alert alert-danger'>\r\n//           <div className='alert-text font-weight-bold'>\r\n//             Sorry, looks like there are some errors detected, please try again.\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {hasErrors === false && (\r\n//         <div className='mb-10 bg-light-info p-8 rounded'>\r\n//           <div className='text-info'>Sent password reset. Please check your email</div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <div className='fv-row mb-8'>\r\n//         <label className='form-label fw-bolder text-gray-900 fs-6'>OTP</label>\r\n//         <input\r\n//           type='email'\r\n//           placeholder=''\r\n//           autoComplete='off'\r\n//           {...formik.getFieldProps('email')}\r\n//           className={clsx(\r\n//             'form-control bg-transparent',\r\n//             {'is-invalid': formik.touched.email && formik.errors.email},\r\n//             {\r\n//               'is-valid': formik.touched.email && !formik.errors.email,\r\n//             }\r\n//           )}\r\n//         />\r\n//         {formik.touched.email && formik.errors.email && (\r\n//           <div className='fv-plugins-message-container'>\r\n//             <div className='fv-help-block'>\r\n//               <span role='alert'>{formik.errors.email}</span>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//       <div className='d-flex flex-wrap justify-content-center pb-lg-0'>\r\n//         <button type='submit' id='kt_password_reset_submit' className='btn btn-primary me-4'>\r\n//           <span className='indicator-label'>Submit</span>\r\n//           {loading && (\r\n//             <span className='indicator-progress'>\r\n//               Please wait...\r\n//               <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n//             </span>\r\n//           )}\r\n//         </button>\r\n//         <Link to='/auth/login'>\r\n//           <button\r\n//             type='button'\r\n//             id='kt_login_password_reset_form_cancel_button'\r\n//             className='btn btn-light'\r\n//             disabled={formik.isSubmitting || !formik.isValid}\r\n//           >\r\n//             Cancel\r\n//           </button>\r\n//         </Link>{' '}\r\n//       </div>\r\n//     </form>\r\n//   )\r\n// }\r\n\r\n\r\n// export function OTP() {\r\n\r\n  return (\r\n    <div>\r\n      <h4>Enter OTP Code</h4>\r\n      <form action='#'>\r\n        <div className='input-field'>\r\n          {inputValues.map((value, index) => (\r\n            <input\r\n              key={index}\r\n              className='mx-1'\r\n              type='number'\r\n              value={value}\r\n              onChange={(e) => handleInputChange(index, e.target.value)}\r\n              onKeyUp={(e) => handleKeyUp(index, e)}\r\n              ref={(ref) => (inputRefs.current[index] = ref)}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <button disabled={!buttonActive}>Verify OTP</button>\r\n      </form>\r\n      <div className='py-4 text-center'>\r\n        <p className='text-danger'>Time Remaining: 15s</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OTP\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}