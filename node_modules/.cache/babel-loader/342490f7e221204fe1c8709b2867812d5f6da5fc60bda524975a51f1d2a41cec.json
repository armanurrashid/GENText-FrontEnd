{"ast":null,"code":"var _jsxFileName = \"E:\\\\tappware Task\\\\react app\\\\GENText-FrontEnd\\\\src\\\\app\\\\modules\\\\apps\\\\user-management\\\\users-list\\\\user-edit-modal\\\\UserEditModalFormWrapper.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nimport { UserEditModalForm } from './UserEditModalForm';\nimport { isNotEmpty, QUERIES } from '../../../../../../_metronic/helpers';\nimport { useListView } from '../core/ListViewProvider';\nimport { getUserById } from '../core/_requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserEditModalFormWrapper = () => {\n  _s();\n  const {\n    itemIdForUpdate,\n    setItemIdForUpdate\n  } = useListView();\n  const enabledQuery = isNotEmpty(itemIdForUpdate);\n  const {\n    isLoading,\n    data: user,\n    error\n  } = useQuery(`${QUERIES.USERS_LIST}-user-${itemIdForUpdate}`, () => {\n    return getUserById(itemIdForUpdate);\n  }, {\n    cacheTime: 0,\n    enabled: enabledQuery,\n    onError: err => {\n      setItemIdForUpdate(undefined);\n      console.error(err);\n    }\n  });\n  if (!itemIdForUpdate) {\n    return /*#__PURE__*/_jsxDEV(UserEditModalForm, {\n      isUserLoading: isLoading,\n      user: {\n        id: undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoading && !error && user) {\n    return /*#__PURE__*/_jsxDEV(UserEditModalForm, {\n      isUserLoading: isLoading,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return null;\n};\n_s(UserEditModalFormWrapper, \"eQ3WbBk62ie5bLQyXpSgWDVYhBY=\", false, function () {\n  return [useListView, useQuery];\n});\n_c = UserEditModalFormWrapper;\nexport { UserEditModalFormWrapper };\nvar _c;\n$RefreshReg$(_c, \"UserEditModalFormWrapper\");","map":{"version":3,"names":["useQuery","UserEditModalForm","isNotEmpty","QUERIES","useListView","getUserById","jsxDEV","_jsxDEV","UserEditModalFormWrapper","_s","itemIdForUpdate","setItemIdForUpdate","enabledQuery","isLoading","data","user","error","USERS_LIST","cacheTime","enabled","onError","err","undefined","console","isUserLoading","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/tappware Task/react app/GENText-FrontEnd/src/app/modules/apps/user-management/users-list/user-edit-modal/UserEditModalFormWrapper.tsx"],"sourcesContent":["import {useQuery} from 'react-query'\r\nimport {UserEditModalForm} from './UserEditModalForm'\r\nimport {isNotEmpty, QUERIES} from '../../../../../../_metronic/helpers'\r\nimport {useListView} from '../core/ListViewProvider'\r\nimport {getUserById} from '../core/_requests'\r\n\r\nconst UserEditModalFormWrapper = () => {\r\n  const {itemIdForUpdate, setItemIdForUpdate} = useListView()\r\n  const enabledQuery: boolean = isNotEmpty(itemIdForUpdate)\r\n  const {\r\n    isLoading,\r\n    data: user,\r\n    error,\r\n  } = useQuery(\r\n    `${QUERIES.USERS_LIST}-user-${itemIdForUpdate}`,\r\n    () => {\r\n      return getUserById(itemIdForUpdate)\r\n    },\r\n    {\r\n      cacheTime: 0,\r\n      enabled: enabledQuery,\r\n      onError: (err) => {\r\n        setItemIdForUpdate(undefined)\r\n        console.error(err)\r\n      },\r\n    }\r\n  )\r\n\r\n  if (!itemIdForUpdate) {\r\n    return <UserEditModalForm isUserLoading={isLoading} user={{id: undefined}} />\r\n  }\r\n\r\n  if (!isLoading && !error && user) {\r\n    return <UserEditModalForm isUserLoading={isLoading} user={user} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport {UserEditModalFormWrapper}\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,aAAa;AACpC,SAAQC,iBAAiB,QAAO,qBAAqB;AACrD,SAAQC,UAAU,EAAEC,OAAO,QAAO,qCAAqC;AACvE,SAAQC,WAAW,QAAO,0BAA0B;AACpD,SAAQC,WAAW,QAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAACC,eAAe;IAAEC;EAAkB,CAAC,GAAGP,WAAW,CAAC,CAAC;EAC3D,MAAMQ,YAAqB,GAAGV,UAAU,CAACQ,eAAe,CAAC;EACzD,MAAM;IACJG,SAAS;IACTC,IAAI,EAAEC,IAAI;IACVC;EACF,CAAC,GAAGhB,QAAQ,CACT,GAAEG,OAAO,CAACc,UAAW,SAAQP,eAAgB,EAAC,EAC/C,MAAM;IACJ,OAAOL,WAAW,CAACK,eAAe,CAAC;EACrC,CAAC,EACD;IACEQ,SAAS,EAAE,CAAC;IACZC,OAAO,EAAEP,YAAY;IACrBQ,OAAO,EAAGC,GAAG,IAAK;MAChBV,kBAAkB,CAACW,SAAS,CAAC;MAC7BC,OAAO,CAACP,KAAK,CAACK,GAAG,CAAC;IACpB;EACF,CACF,CAAC;EAED,IAAI,CAACX,eAAe,EAAE;IACpB,oBAAOH,OAAA,CAACN,iBAAiB;MAACuB,aAAa,EAAEX,SAAU;MAACE,IAAI,EAAE;QAACU,EAAE,EAAEH;MAAS;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/E;EAEA,IAAI,CAAChB,SAAS,IAAI,CAACG,KAAK,IAAID,IAAI,EAAE;IAChC,oBAAOR,OAAA,CAACN,iBAAiB;MAACuB,aAAa,EAAEX,SAAU;MAACE,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAO,IAAI;AACb,CAAC;AAAApB,EAAA,CA/BKD,wBAAwB;EAAA,QACkBJ,WAAW,EAMrDJ,QAAQ;AAAA;AAAA8B,EAAA,GAPRtB,wBAAwB;AAiC9B,SAAQA,wBAAwB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}