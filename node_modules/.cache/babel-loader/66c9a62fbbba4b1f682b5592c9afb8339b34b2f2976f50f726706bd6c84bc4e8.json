{"ast":null,"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = {\n    exports: {}\n  }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\n\n// ../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js\nvar require_prism = __commonJS({\n  \"../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js\"(exports, module) {\n    var Prism2 = function () {\n      var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n      var uniqueId = 0;\n      var plainTextGrammar = {};\n      var _ = {\n        /**\n         * A namespace for utility methods.\n         *\n         * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n         * change or disappear at any time.\n         *\n         * @namespace\n         * @memberof Prism\n         */\n        util: {\n          encode: function encode(tokens) {\n            if (tokens instanceof Token) {\n              return new Token(tokens.type, encode(tokens.content), tokens.alias);\n            } else if (Array.isArray(tokens)) {\n              return tokens.map(encode);\n            } else {\n              return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n            }\n          },\n          /**\n           * Returns the name of the type of the given value.\n           *\n           * @param {any} o\n           * @returns {string}\n           * @example\n           * type(null)      === 'Null'\n           * type(undefined) === 'Undefined'\n           * type(123)       === 'Number'\n           * type('foo')     === 'String'\n           * type(true)      === 'Boolean'\n           * type([1, 2])    === 'Array'\n           * type({})        === 'Object'\n           * type(String)    === 'Function'\n           * type(/abc+/)    === 'RegExp'\n           */\n          type: function (o) {\n            return Object.prototype.toString.call(o).slice(8, -1);\n          },\n          /**\n           * Returns a unique number for the given object. Later calls will still return the same number.\n           *\n           * @param {Object} obj\n           * @returns {number}\n           */\n          objId: function (obj) {\n            if (!obj[\"__id\"]) {\n              Object.defineProperty(obj, \"__id\", {\n                value: ++uniqueId\n              });\n            }\n            return obj[\"__id\"];\n          },\n          /**\n           * Creates a deep clone of the given object.\n           *\n           * The main intended use of this function is to clone language definitions.\n           *\n           * @param {T} o\n           * @param {Record<number, any>} [visited]\n           * @returns {T}\n           * @template T\n           */\n          clone: function deepClone(o, visited) {\n            visited = visited || {};\n            var clone;\n            var id;\n            switch (_.util.type(o)) {\n              case \"Object\":\n                id = _.util.objId(o);\n                if (visited[id]) {\n                  return visited[id];\n                }\n                clone = /** @type {Record<string, any>} */\n                {};\n                visited[id] = clone;\n                for (var key in o) {\n                  if (o.hasOwnProperty(key)) {\n                    clone[key] = deepClone(o[key], visited);\n                  }\n                }\n                return (/** @type {any} */\n                  clone\n                );\n              case \"Array\":\n                id = _.util.objId(o);\n                if (visited[id]) {\n                  return visited[id];\n                }\n                clone = [];\n                visited[id] = clone;\n                /** @type {Array} */\n                /** @type {any} */\n                o.forEach(function (v, i) {\n                  clone[i] = deepClone(v, visited);\n                });\n                return (/** @type {any} */\n                  clone\n                );\n              default:\n                return o;\n            }\n          },\n          /**\n           * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n           *\n           * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n           *\n           * @param {Element} element\n           * @returns {string}\n           */\n          getLanguage: function (element) {\n            while (element) {\n              var m = lang.exec(element.className);\n              if (m) {\n                return m[1].toLowerCase();\n              }\n              element = element.parentElement;\n            }\n            return \"none\";\n          },\n          /**\n           * Sets the Prism `language-xxxx` class of the given element.\n           *\n           * @param {Element} element\n           * @param {string} language\n           * @returns {void}\n           */\n          setLanguage: function (element, language) {\n            element.className = element.className.replace(RegExp(lang, \"gi\"), \"\");\n            element.classList.add(\"language-\" + language);\n          },\n          /**\n           * Returns whether a given class is active for `element`.\n           *\n           * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n           * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n           * given class is just the given class with a `no-` prefix.\n           *\n           * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n           * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n           * ancestors have the given class or the negated version of it, then the default activation will be returned.\n           *\n           * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n           * version of it, the class is considered active.\n           *\n           * @param {Element} element\n           * @param {string} className\n           * @param {boolean} [defaultActivation=false]\n           * @returns {boolean}\n           */\n          isActive: function (element, className, defaultActivation) {\n            var no = \"no-\" + className;\n            while (element) {\n              var classList = element.classList;\n              if (classList.contains(className)) {\n                return true;\n              }\n              if (classList.contains(no)) {\n                return false;\n              }\n              element = element.parentElement;\n            }\n            return !!defaultActivation;\n          }\n        },\n        /**\n         * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n         *\n         * @namespace\n         * @memberof Prism\n         * @public\n         */\n        languages: {\n          /**\n           * The grammar for plain, unformatted text.\n           */\n          plain: plainTextGrammar,\n          plaintext: plainTextGrammar,\n          text: plainTextGrammar,\n          txt: plainTextGrammar,\n          /**\n           * Creates a deep copy of the language with the given id and appends the given tokens.\n           *\n           * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n           * will be overwritten at its original position.\n           *\n           * ## Best practices\n           *\n           * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n           * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n           * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n           *\n           * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n           * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n           *\n           * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n           * @param {Grammar} redef The new tokens to append.\n           * @returns {Grammar} The new language created.\n           * @public\n           * @example\n           * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n           *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n           *     // at its original position\n           *     'comment': { ... },\n           *     // CSS doesn't have a 'color' token, so this token will be appended\n           *     'color': /\\b(?:red|green|blue)\\b/\n           * });\n           */\n          extend: function (id, redef) {\n            var lang2 = _.util.clone(_.languages[id]);\n            for (var key in redef) {\n              lang2[key] = redef[key];\n            }\n            return lang2;\n          },\n          /**\n           * Inserts tokens _before_ another token in a language definition or any other grammar.\n           *\n           * ## Usage\n           *\n           * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n           * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n           * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n           * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n           * this:\n           *\n           * ```js\n           * Prism.languages.markup.style = {\n           *     // token\n           * };\n           * ```\n           *\n           * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n           * before existing tokens. For the CSS example above, you would use it like this:\n           *\n           * ```js\n           * Prism.languages.insertBefore('markup', 'cdata', {\n           *     'style': {\n           *         // token\n           *     }\n           * });\n           * ```\n           *\n           * ## Special cases\n           *\n           * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n           * will be ignored.\n           *\n           * This behavior can be used to insert tokens after `before`:\n           *\n           * ```js\n           * Prism.languages.insertBefore('markup', 'comment', {\n           *     'comment': Prism.languages.markup.comment,\n           *     // tokens after 'comment'\n           * });\n           * ```\n           *\n           * ## Limitations\n           *\n           * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n           * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n           * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n           * deleting properties which is necessary to insert at arbitrary positions.\n           *\n           * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n           * Instead, it will create a new object and replace all references to the target object with the new one. This\n           * can be done without temporarily deleting properties, so the iteration order is well-defined.\n           *\n           * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n           * you hold the target object in a variable, then the value of the variable will not change.\n           *\n           * ```js\n           * var oldMarkup = Prism.languages.markup;\n           * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n           *\n           * assert(oldMarkup !== Prism.languages.markup);\n           * assert(newMarkup === Prism.languages.markup);\n           * ```\n           *\n           * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n           * object to be modified.\n           * @param {string} before The key to insert before.\n           * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n           * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n           * object to be modified.\n           *\n           * Defaults to `Prism.languages`.\n           * @returns {Grammar} The new grammar object.\n           * @public\n           */\n          insertBefore: function (inside, before, insert, root) {\n            root = root || /** @type {any} */\n            _.languages;\n            var grammar = root[inside];\n            var ret = {};\n            for (var token in grammar) {\n              if (grammar.hasOwnProperty(token)) {\n                if (token == before) {\n                  for (var newToken in insert) {\n                    if (insert.hasOwnProperty(newToken)) {\n                      ret[newToken] = insert[newToken];\n                    }\n                  }\n                }\n                if (!insert.hasOwnProperty(token)) {\n                  ret[token] = grammar[token];\n                }\n              }\n            }\n            var old = root[inside];\n            root[inside] = ret;\n            _.languages.DFS(_.languages, function (key, value) {\n              if (value === old && key != inside) {\n                this[key] = ret;\n              }\n            });\n            return ret;\n          },\n          // Traverse a language definition with Depth First Search\n          DFS: function DFS(o, callback, type, visited) {\n            visited = visited || {};\n            var objId = _.util.objId;\n            for (var i in o) {\n              if (o.hasOwnProperty(i)) {\n                callback.call(o, i, o[i], type || i);\n                var property = o[i];\n                var propertyType = _.util.type(property);\n                if (propertyType === \"Object\" && !visited[objId(property)]) {\n                  visited[objId(property)] = true;\n                  DFS(property, callback, null, visited);\n                } else if (propertyType === \"Array\" && !visited[objId(property)]) {\n                  visited[objId(property)] = true;\n                  DFS(property, callback, i, visited);\n                }\n              }\n            }\n          }\n        },\n        plugins: {},\n        /**\n         * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n         * and the language definitions to use, and returns a string with the HTML produced.\n         *\n         * The following hooks will be run:\n         * 1. `before-tokenize`\n         * 2. `after-tokenize`\n         * 3. `wrap`: On each {@link Token}.\n         *\n         * @param {string} text A string with the code to be highlighted.\n         * @param {Grammar} grammar An object containing the tokens to use.\n         *\n         * Usually a language definition like `Prism.languages.markup`.\n         * @param {string} language The name of the language definition passed to `grammar`.\n         * @returns {string} The highlighted HTML.\n         * @memberof Prism\n         * @public\n         * @example\n         * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n         */\n        highlight: function (text, grammar, language) {\n          var env = {\n            code: text,\n            grammar,\n            language\n          };\n          _.hooks.run(\"before-tokenize\", env);\n          if (!env.grammar) {\n            throw new Error('The language \"' + env.language + '\" has no grammar.');\n          }\n          env.tokens = _.tokenize(env.code, env.grammar);\n          _.hooks.run(\"after-tokenize\", env);\n          return Token.stringify(_.util.encode(env.tokens), env.language);\n        },\n        /**\n         * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n         * and the language definitions to use, and returns an array with the tokenized code.\n         *\n         * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n         *\n         * This method could be useful in other contexts as well, as a very crude parser.\n         *\n         * @param {string} text A string with the code to be highlighted.\n         * @param {Grammar} grammar An object containing the tokens to use.\n         *\n         * Usually a language definition like `Prism.languages.markup`.\n         * @returns {TokenStream} An array of strings and tokens, a token stream.\n         * @memberof Prism\n         * @public\n         * @example\n         * let code = `var foo = 0;`;\n         * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n         * tokens.forEach(token => {\n         *     if (token instanceof Prism.Token && token.type === 'number') {\n         *         console.log(`Found numeric literal: ${token.content}`);\n         *     }\n         * });\n         */\n        tokenize: function (text, grammar) {\n          var rest = grammar.rest;\n          if (rest) {\n            for (var token in rest) {\n              grammar[token] = rest[token];\n            }\n            delete grammar.rest;\n          }\n          var tokenList = new LinkedList();\n          addAfter(tokenList, tokenList.head, text);\n          matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n          return toArray(tokenList);\n        },\n        /**\n         * @namespace\n         * @memberof Prism\n         * @public\n         */\n        hooks: {\n          all: {},\n          /**\n           * Adds the given callback to the list of callbacks for the given hook.\n           *\n           * The callback will be invoked when the hook it is registered for is run.\n           * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n           *\n           * One callback function can be registered to multiple hooks and the same hook multiple times.\n           *\n           * @param {string} name The name of the hook.\n           * @param {HookCallback} callback The callback function which is given environment variables.\n           * @public\n           */\n          add: function (name, callback) {\n            var hooks2 = _.hooks.all;\n            hooks2[name] = hooks2[name] || [];\n            hooks2[name].push(callback);\n          },\n          /**\n           * Runs a hook invoking all registered callbacks with the given environment variables.\n           *\n           * Callbacks will be invoked synchronously and in the order in which they were registered.\n           *\n           * @param {string} name The name of the hook.\n           * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n           * @public\n           */\n          run: function (name, env) {\n            var callbacks = _.hooks.all[name];\n            if (!callbacks || !callbacks.length) {\n              return;\n            }\n            for (var i = 0, callback; callback = callbacks[i++];) {\n              callback(env);\n            }\n          }\n        },\n        Token\n      };\n      function Token(type, content, alias, matchedStr) {\n        this.type = type;\n        this.content = content;\n        this.alias = alias;\n        this.length = (matchedStr || \"\").length | 0;\n      }\n      Token.stringify = function stringify(o, language) {\n        if (typeof o == \"string\") {\n          return o;\n        }\n        if (Array.isArray(o)) {\n          var s = \"\";\n          o.forEach(function (e) {\n            s += stringify(e, language);\n          });\n          return s;\n        }\n        var env = {\n          type: o.type,\n          content: stringify(o.content, language),\n          tag: \"span\",\n          classes: [\"token\", o.type],\n          attributes: {},\n          language\n        };\n        var aliases = o.alias;\n        if (aliases) {\n          if (Array.isArray(aliases)) {\n            Array.prototype.push.apply(env.classes, aliases);\n          } else {\n            env.classes.push(aliases);\n          }\n        }\n        _.hooks.run(\"wrap\", env);\n        var attributes = \"\";\n        for (var name in env.attributes) {\n          attributes += \" \" + name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n        }\n        return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + attributes + \">\" + env.content + \"</\" + env.tag + \">\";\n      };\n      function matchPattern(pattern, pos, text, lookbehind) {\n        pattern.lastIndex = pos;\n        var match = pattern.exec(text);\n        if (match && lookbehind && match[1]) {\n          var lookbehindLength = match[1].length;\n          match.index += lookbehindLength;\n          match[0] = match[0].slice(lookbehindLength);\n        }\n        return match;\n      }\n      function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n        for (var token in grammar) {\n          if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n            continue;\n          }\n          var patterns = grammar[token];\n          patterns = Array.isArray(patterns) ? patterns : [patterns];\n          for (var j = 0; j < patterns.length; ++j) {\n            if (rematch && rematch.cause == token + \",\" + j) {\n              return;\n            }\n            var patternObj = patterns[j];\n            var inside = patternObj.inside;\n            var lookbehind = !!patternObj.lookbehind;\n            var greedy = !!patternObj.greedy;\n            var alias = patternObj.alias;\n            if (greedy && !patternObj.pattern.global) {\n              var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n              patternObj.pattern = RegExp(patternObj.pattern.source, flags + \"g\");\n            }\n            var pattern = patternObj.pattern || patternObj;\n            for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n              if (rematch && pos >= rematch.reach) {\n                break;\n              }\n              var str = currentNode.value;\n              if (tokenList.length > text.length) {\n                return;\n              }\n              if (str instanceof Token) {\n                continue;\n              }\n              var removeCount = 1;\n              var match;\n              if (greedy) {\n                match = matchPattern(pattern, pos, text, lookbehind);\n                if (!match || match.index >= text.length) {\n                  break;\n                }\n                var from = match.index;\n                var to = match.index + match[0].length;\n                var p = pos;\n                p += currentNode.value.length;\n                while (from >= p) {\n                  currentNode = currentNode.next;\n                  p += currentNode.value.length;\n                }\n                p -= currentNode.value.length;\n                pos = p;\n                if (currentNode.value instanceof Token) {\n                  continue;\n                }\n                for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === \"string\"); k = k.next) {\n                  removeCount++;\n                  p += k.value.length;\n                }\n                removeCount--;\n                str = text.slice(pos, p);\n                match.index -= pos;\n              } else {\n                match = matchPattern(pattern, 0, str, lookbehind);\n                if (!match) {\n                  continue;\n                }\n              }\n              var from = match.index;\n              var matchStr = match[0];\n              var before = str.slice(0, from);\n              var after = str.slice(from + matchStr.length);\n              var reach = pos + str.length;\n              if (rematch && reach > rematch.reach) {\n                rematch.reach = reach;\n              }\n              var removeFrom = currentNode.prev;\n              if (before) {\n                removeFrom = addAfter(tokenList, removeFrom, before);\n                pos += before.length;\n              }\n              removeRange(tokenList, removeFrom, removeCount);\n              var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n              currentNode = addAfter(tokenList, removeFrom, wrapped);\n              if (after) {\n                addAfter(tokenList, currentNode, after);\n              }\n              if (removeCount > 1) {\n                var nestedRematch = {\n                  cause: token + \",\" + j,\n                  reach\n                };\n                matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                if (rematch && nestedRematch.reach > rematch.reach) {\n                  rematch.reach = nestedRematch.reach;\n                }\n              }\n            }\n          }\n        }\n      }\n      function LinkedList() {\n        var head = {\n          value: null,\n          prev: null,\n          next: null\n        };\n        var tail = {\n          value: null,\n          prev: head,\n          next: null\n        };\n        head.next = tail;\n        this.head = head;\n        this.tail = tail;\n        this.length = 0;\n      }\n      function addAfter(list, node, value) {\n        var next = node.next;\n        var newNode = {\n          value,\n          prev: node,\n          next\n        };\n        node.next = newNode;\n        next.prev = newNode;\n        list.length++;\n        return newNode;\n      }\n      function removeRange(list, node, count) {\n        var next = node.next;\n        for (var i = 0; i < count && next !== list.tail; i++) {\n          next = next.next;\n        }\n        node.next = next;\n        next.prev = node;\n        list.length -= i;\n      }\n      function toArray(list) {\n        var array = [];\n        var node = list.head.next;\n        while (node !== list.tail) {\n          array.push(node.value);\n          node = node.next;\n        }\n        return array;\n      }\n      return _;\n    }();\n    module.exports = Prism2;\n    Prism2.default = Prism2;\n  }\n});\n\n// src/prism-langs.ts\nvar Prism = __toESM(require_prism());\n!function (e) {\n  var n = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: \"escape\"\n    },\n    t = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/,\n    a = \"(?:[^\\\\\\\\-]|\" + t.source + \")\",\n    a = RegExp(a + \"-\" + a),\n    r = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: \"variable\"\n    };\n  e.languages.regex = {\n    \"char-class\": {\n      pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n      lookbehind: true,\n      inside: {\n        \"char-class-negation\": {\n          pattern: /(^\\[)\\^/,\n          lookbehind: true,\n          alias: \"operator\"\n        },\n        \"char-class-punctuation\": {\n          pattern: /^\\[|\\]$/,\n          alias: \"punctuation\"\n        },\n        range: {\n          pattern: a,\n          inside: {\n            escape: t,\n            \"range-punctuation\": {\n              pattern: /-/,\n              alias: \"operator\"\n            }\n          }\n        },\n        \"special-escape\": n,\n        \"char-set\": {\n          pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n          alias: \"class-name\"\n        },\n        escape: t\n      }\n    },\n    \"special-escape\": n,\n    \"char-set\": {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: \"class-name\"\n    },\n    backreference: [{\n      pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n      alias: \"keyword\"\n    }, {\n      pattern: /\\\\k<[^<>']+>/,\n      alias: \"keyword\",\n      inside: {\n        \"group-name\": r\n      }\n    }],\n    anchor: {\n      pattern: /[$^]|\\\\[ABbGZz]/,\n      alias: \"function\"\n    },\n    escape: t,\n    group: [{\n      pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n      alias: \"punctuation\",\n      inside: {\n        \"group-name\": r\n      }\n    }, {\n      pattern: /\\)/,\n      alias: \"punctuation\"\n    }],\n    quantifier: {\n      pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n      alias: \"number\"\n    },\n    alternation: {\n      pattern: /\\|/,\n      alias: \"keyword\"\n    }\n  };\n}(Prism), Prism.languages.clike = {\n  comment: [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  keyword: /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  boolean: /\\b(?:false|true)\\b/,\n  function: /\\b\\w+(?=\\()/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  punctuation: /[{}[\\];(),.:]/\n}, Prism.languages.javascript = Prism.languages.extend(\"clike\", {\n  \"class-name\": [Prism.languages.clike[\"class-name\"], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  keyword: [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  number: {\n    pattern: RegExp(/(^|[^\\w$])/.source + \"(?:\" + /NaN|Infinity/.source + \"|\" + /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + /\\d+(?:_\\d+)*n/.source + \"|\" + /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source + \")\" + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n}), Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/, Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n  regex: {\n    pattern: RegExp(/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + /\\//.source + \"(?:\" + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + \"|\" + /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + \")\" + /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      \"regex-source\": {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: \"language-regex\",\n        inside: Prism.languages.regex\n      },\n      \"regex-delimiter\": /^\\/|\\/$/,\n      \"regex-flags\": /^[a-z]+$/\n    }\n  },\n  \"function-variable\": {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: \"function\"\n  },\n  parameter: [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n}), Prism.languages.insertBefore(\"javascript\", \"string\", {\n  hashbang: {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: \"comment\"\n  },\n  \"template-string\": {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      \"template-punctuation\": {\n        pattern: /^`|`$/,\n        alias: \"string\"\n      },\n      interpolation: {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          \"interpolation-punctuation\": {\n            pattern: /^\\$\\{|\\}$/,\n            alias: \"punctuation\"\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  },\n  \"string-property\": {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: \"property\"\n  }\n}), Prism.languages.insertBefore(\"javascript\", \"operator\", {\n  \"literal-property\": {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: \"property\"\n  }\n}), Prism.languages.markup && (Prism.languages.markup.tag.addInlined(\"script\", \"javascript\"), Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, \"javascript\")), Prism.languages.js = Prism.languages.javascript, Prism.languages.actionscript = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n  operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n}), Prism.languages.actionscript[\"class-name\"].alias = \"function\", delete Prism.languages.actionscript.parameter, delete Prism.languages.actionscript[\"literal-property\"], Prism.languages.markup && Prism.languages.insertBefore(\"actionscript\", \"string\", {\n  xml: {\n    pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n    lookbehind: true,\n    inside: Prism.languages.markup\n  }\n}), function (e) {\n  var n = /#(?!\\{).+/,\n    t = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: \"variable\"\n    };\n  e.languages.coffeescript = e.languages.extend(\"javascript\", {\n    comment: n,\n    string: [{\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        interpolation: t\n      }\n    }],\n    keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    \"class-member\": {\n      pattern: /@(?!\\d)\\w+/,\n      alias: \"variable\"\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"comment\", {\n    \"multiline-comment\": {\n      pattern: /###[\\s\\S]+?###/,\n      alias: \"comment\"\n    },\n    \"block-regex\": {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: \"regex\",\n      inside: {\n        comment: n,\n        interpolation: t\n      }\n    }\n  }), e.languages.insertBefore(\"coffeescript\", \"string\", {\n    \"inline-javascript\": {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: \"punctuation\"\n        },\n        script: {\n          pattern: /[\\s\\S]+/,\n          alias: \"language-javascript\",\n          inside: e.languages.javascript\n        }\n      }\n    },\n    \"multiline-string\": [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: \"string\"\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: \"string\",\n      inside: {\n        interpolation: t\n      }\n    }]\n  }), e.languages.insertBefore(\"coffeescript\", \"keyword\", {\n    property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n  }), delete e.languages.coffeescript[\"template-string\"], e.languages.coffee = e.languages.coffeescript;\n}(Prism), function (l) {\n  var e = l.languages.javadoclike = {\n    parameter: {\n      pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    keyword: {\n      pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    punctuation: /[{}]/\n  };\n  Object.defineProperty(e, \"addSupport\", {\n    value: function (e2, o) {\n      (e2 = \"string\" == typeof e2 ? [e2] : e2).forEach(function (e3) {\n        var n = function (e4) {\n            e4.inside || (e4.inside = {}), e4.inside.rest = o;\n          },\n          t = \"doc-comment\";\n        if (a = l.languages[e3]) {\n          var a,\n            r = a[t];\n          if ((r = r ? r : (a = l.languages.insertBefore(e3, \"comment\", {\n            \"doc-comment\": {\n              pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n              lookbehind: true,\n              alias: \"comment\"\n            }\n          }))[t]) instanceof RegExp && (r = a[t] = {\n            pattern: r\n          }), Array.isArray(r)) for (var s = 0, i = r.length; s < i; s++) r[s] instanceof RegExp && (r[s] = {\n            pattern: r[s]\n          }), n(r[s]);else n(r);\n        }\n      });\n    }\n  }), e.addSupport([\"java\", \"javascript\", \"php\"], e);\n}(Prism), function (e) {\n  var n = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n    n = (e.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: RegExp(\"@[\\\\w-](?:\" + /[^;{\\s\"']|\\s+(?!\\s)/.source + \"|\" + n.source + \")*?\" + /(?:;|(?=\\s*\\{))/.source),\n        inside: {\n          rule: /^@[\\w-]+/,\n          \"selector-function-argument\": {\n            pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: \"selector\"\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          }\n        }\n      },\n      url: {\n        pattern: RegExp(\"\\\\burl\\\\((?:\" + n.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp(\"^\" + n.source + \"$\"),\n            alias: \"url\"\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(`(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"'\\\\s]|\\\\s+(?![\\\\s{])|` + n.source + \")*(?=\\\\s*\\\\{)\"),\n        lookbehind: true\n      },\n      string: {\n        pattern: n,\n        greedy: true\n      },\n      property: {\n        pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }, e.languages.css.atrule.inside.rest = e.languages.css, e.languages.markup);\n  n && (n.tag.addInlined(\"style\", \"css\"), n.tag.addAttribute(\"style\", \"css\"));\n}(Prism), function (e) {\n  var n = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    n = (e.languages.css.selector = {\n      pattern: e.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: n = {\n        \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        \"pseudo-class\": /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp(`\\\\[(?:[^[\\\\]\"']|` + n.source + \")*\\\\]\"),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            \"case-sensitivity\": {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: \"keyword\"\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            \"attr-name\": {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            \"attr-value\": [n, {\n              pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n              lookbehind: true\n            }],\n            operator: /[|~*^$]?=/\n          }\n        },\n        \"n-th\": [{\n          pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n          lookbehind: true,\n          inside: {\n            number: /[\\dn]+/,\n            operator: /[+-]/\n          }\n        }, {\n          pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n          lookbehind: true\n        }],\n        combinator: />|\\+|~|\\|\\|/,\n        punctuation: /[(),]/\n      }\n    }, e.languages.css.atrule.inside[\"selector-function-argument\"].inside = n, e.languages.insertBefore(\"css\", \"property\", {\n      variable: {\n        pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    }), {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    }),\n    t = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    };\n  e.languages.insertBefore(\"css\", \"function\", {\n    operator: {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    hexcode: {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: \"color\"\n    },\n    color: [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        unit: n,\n        number: t,\n        function: /[\\w-]+(?=\\()/,\n        punctuation: /[(),]/\n      }\n    }],\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: n,\n    number: t\n  });\n}(Prism), function (e) {\n  var n = /[*&][^\\s[\\]{},]+/,\n    t = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/,\n    a = \"(?:\" + t.source + \"(?:[ \t]+\" + n.source + \")?|\" + n.source + \"(?:[ \t]+\" + t.source + \")?)\",\n    r = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n      return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n    }),\n    s = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  function i(e2, n2) {\n    n2 = (n2 || \"\").replace(/m/g, \"\") + \"m\";\n    var t2 = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return a;\n    }).replace(/<<value>>/g, function () {\n      return e2;\n    });\n    return RegExp(t2, n2);\n  }\n  e.languages.yaml = {\n    scalar: {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return a;\n      })),\n      lookbehind: true,\n      alias: \"string\"\n    },\n    comment: /#.*/,\n    key: {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return a;\n      }).replace(/<<key>>/g, function () {\n        return \"(?:\" + r + \"|\" + s + \")\";\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: \"atrule\"\n    },\n    directive: {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: \"important\"\n    },\n    datetime: {\n      pattern: i(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: \"number\"\n    },\n    boolean: {\n      pattern: i(/false|true/.source, \"i\"),\n      lookbehind: true,\n      alias: \"important\"\n    },\n    null: {\n      pattern: i(/null|~/.source, \"i\"),\n      lookbehind: true,\n      alias: \"important\"\n    },\n    string: {\n      pattern: i(s),\n      lookbehind: true,\n      greedy: true\n    },\n    number: {\n      pattern: i(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, \"i\"),\n      lookbehind: true\n    },\n    tag: t,\n    important: n,\n    punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  }, e.languages.yml = e.languages.yaml;\n}(Prism), Prism.languages.markup = {\n  comment: {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  prolog: {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  doctype: {\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      \"internal-subset\": {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      punctuation: /^<!|>$|[[\\]]/,\n      \"doctype-tag\": /^DOCTYPE/i,\n      name: /[^\\s<>'\"]+/\n    }\n  },\n  cdata: {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  tag: {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      },\n      \"special-attr\": [],\n      \"attr-value\": {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          punctuation: [{\n            pattern: /^=/,\n            alias: \"attr-equals\"\n          }, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      punctuation: /\\/?>/,\n      \"attr-name\": {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          namespace: /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  entity: [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: \"named-entity\"\n  }, /&#x?[\\da-f]{1,8};/i]\n}, Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity = Prism.languages.markup.entity, Prism.languages.markup.doctype.inside[\"internal-subset\"].inside = Prism.languages.markup, Prism.hooks.add(\"wrap\", function (e) {\n  \"entity\" === e.type && (e.attributes.title = e.content.replace(/&amp;/, \"&\"));\n}), Object.defineProperty(Prism.languages.markup.tag, \"addInlined\", {\n  value: function (e, n) {\n    var t = {},\n      t = (t[\"language-\" + n] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[n]\n      }, t.cdata = /^<!\\[CDATA\\[|\\]\\]>$/i, {\n        \"included-cdata\": {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: t\n        }\n      }),\n      n = (t[\"language-\" + n] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[n]\n      }, {});\n    n[e] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return e;\n      }), \"i\"),\n      lookbehind: true,\n      greedy: true,\n      inside: t\n    }, Prism.languages.insertBefore(\"markup\", \"cdata\", n);\n  }\n}), Object.defineProperty(Prism.languages.markup.tag, \"addAttribute\", {\n  value: function (e, n) {\n    Prism.languages.markup.tag.inside[\"special-attr\"].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + \"(?:\" + e + \")\" + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, \"i\"),\n      lookbehind: true,\n      inside: {\n        \"attr-name\": /^[^\\s=]+/,\n        \"attr-value\": {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            value: {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [n, \"language-\" + n],\n              inside: Prism.languages[n]\n            },\n            punctuation: [{\n              pattern: /^=/,\n              alias: \"attr-equals\"\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n}), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup, Prism.languages.xml = Prism.languages.extend(\"markup\", {}), Prism.languages.ssml = Prism.languages.xml, Prism.languages.atom = Prism.languages.xml, Prism.languages.rss = Prism.languages.xml, function (o) {\n  var n = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  function e(e2) {\n    return e2 = e2.replace(/<inner>/g, function () {\n      return n;\n    }), RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + \"(?:\" + e2 + \")\");\n  }\n  var t = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source,\n    a = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n      return t;\n    }),\n    r = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source,\n    l = (o.languages.markdown = o.languages.extend(\"markup\", {}), o.languages.insertBefore(\"markdown\", \"prolog\", {\n      \"front-matter-block\": {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          \"front-matter\": {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: [\"yaml\", \"language-yaml\"],\n            inside: o.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: \"punctuation\"\n      },\n      table: {\n        pattern: RegExp(\"^\" + a + r + \"(?:\" + a + \")*\", \"m\"),\n        inside: {\n          \"table-data-rows\": {\n            pattern: RegExp(\"^(\" + a + r + \")(?:\" + a + \")*$\"),\n            lookbehind: true,\n            inside: {\n              \"table-data\": {\n                pattern: RegExp(t),\n                inside: o.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          \"table-line\": {\n            pattern: RegExp(\"^(\" + a + \")\" + r + \"$\"),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          \"table-header-row\": {\n            pattern: RegExp(\"^\" + a + \"$\"),\n            inside: {\n              \"table-header\": {\n                pattern: RegExp(t),\n                alias: \"important\",\n                inside: o.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [{\n        pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n        lookbehind: true,\n        alias: \"keyword\"\n      }, {\n        pattern: /^```[\\s\\S]*?^```$/m,\n        greedy: true,\n        inside: {\n          \"code-block\": {\n            pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n            lookbehind: true\n          },\n          \"code-language\": {\n            pattern: /^(```).+/,\n            lookbehind: true\n          },\n          punctuation: /```/\n        }\n      }],\n      title: [{\n        pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n        alias: \"important\",\n        inside: {\n          punctuation: /==+$|--+$/\n        }\n      }, {\n        pattern: /(^\\s*)#.+/m,\n        lookbehind: true,\n        alias: \"important\",\n        inside: {\n          punctuation: /^#+|#+$/\n        }\n      }],\n      hr: {\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: \"punctuation\"\n      },\n      list: {\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: \"punctuation\"\n      },\n      \"url-reference\": {\n        pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: \"url\"\n      },\n      bold: {\n        pattern: e(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {}\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        pattern: e(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {}\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        pattern: e(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {}\n          },\n          punctuation: /~~?/\n        }\n      },\n      \"code-snippet\": {\n        pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: [\"code\", \"keyword\"]\n      },\n      url: {\n        pattern: e(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {}\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    }), [\"url\", \"bold\", \"italic\", \"strike\"].forEach(function (n2) {\n      [\"url\", \"bold\", \"italic\", \"strike\", \"code-snippet\"].forEach(function (e2) {\n        n2 !== e2 && (o.languages.markdown[n2].inside.content.inside[e2] = o.languages.markdown[e2]);\n      });\n    }), o.hooks.add(\"after-tokenize\", function (e2) {\n      \"markdown\" !== e2.language && \"md\" !== e2.language || !function e3(n2) {\n        if (n2 && \"string\" != typeof n2) for (var t2 = 0, a2 = n2.length; t2 < a2; t2++) {\n          var r2,\n            s = n2[t2];\n          \"code\" !== s.type ? e3(s.content) : (r2 = s.content[1], s = s.content[3], r2 && s && \"code-language\" === r2.type && \"code-block\" === s.type && \"string\" == typeof r2.content && (r2 = r2.content.replace(/\\b#/g, \"sharp\").replace(/\\b\\+\\+/g, \"pp\"), r2 = \"language-\" + (r2 = (/[a-z][\\w-]*/i.exec(r2) || [\"\"])[0].toLowerCase()), s.alias ? \"string\" == typeof s.alias ? s.alias = [s.alias, r2] : s.alias.push(r2) : s.alias = [r2]));\n        }\n      }(e2.tokens);\n    }), o.hooks.add(\"wrap\", function (e2) {\n      if (\"code-block\" === e2.type) {\n        for (var n2 = \"\", t2 = 0, a2 = e2.classes.length; t2 < a2; t2++) {\n          var r2 = e2.classes[t2],\n            r2 = /language-(.+)/.exec(r2);\n          if (r2) {\n            n2 = r2[1];\n            break;\n          }\n        }\n        var s,\n          i = o.languages[n2];\n        i ? e2.content = o.highlight(function (e3) {\n          e3 = e3.replace(l, \"\");\n          return e3 = e3.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (e4, n3) {\n            var t3;\n            return \"#\" === (n3 = n3.toLowerCase())[0] ? (t3 = \"x\" === n3[1] ? parseInt(n3.slice(2), 16) : Number(n3.slice(1)), c(t3)) : u[n3] || e4;\n          });\n        }(e2.content), i, n2) : n2 && \"none\" !== n2 && o.plugins.autoloader && (s = \"md-\" + /* @__PURE__ */new Date().valueOf() + \"-\" + Math.floor(1e16 * Math.random()), e2.attributes.id = s, o.plugins.autoloader.loadLanguages(n2, function () {\n          var e3 = document.getElementById(s);\n          e3 && (e3.innerHTML = o.highlight(e3.textContent, o.languages[n2], n2));\n        }));\n      }\n    }), RegExp(o.languages.markup.tag.pattern.source, \"gi\")),\n    u = {\n      amp: \"&\",\n      lt: \"<\",\n      gt: \">\",\n      quot: '\"'\n    },\n    c = String.fromCodePoint || String.fromCharCode;\n  o.languages.md = o.languages.markdown;\n}(Prism), Prism.languages.graphql = {\n  comment: /#.*/,\n  description: {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: \"string\",\n    inside: {\n      \"language-markdown\": {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  string: {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  boolean: /\\b(?:false|true)\\b/,\n  variable: /\\$[a-z_]\\w*/i,\n  directive: {\n    pattern: /@[a-z_]\\w*/i,\n    alias: \"function\"\n  },\n  \"attr-name\": {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  \"atom-input\": {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: \"class-name\"\n  },\n  scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n  \"class-name\": {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  fragment: {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: \"function\"\n  },\n  \"definition-mutation\": {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: \"function\"\n  },\n  \"definition-query\": {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: \"function\"\n  },\n  keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  operator: /[!=|&]|\\.{3}/,\n  \"property-query\": /\\w+(?=\\s*\\()/,\n  object: /\\w+(?=\\s*\\{)/,\n  punctuation: /[!(){}\\[\\]:=,]/,\n  property: /\\w+/\n}, Prism.hooks.add(\"after-tokenize\", function (e) {\n  if (\"graphql\" === e.language) for (var i = e.tokens.filter(function (e2) {\n      return \"string\" != typeof e2 && \"comment\" !== e2.type && \"scalar\" !== e2.type;\n    }), o = 0; o < i.length;) {\n    var n = i[o++];\n    if (\"keyword\" === n.type && \"mutation\" === n.content) {\n      var t = [];\n      if (p([\"definition-mutation\", \"punctuation\"]) && \"(\" === c(1).content) {\n        o += 2;\n        var a = d(/^\\($/, /^\\)$/);\n        if (-1 === a) continue;\n        for (; o < a; o++) {\n          var r = c(0);\n          \"variable\" === r.type && (g(r, \"variable-input\"), t.push(r.content));\n        }\n        o = a + 1;\n      }\n      if (p([\"punctuation\", \"property-query\"]) && \"{\" === c(0).content && (o++, g(c(0), \"property-mutation\"), 0 < t.length)) {\n        var s = d(/^\\{$/, /^\\}$/);\n        if (-1 !== s) for (var l = o; l < s; l++) {\n          var u = i[l];\n          \"variable\" === u.type && 0 <= t.indexOf(u.content) && g(u, \"variable-input\");\n        }\n      }\n    }\n  }\n  function c(e2) {\n    return i[o + e2];\n  }\n  function p(e2, n2) {\n    n2 = n2 || 0;\n    for (var t2 = 0; t2 < e2.length; t2++) {\n      var a2 = c(t2 + n2);\n      if (!a2 || a2.type !== e2[t2]) return;\n    }\n    return 1;\n  }\n  function d(e2, n2) {\n    for (var t2 = 1, a2 = o; a2 < i.length; a2++) {\n      var r2 = i[a2],\n        s2 = r2.content;\n      if (\"punctuation\" === r2.type && \"string\" == typeof s2) {\n        if (e2.test(s2)) t2++;else if (n2.test(s2) && 0 === --t2) return a2;\n      }\n    }\n    return -1;\n  }\n  function g(e2, n2) {\n    var t2 = e2.alias;\n    t2 ? Array.isArray(t2) || (e2.alias = t2 = [t2]) : e2.alias = t2 = [], t2.push(n2);\n  }\n}), Prism.languages.sql = {\n  comment: {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  variable: [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  string: {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  identifier: {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      punctuation: /^`|`$/\n    }\n  },\n  function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  punctuation: /[;[\\]()`,.]/\n}, function (b) {\n  var e = b.languages.javascript[\"template-string\"],\n    t = e.pattern.source,\n    m = e.inside.interpolation,\n    f = m.inside[\"interpolation-punctuation\"],\n    s = m.pattern.source;\n  function n(e2, n2) {\n    if (b.languages[e2]) return {\n      pattern: RegExp(\"((?:\" + n2 + \")\\\\s*)\" + t),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        \"template-punctuation\": {\n          pattern: /^`|`$/,\n          alias: \"string\"\n        },\n        \"embedded-code\": {\n          pattern: /[\\s\\S]+/,\n          alias: e2\n        }\n      }\n    };\n  }\n  function h(e2, n2, t2) {\n    e2 = {\n      code: e2,\n      grammar: n2,\n      language: t2\n    };\n    return b.hooks.run(\"before-tokenize\", e2), e2.tokens = b.tokenize(e2.code, e2.grammar), b.hooks.run(\"after-tokenize\", e2), e2.tokens;\n  }\n  function l(a2, e2, r) {\n    var n2 = b.tokenize(a2, {\n        interpolation: {\n          pattern: RegExp(s),\n          lookbehind: true\n        }\n      }),\n      p = 0,\n      d = {},\n      n2 = h(n2.map(function (e3) {\n        if (\"string\" == typeof e3) return e3;\n        for (var n3, t2, e3 = e3.content; -1 !== a2.indexOf((t2 = p++, n3 = \"___\" + r.toUpperCase() + \"_\" + t2 + \"___\")););\n        return d[n3] = e3, n3;\n      }).join(\"\"), e2, r),\n      g = Object.keys(d);\n    return p = 0, function e3(n3) {\n      for (var t2 = 0; t2 < n3.length; t2++) {\n        if (p >= g.length) return;\n        var a3,\n          r2,\n          s2,\n          i,\n          o,\n          l2,\n          u2,\n          c = n3[t2];\n        \"string\" == typeof c || \"string\" == typeof c.content ? (a3 = g[p], -1 !== (u2 = (l2 = \"string\" == typeof c ? c : c.content).indexOf(a3)) && (++p, r2 = l2.substring(0, u2), o = d[a3], s2 = void 0, (i = {})[\"interpolation-punctuation\"] = f, 3 === (i = b.tokenize(o, i)).length && ((s2 = [1, 1]).push.apply(s2, h(i[1], b.languages.javascript, \"javascript\")), i.splice.apply(i, s2)), s2 = new b.Token(\"interpolation\", i, m.alias, o), i = l2.substring(u2 + a3.length), o = [], r2 && o.push(r2), o.push(s2), i && (e3(l2 = [i]), o.push.apply(o, l2)), \"string\" == typeof c ? (n3.splice.apply(n3, [t2, 1].concat(o)), t2 += o.length - 1) : c.content = o)) : (u2 = c.content, Array.isArray(u2) ? e3(u2) : e3([u2]));\n      }\n    }(n2), new b.Token(r, n2, \"language-\" + r, a2);\n  }\n  b.languages.javascript[\"template-string\"] = [n(\"css\", /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), n(\"html\", /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), n(\"svg\", /\\bsvg/.source), n(\"markdown\", /\\b(?:markdown|md)/.source), n(\"graphql\", /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), n(\"sql\", /\\bsql/.source), e].filter(Boolean);\n  var a = {\n    javascript: true,\n    js: true,\n    typescript: true,\n    ts: true,\n    jsx: true,\n    tsx: true\n  };\n  function u(e2) {\n    return \"string\" == typeof e2 ? e2 : Array.isArray(e2) ? e2.map(u).join(\"\") : u(e2.content);\n  }\n  b.hooks.add(\"after-tokenize\", function (e2) {\n    e2.language in a && !function e3(n2) {\n      for (var t2 = 0, a2 = n2.length; t2 < a2; t2++) {\n        var r,\n          s2,\n          i,\n          o = n2[t2];\n        \"string\" != typeof o && (r = o.content, Array.isArray(r) ? \"template-string\" === o.type ? (o = r[1], 3 === r.length && \"string\" != typeof o && \"embedded-code\" === o.type && (s2 = u(o), o = o.alias, o = Array.isArray(o) ? o[0] : o, i = b.languages[o]) && (r[1] = l(s2, i, o))) : e3(r) : \"string\" != typeof r && e3([r]));\n      }\n    }(e2.tokens);\n  });\n}(Prism), function (e) {\n  e.languages.typescript = e.languages.extend(\"javascript\", {\n    \"class-name\": {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null\n    },\n    builtin: /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }), e.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, /\\btype\\b(?=\\s*(?:[\\{*]|$))/), delete e.languages.typescript.parameter, delete e.languages.typescript[\"literal-property\"];\n  var n = e.languages.extend(\"typescript\", {});\n  delete n[\"class-name\"], e.languages.typescript[\"class-name\"].inside = n, e.languages.insertBefore(\"typescript\", \"function\", {\n    decorator: {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        at: {\n          pattern: /^@/,\n          alias: \"operator\"\n        },\n        function: /^[\\s\\S]+/\n      }\n    },\n    \"generic-function\": {\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        generic: {\n          pattern: /<[\\s\\S]+/,\n          alias: \"class-name\",\n          inside: n\n        }\n      }\n    }\n  }), e.languages.ts = e.languages.typescript;\n}(Prism), function (e) {\n  var n = e.languages.javascript,\n    t = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source,\n    a = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + t + \"\\\\s+)?)\";\n  e.languages.jsdoc = e.languages.extend(\"javadoclike\", {\n    parameter: {\n      pattern: RegExp(a + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  }), e.languages.insertBefore(\"jsdoc\", \"keyword\", {\n    \"optional-parameter\": {\n      pattern: RegExp(a + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        parameter: {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        code: {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: n,\n          alias: \"language-javascript\"\n        },\n        punctuation: /[=[\\]]/\n      }\n    },\n    \"class-name\": [{\n      pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function () {\n        return t;\n      })),\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }, {\n      pattern: RegExp(\"(@[a-z]+\\\\s+)\" + t),\n      lookbehind: true,\n      inside: {\n        string: n.string,\n        number: n.number,\n        boolean: n.boolean,\n        keyword: e.languages.typescript.keyword,\n        operator: /=>|\\.\\.\\.|[&|?:*]/,\n        punctuation: /[.,;=<>{}()[\\]]/\n      }\n    }],\n    example: {\n      pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        code: {\n          pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n          lookbehind: true,\n          inside: n,\n          alias: \"language-javascript\"\n        }\n      }\n    }\n  }), e.languages.javadoclike.addSupport(\"javascript\", e.languages.jsdoc);\n}(Prism), function (e) {\n  e.languages.flow = e.languages.extend(\"javascript\", {}), e.languages.insertBefore(\"flow\", \"keyword\", {\n    type: [{\n      pattern: /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n      alias: \"class-name\"\n    }]\n  }), e.languages.flow[\"function-variable\"].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i, delete e.languages.flow.parameter, e.languages.insertBefore(\"flow\", \"operator\", {\n    \"flow-punctuation\": {\n      pattern: /\\{\\||\\|\\}/,\n      alias: \"punctuation\"\n    }\n  }), Array.isArray(e.languages.flow.keyword) || (e.languages.flow.keyword = [e.languages.flow.keyword]), e.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n    lookbehind: true\n  });\n}(Prism), Prism.languages.n4js = Prism.languages.extend(\"javascript\", {\n  keyword: /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n}), Prism.languages.insertBefore(\"n4js\", \"constant\", {\n  annotation: {\n    pattern: /@+\\w+/,\n    alias: \"operator\"\n  }\n}), Prism.languages.n4jsd = Prism.languages.n4js, function (e) {\n  function n(e2, n2) {\n    return RegExp(e2.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), n2);\n  }\n  e.languages.insertBefore(\"javascript\", \"function-variable\", {\n    \"method-variable\": {\n      pattern: RegExp(\"(\\\\.\\\\s*)\" + e.languages.javascript[\"function-variable\"].pattern.source),\n      lookbehind: true,\n      alias: [\"function-variable\", \"method\", \"function\", \"property-access\"]\n    }\n  }), e.languages.insertBefore(\"javascript\", \"function\", {\n    method: {\n      pattern: RegExp(\"(\\\\.\\\\s*)\" + e.languages.javascript.function.source),\n      lookbehind: true,\n      alias: [\"function\", \"property-access\"]\n    }\n  }), e.languages.insertBefore(\"javascript\", \"constant\", {\n    \"known-class-name\": [{\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: \"class-name\"\n    }, {\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: \"class-name\"\n    }]\n  }), e.languages.insertBefore(\"javascript\", \"keyword\", {\n    imports: {\n      pattern: n(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: e.languages.javascript\n    },\n    exports: {\n      pattern: n(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: e.languages.javascript\n    }\n  }), e.languages.javascript.keyword.unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: \"module\"\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: \"control-flow\"\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: [\"null\", \"nil\"]\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: \"nil\"\n  }), e.languages.insertBefore(\"javascript\", \"operator\", {\n    spread: {\n      pattern: /\\.{3}/,\n      alias: \"operator\"\n    },\n    arrow: {\n      pattern: /=>/,\n      alias: \"operator\"\n    }\n  }), e.languages.insertBefore(\"javascript\", \"punctuation\", {\n    \"property-access\": {\n      pattern: n(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    \"maybe-class-name\": {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    dom: {\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: \"variable\"\n    },\n    console: {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: \"class-name\"\n    }\n  });\n  for (var t = [\"function\", \"function-variable\", \"method\", \"method-variable\", \"property-access\"], a = 0; a < t.length; a++) {\n    var r = t[a],\n      s = e.languages.javascript[r],\n      r = (s = \"RegExp\" === e.util.type(s) ? e.languages.javascript[r] = {\n        pattern: s\n      } : s).inside || {};\n    (s.inside = r)[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n  }\n}(Prism), function (s) {\n  var e = s.util.clone(s.languages.javascript),\n    t = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source,\n    a = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source,\n    r = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  function n(e2, n2) {\n    return e2 = e2.replace(/<S>/g, function () {\n      return t;\n    }).replace(/<BRACES>/g, function () {\n      return a;\n    }).replace(/<SPREAD>/g, function () {\n      return r;\n    }), RegExp(e2, n2);\n  }\n  r = n(r).source, s.languages.jsx = s.languages.extend(\"markup\", e), s.languages.jsx.tag.pattern = n(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source), s.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/, s.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/, s.languages.jsx.tag.inside.tag.inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/, s.languages.jsx.tag.inside.comment = e.comment, s.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: n(/<SPREAD>/.source),\n      inside: s.languages.jsx\n    }\n  }, s.languages.jsx.tag), s.languages.insertBefore(\"inside\", \"special-attr\", {\n    script: {\n      pattern: n(/=<BRACES>/.source),\n      alias: \"language-javascript\",\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?=\\{)/,\n          alias: \"punctuation\"\n        },\n        rest: s.languages.jsx\n      }\n    }\n  }, s.languages.jsx.tag);\n  function i(e2) {\n    for (var n2 = [], t2 = 0; t2 < e2.length; t2++) {\n      var a2 = e2[t2],\n        r2 = false;\n      \"string\" != typeof a2 && (\"tag\" === a2.type && a2.content[0] && \"tag\" === a2.content[0].type ? \"</\" === a2.content[0].content[0].content ? 0 < n2.length && n2[n2.length - 1].tagName === o(a2.content[0].content[1]) && n2.pop() : \"/>\" !== a2.content[a2.content.length - 1].content && n2.push({\n        tagName: o(a2.content[0].content[1]),\n        openedBraces: 0\n      }) : 0 < n2.length && \"punctuation\" === a2.type && \"{\" === a2.content ? n2[n2.length - 1].openedBraces++ : 0 < n2.length && 0 < n2[n2.length - 1].openedBraces && \"punctuation\" === a2.type && \"}\" === a2.content ? n2[n2.length - 1].openedBraces-- : r2 = true), (r2 || \"string\" == typeof a2) && 0 < n2.length && 0 === n2[n2.length - 1].openedBraces && (r2 = o(a2), t2 < e2.length - 1 && (\"string\" == typeof e2[t2 + 1] || \"plain-text\" === e2[t2 + 1].type) && (r2 += o(e2[t2 + 1]), e2.splice(t2 + 1, 1)), 0 < t2 && (\"string\" == typeof e2[t2 - 1] || \"plain-text\" === e2[t2 - 1].type) && (r2 = o(e2[t2 - 1]) + r2, e2.splice(t2 - 1, 1), t2--), e2[t2] = new s.Token(\"plain-text\", r2, null, r2)), a2.content && \"string\" != typeof a2.content && i(a2.content);\n    }\n  }\n  var o = function (e2) {\n    return e2 ? \"string\" == typeof e2 ? e2 : \"string\" == typeof e2.content ? e2.content : e2.content.map(o).join(\"\") : \"\";\n  };\n  s.hooks.add(\"after-tokenize\", function (e2) {\n    \"jsx\" !== e2.language && \"tsx\" !== e2.language || i(e2.tokens);\n  });\n}(Prism), function (e) {\n  var n = e.util.clone(e.languages.typescript),\n    n = (e.languages.tsx = e.languages.extend(\"jsx\", n), delete e.languages.tsx.parameter, delete e.languages.tsx[\"literal-property\"], e.languages.tsx.tag);\n  n.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + \"(?:\" + n.pattern.source + \")\", n.pattern.flags), n.lookbehind = true;\n}(Prism), Prism.languages.swift = {\n  comment: {\n    pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n    lookbehind: true,\n    greedy: true\n  },\n  \"string-literal\": [{\n    pattern: RegExp(/(^|[^\"#])/.source + \"(?:\" + /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + \"|\" + /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + \")\" + /(?![\"#])/.source),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n        lookbehind: true,\n        inside: null\n      },\n      \"interpolation-punctuation\": {\n        pattern: /^\\)|\\\\\\($/,\n        alias: \"punctuation\"\n      },\n      punctuation: /\\\\(?=[\\r\\n])/,\n      string: /[\\s\\S]+/\n    }\n  }, {\n    pattern: RegExp(/(^|[^\"#])(#+)/.source + \"(?:\" + /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + \"|\" + /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + \")\\\\2\"),\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n        lookbehind: true,\n        inside: null\n      },\n      \"interpolation-punctuation\": {\n        pattern: /^\\)|\\\\#+\\($/,\n        alias: \"punctuation\"\n      },\n      string: /[\\s\\S]+/\n    }\n  }],\n  directive: {\n    pattern: RegExp(/#/.source + \"(?:\" + /(?:elseif|if)\\b/.source + \"(?:[ \t]*\" + /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + \")+|\" + /(?:else|endif)\\b/.source + \")\"),\n    alias: \"property\",\n    inside: {\n      \"directive-name\": /^#\\w+/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      operator: /!|&&|\\|\\||[<>]=?/,\n      punctuation: /[(),]/\n    }\n  },\n  literal: {\n    pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n    alias: \"constant\"\n  },\n  \"other-directive\": {\n    pattern: /#\\w+\\b/,\n    alias: \"property\"\n  },\n  attribute: {\n    pattern: /@\\w+/,\n    alias: \"atrule\"\n  },\n  \"function-definition\": {\n    pattern: /(\\bfunc\\s+)\\w+/,\n    lookbehind: true,\n    alias: \"function\"\n  },\n  label: {\n    pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n    lookbehind: true,\n    alias: \"important\"\n  },\n  keyword: /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n  boolean: /\\b(?:false|true)\\b/,\n  nil: {\n    pattern: /\\bnil\\b/,\n    alias: \"constant\"\n  },\n  \"short-argument\": /\\$\\d+\\b/,\n  omit: {\n    pattern: /\\b_\\b/,\n    alias: \"keyword\"\n  },\n  number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n  \"class-name\": /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n  function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n  operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n  punctuation: /[{}[\\]();,.:\\\\]/\n}, Prism.languages.swift[\"string-literal\"].forEach(function (e) {\n  e.inside.interpolation.inside = Prism.languages.swift;\n}), function (e) {\n  e.languages.kotlin = e.languages.extend(\"clike\", {\n    keyword: {\n      pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n      lookbehind: true\n    },\n    function: [{\n      pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n      greedy: true\n    }, {\n      pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n      lookbehind: true,\n      greedy: true\n    }],\n    number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n    operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n  }), delete e.languages.kotlin[\"class-name\"];\n  var n = {\n    \"interpolation-punctuation\": {\n      pattern: /^\\$\\{?|\\}$/,\n      alias: \"punctuation\"\n    },\n    expression: {\n      pattern: /[\\s\\S]+/,\n      inside: e.languages.kotlin\n    }\n  };\n  e.languages.insertBefore(\"kotlin\", \"string\", {\n    \"string-literal\": [{\n      pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n      alias: \"multiline\",\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n          inside: n\n        },\n        string: /[\\s\\S]+/\n      }\n    }, {\n      pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n      alias: \"singleline\",\n      inside: {\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n          lookbehind: true,\n          inside: n\n        },\n        string: /[\\s\\S]+/\n      }\n    }],\n    char: {\n      pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n      greedy: true\n    }\n  }), delete e.languages.kotlin.string, e.languages.insertBefore(\"kotlin\", \"keyword\", {\n    annotation: {\n      pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n      alias: \"builtin\"\n    }\n  }), e.languages.insertBefore(\"kotlin\", \"function\", {\n    label: {\n      pattern: /\\b\\w+@|@\\w+\\b/,\n      alias: \"symbol\"\n    }\n  }), e.languages.kt = e.languages.kotlin, e.languages.kts = e.languages.kotlin;\n}(Prism), Prism.languages.c = Prism.languages.extend(\"clike\", {\n  comment: {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  \"class-name\": {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n}), Prism.languages.insertBefore(\"c\", \"string\", {\n  char: {\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n}), Prism.languages.insertBefore(\"c\", \"string\", {\n  macro: {\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: \"property\",\n    inside: {\n      string: [{\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c.string],\n      char: Prism.languages.c.char,\n      comment: Prism.languages.c.comment,\n      \"macro-name\": [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: \"function\"\n      }],\n      directive: {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: \"keyword\"\n      },\n      \"directive-hash\": /^#/,\n      punctuation: /##|\\\\(?=[\\r\\n])/,\n      expression: {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  }\n}), Prism.languages.insertBefore(\"c\", \"function\", {\n  constant: /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n}), delete Prism.languages.c.boolean, Prism.languages.objectivec = Prism.languages.extend(\"c\", {\n  string: {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  keyword: /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n}), delete Prism.languages.objectivec[\"class-name\"], Prism.languages.objc = Prism.languages.objectivec, Prism.languages.reason = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  \"class-name\": /\\b[A-Z]\\w*/,\n  keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n}), Prism.languages.insertBefore(\"reason\", \"class-name\", {\n  char: {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  label: {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: \"symbol\"\n  }\n}), delete Prism.languages.reason.function, function (e) {\n  for (var n = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source, t = 0; t < 2; t++) n = n.replace(/<self>/g, function () {\n    return n;\n  });\n  n = n.replace(/<self>/g, function () {\n    return /[^\\s\\S]/.source;\n  }), e.languages.rust = {\n    comment: [{\n      pattern: RegExp(/(^|[^\\\\])/.source + n),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: {\n      pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n      greedy: true\n    },\n    char: {\n      pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n      greedy: true\n    },\n    attribute: {\n      pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n      greedy: true,\n      alias: \"attr-name\",\n      inside: {\n        string: null\n      }\n    },\n    \"closure-params\": {\n      pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        \"closure-punctuation\": {\n          pattern: /^\\||\\|$/,\n          alias: \"punctuation\"\n        },\n        rest: null\n      }\n    },\n    \"lifetime-annotation\": {\n      pattern: /'\\w+/,\n      alias: \"symbol\"\n    },\n    \"fragment-specifier\": {\n      pattern: /(\\$\\w+:)[a-z]+/,\n      lookbehind: true,\n      alias: \"punctuation\"\n    },\n    variable: /\\$\\w+/,\n    \"function-definition\": {\n      pattern: /(\\bfn\\s+)\\w+/,\n      lookbehind: true,\n      alias: \"function\"\n    },\n    \"type-definition\": {\n      pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n      lookbehind: true,\n      alias: \"class-name\"\n    },\n    \"module-declaration\": [{\n      pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n      lookbehind: true,\n      alias: \"namespace\"\n    }, {\n      pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n      lookbehind: true,\n      alias: \"namespace\",\n      inside: {\n        punctuation: /::/\n      }\n    }],\n    keyword: [/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],\n    function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n    macro: {\n      pattern: /\\b\\w+!/,\n      alias: \"property\"\n    },\n    constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n    \"class-name\": /\\b[A-Z]\\w*\\b/,\n    namespace: {\n      pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n      inside: {\n        punctuation: /::/\n      }\n    },\n    number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n    operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n  }, e.languages.rust[\"closure-params\"].inside.rest = e.languages.rust, e.languages.rust.attribute.inside.string = e.languages.rust.string;\n}(Prism), Prism.languages.go = Prism.languages.extend(\"clike\", {\n  string: {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n  number: [/\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  builtin: /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n}), Prism.languages.insertBefore(\"go\", \"string\", {\n  char: {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n}), delete Prism.languages.go[\"class-name\"], function (e) {\n  var n = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n    t = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n      return n.source;\n    });\n  e.languages.cpp = e.languages.extend(\"c\", {\n    \"class-name\": [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return n.source;\n      })),\n      lookbehind: true\n    }, /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    keyword: n,\n    number: {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    operator: />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  }), e.languages.insertBefore(\"cpp\", \"string\", {\n    module: {\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + \"(?:\" + /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + \"|\" + /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return t;\n      }) + \")\"),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        string: /^[<\"][\\s\\S]+/,\n        operator: /:/,\n        punctuation: /\\./\n      }\n    },\n    \"raw-string\": {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: \"string\",\n      greedy: true\n    }\n  }), e.languages.insertBefore(\"cpp\", \"keyword\", {\n    \"generic-function\": {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        function: /^\\w+/,\n        generic: {\n          pattern: /<[\\s\\S]+/,\n          alias: \"class-name\",\n          inside: e.languages.cpp\n        }\n      }\n    }\n  }), e.languages.insertBefore(\"cpp\", \"operator\", {\n    \"double-colon\": {\n      pattern: /::/,\n      alias: \"punctuation\"\n    }\n  }), e.languages.insertBefore(\"cpp\", \"class-name\", {\n    \"base-clause\": {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: e.languages.extend(\"cpp\", {})\n    }\n  }), e.languages.insertBefore(\"inside\", \"double-colon\", {\n    \"class-name\": /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, e.languages.cpp[\"base-clause\"]);\n}(Prism);\n\n// src/themes/index.ts\nvar themes_exports = {};\n__export(themes_exports, {\n  dracula: () => dracula_default,\n  duotoneDark: () => duotoneDark_default,\n  duotoneLight: () => duotoneLight_default,\n  github: () => github_default,\n  jettwaveDark: () => jettwaveDark_default,\n  jettwaveLight: () => jettwaveLight_default,\n  nightOwl: () => nightOwl_default,\n  nightOwlLight: () => nightOwlLight_default,\n  oceanicNext: () => oceanicNext_default,\n  okaidia: () => okaidia_default,\n  palenight: () => palenight_default,\n  shadesOfPurple: () => shadesOfPurple_default,\n  synthwave84: () => synthwave84_default,\n  ultramin: () => ultramin_default,\n  vsDark: () => vsDark_default,\n  vsLight: () => vsLight_default\n});\n\n// src/themes/dracula.ts\nvar theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\"\n  },\n  styles: [{\n    types: [\"prolog\", \"constant\", \"builtin\"],\n    style: {\n      color: \"rgb(189, 147, 249)\"\n    }\n  }, {\n    types: [\"inserted\", \"function\"],\n    style: {\n      color: \"rgb(80, 250, 123)\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgb(255, 85, 85)\"\n    }\n  }, {\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(255, 184, 108)\"\n    }\n  }, {\n    types: [\"punctuation\", \"symbol\"],\n    style: {\n      color: \"rgb(248, 248, 242)\"\n    }\n  }, {\n    types: [\"string\", \"char\", \"tag\", \"selector\"],\n    style: {\n      color: \"rgb(255, 121, 198)\"\n    }\n  }, {\n    types: [\"keyword\", \"variable\"],\n    style: {\n      color: \"rgb(189, 147, 249)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(98, 114, 164)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(241, 250, 140)\"\n    }\n  }]\n};\nvar dracula_default = theme;\n\n// src/themes/duotoneDark.ts\nvar theme2 = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nvar duotoneDark_default = theme2;\n\n// src/themes/duotoneLight.ts\nvar theme3 = {\n  plain: {\n    backgroundColor: \"#faf8f5\",\n    color: \"#728fcb\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#b6ad9a\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#063289\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#b29762\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#2d2006\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#896724\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\"],\n    style: {\n      color: \"#728fcb\"\n    }\n  }, {\n    types: [\"placeholder\", \"variable\"],\n    style: {\n      color: \"#93abdc\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#896724\"\n    }\n  }]\n};\nvar duotoneLight_default = theme3;\n\n// src/themes/github.ts\nvar theme4 = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nvar github_default = theme4;\n\n// src/themes/nightOwl.ts\nvar theme5 = {\n  plain: {\n    color: \"#d6deeb\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [{\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(162, 191, 252)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgba(239, 83, 80, 0.56)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"inserted\", \"attr-name\"],\n    style: {\n      color: \"rgb(173, 219, 103)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(99, 119, 119)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"string\", \"url\"],\n    style: {\n      color: \"rgb(173, 219, 103)\"\n    }\n  }, {\n    types: [\"variable\"],\n    style: {\n      color: \"rgb(214, 222, 235)\"\n    }\n  }, {\n    types: [\"number\"],\n    style: {\n      color: \"rgb(247, 140, 108)\"\n    }\n  }, {\n    types: [\"builtin\", \"char\", \"constant\", \"function\"],\n    style: {\n      color: \"rgb(130, 170, 255)\"\n    }\n  }, {\n    // This was manually added after the auto-generation\n    // so that punctuations are not italicised\n    types: [\"punctuation\"],\n    style: {\n      color: \"rgb(199, 146, 234)\"\n    }\n  }, {\n    types: [\"selector\", \"doctype\"],\n    style: {\n      color: \"rgb(199, 146, 234)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(255, 203, 139)\"\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"keyword\"],\n    style: {\n      color: \"rgb(127, 219, 202)\"\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: \"rgb(255, 88, 116)\"\n    }\n  }, {\n    types: [\"property\"],\n    style: {\n      color: \"rgb(128, 203, 196)\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      color: \"rgb(178, 204, 214)\"\n    }\n  }]\n};\nvar nightOwl_default = theme5;\n\n// src/themes/nightOwlLight.ts\nvar theme6 = {\n  plain: {\n    color: \"#403f53\",\n    backgroundColor: \"#FBFBFB\"\n  },\n  styles: [{\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(162, 191, 252)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgba(239, 83, 80, 0.56)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"inserted\", \"attr-name\"],\n    style: {\n      color: \"rgb(72, 118, 214)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(152, 159, 177)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"string\", \"builtin\", \"char\", \"constant\", \"url\"],\n    style: {\n      color: \"rgb(72, 118, 214)\"\n    }\n  }, {\n    types: [\"variable\"],\n    style: {\n      color: \"rgb(201, 103, 101)\"\n    }\n  }, {\n    types: [\"number\"],\n    style: {\n      color: \"rgb(170, 9, 130)\"\n    }\n  }, {\n    // This was manually added after the auto-generation\n    // so that punctuations are not italicised\n    types: [\"punctuation\"],\n    style: {\n      color: \"rgb(153, 76, 195)\"\n    }\n  }, {\n    types: [\"function\", \"selector\", \"doctype\"],\n    style: {\n      color: \"rgb(153, 76, 195)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(17, 17, 17)\"\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(153, 76, 195)\"\n    }\n  }, {\n    types: [\"operator\", \"property\", \"keyword\", \"namespace\"],\n    style: {\n      color: \"rgb(12, 150, 155)\"\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: \"rgb(188, 84, 84)\"\n    }\n  }]\n};\nvar nightOwlLight_default = theme6;\n\n// src/themes/oceanicNext.ts\nvar colors = {\n  char: \"#D8DEE9\",\n  comment: \"#999999\",\n  keyword: \"#c5a5c5\",\n  primitive: \"#5a9bcf\",\n  string: \"#8dc891\",\n  variable: \"#d7deea\",\n  boolean: \"#ff8b50\",\n  punctuation: \"#5FB3B3\",\n  tag: \"#fc929e\",\n  function: \"#79b6f2\",\n  className: \"#FAC863\",\n  method: \"#6699CC\",\n  operator: \"#fc929e\"\n};\nvar theme7 = {\n  plain: {\n    backgroundColor: \"#282c34\",\n    color: \"#ffffff\"\n  },\n  styles: [{\n    types: [\"attr-name\"],\n    style: {\n      color: colors.keyword\n    }\n  }, {\n    types: [\"attr-value\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\", \"shebang\"],\n    style: {\n      color: colors.comment\n    }\n  }, {\n    types: [\"property\", \"number\", \"function-name\", \"constant\", \"symbol\", \"deleted\"],\n    style: {\n      color: colors.primitive\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: colors.boolean\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: colors.tag\n    }\n  }, {\n    types: [\"string\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"punctuation\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n    style: {\n      color: colors.char\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: colors.function\n    }\n  }, {\n    types: [\"operator\", \"entity\", \"url\", \"variable\"],\n    style: {\n      color: colors.variable\n    }\n  }, {\n    types: [\"keyword\"],\n    style: {\n      color: colors.keyword\n    }\n  }, {\n    types: [\"atrule\", \"class-name\"],\n    style: {\n      color: colors.className\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      fontWeight: \"400\"\n    }\n  }, {\n    types: [\"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }]\n};\nvar oceanicNext_default = theme7;\n\n// src/themes/okaidia.ts\nvar theme8 = {\n  plain: {\n    color: \"#f8f8f2\",\n    backgroundColor: \"#272822\"\n  },\n  styles: [{\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(162, 191, 252)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"#f92672\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      color: \"rgb(173, 219, 103)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"#8292a2\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"string\", \"url\"],\n    style: {\n      color: \"#a6e22e\"\n    }\n  }, {\n    types: [\"variable\"],\n    style: {\n      color: \"#f8f8f2\"\n    }\n  }, {\n    types: [\"number\"],\n    style: {\n      color: \"#ae81ff\"\n    }\n  }, {\n    types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n    style: {\n      color: \"#e6db74\"\n    }\n  }, {\n    types: [\"punctuation\"],\n    style: {\n      color: \"#f8f8f2\"\n    }\n  }, {\n    types: [\"selector\", \"doctype\"],\n    style: {\n      color: \"#a6e22e\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"keyword\"],\n    style: {\n      color: \"#66d9ef\"\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: \"#ae81ff\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      color: \"rgb(178, 204, 214)\",\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"property\"],\n    style: {\n      color: \"#f92672\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#a6e22e !important\"\n    }\n  }, {\n    types: [\"doctype\"],\n    style: {\n      color: \"#8292a2\"\n    }\n  }, {\n    types: [\"rule\"],\n    style: {\n      color: \"#e6db74\"\n    }\n  }]\n};\nvar okaidia_default = theme8;\n\n// src/themes/palenight.ts\nvar theme9 = {\n  plain: {\n    color: \"#bfc7d5\",\n    backgroundColor: \"#292d3e\"\n  },\n  styles: [{\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(105, 112, 152)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"string\", \"inserted\"],\n    style: {\n      color: \"rgb(195, 232, 141)\"\n    }\n  }, {\n    types: [\"number\"],\n    style: {\n      color: \"rgb(247, 140, 108)\"\n    }\n  }, {\n    types: [\"builtin\", \"char\", \"constant\", \"function\"],\n    style: {\n      color: \"rgb(130, 170, 255)\"\n    }\n  }, {\n    types: [\"punctuation\", \"selector\"],\n    style: {\n      color: \"rgb(199, 146, 234)\"\n    }\n  }, {\n    types: [\"variable\"],\n    style: {\n      color: \"rgb(191, 199, 213)\"\n    }\n  }, {\n    types: [\"class-name\", \"attr-name\"],\n    style: {\n      color: \"rgb(255, 203, 107)\"\n    }\n  }, {\n    types: [\"tag\", \"deleted\"],\n    style: {\n      color: \"rgb(255, 85, 114)\"\n    }\n  }, {\n    types: [\"operator\"],\n    style: {\n      color: \"rgb(137, 221, 255)\"\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: \"rgb(255, 88, 116)\"\n    }\n  }, {\n    types: [\"keyword\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"doctype\"],\n    style: {\n      color: \"rgb(199, 146, 234)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      color: \"rgb(178, 204, 214)\"\n    }\n  }, {\n    types: [\"url\"],\n    style: {\n      color: \"rgb(221, 221, 221)\"\n    }\n  }]\n};\nvar palenight_default = theme9;\n\n// src/themes/shadesOfPurple.ts\nvar theme10 = {\n  plain: {\n    color: \"#9EFEFF\",\n    backgroundColor: \"#2D2A55\"\n  },\n  styles: [{\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(255, 238, 128)\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgba(239, 83, 80, 0.56)\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      color: \"rgb(173, 219, 103)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(179, 98, 255)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"punctuation\"],\n    style: {\n      color: \"rgb(255, 255, 255)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(255, 98, 140)\"\n    }\n  }, {\n    types: [\"string\", \"url\"],\n    style: {\n      color: \"rgb(165, 255, 144)\"\n    }\n  }, {\n    types: [\"variable\"],\n    style: {\n      color: \"rgb(255, 238, 128)\"\n    }\n  }, {\n    types: [\"number\", \"boolean\"],\n    style: {\n      color: \"rgb(255, 98, 140)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(255, 180, 84)\"\n    }\n  }, {\n    types: [\"keyword\", \"operator\", \"property\", \"namespace\", \"tag\", \"selector\", \"doctype\"],\n    style: {\n      color: \"rgb(255, 157, 0)\"\n    }\n  }, {\n    types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n    style: {\n      color: \"rgb(250, 208, 0)\"\n    }\n  }]\n};\nvar shadesOfPurple_default = theme10;\n\n// src/themes/synthwave84.ts\nvar theme11 = {\n  plain: {\n    backgroundColor: \"linear-gradient(to bottom, #2a2139 75%, #34294f)\",\n    backgroundImage: \"#34294f\",\n    color: \"#f92aad\",\n    textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\"\n  },\n  styles: [{\n    types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#495495\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"punctuation\"],\n    style: {\n      color: \"#ccc\"\n    }\n  }, {\n    types: [\"tag\", \"attr-name\", \"namespace\", \"number\", \"unit\", \"hexcode\", \"deleted\"],\n    style: {\n      color: \"#e2777a\"\n    }\n  }, {\n    types: [\"property\", \"selector\"],\n    style: {\n      color: \"#72f1b8\",\n      textShadow: \"0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475\"\n    }\n  }, {\n    types: [\"function-name\"],\n    style: {\n      color: \"#6196cc\"\n    }\n  }, {\n    types: [\"boolean\", \"selector-id\", \"function\"],\n    style: {\n      color: \"#fdfdfd\",\n      textShadow: \"0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975\"\n    }\n  }, {\n    types: [\"class-name\", \"maybe-class-name\", \"builtin\"],\n    style: {\n      color: \"#fff5f6\",\n      textShadow: \"0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75\"\n    }\n  }, {\n    types: [\"constant\", \"symbol\"],\n    style: {\n      color: \"#f92aad\",\n      textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\"\n    }\n  }, {\n    types: [\"important\", \"atrule\", \"keyword\", \"selector-class\"],\n    style: {\n      color: \"#f4eee4\",\n      textShadow: \"0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575\"\n    }\n  }, {\n    types: [\"string\", \"char\", \"attr-value\", \"regex\", \"variable\"],\n    style: {\n      color: \"#f87c32\"\n    }\n  }, {\n    types: [\"parameter\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"entity\", \"url\"],\n    style: {\n      color: \"#67cdcc\"\n    }\n  }, {\n    types: [\"operator\"],\n    style: {\n      color: \"ffffffee\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"entity\"],\n    style: {\n      cursor: \"help\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      color: \"green\"\n    }\n  }]\n};\nvar synthwave84_default = theme11;\n\n// src/themes/ultramin.ts\nvar theme12 = {\n  plain: {\n    color: \"#282a2e\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [{\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(197, 200, 198)\"\n    }\n  }, {\n    types: [\"string\", \"number\", \"builtin\", \"variable\"],\n    style: {\n      color: \"rgb(150, 152, 150)\"\n    }\n  }, {\n    types: [\"class-name\", \"function\", \"tag\", \"attr-name\"],\n    style: {\n      color: \"rgb(40, 42, 46)\"\n    }\n  }]\n};\nvar ultramin_default = theme12;\n\n// src/themes/vsDark.ts\nvar theme13 = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"rgb(0, 0, 128)\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(106, 153, 85)\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"rgb(181, 206, 168)\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"rgb(100, 102, 149)\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"rgb(156, 220, 254)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"rgb(206, 145, 120)\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"rgb(215, 186, 125)\"\n    }\n  }, {\n    // Fix tag color\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    // Fix tag color for HTML\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"rgb(86, 156, 214)\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"rgb(212, 212, 212)\"\n    }\n  }, {\n    // Fix punctuation color for HTML\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"rgb(220, 220, 170)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(78, 201, 176)\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"rgb(209, 105, 105)\"\n    }\n  }]\n};\nvar vsDark_default = theme13;\n\n// src/themes/vsLight.ts\nvar theme14 = {\n  plain: {\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\"\n  },\n  styles: [{\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(0, 128, 0)\"\n    }\n  }, {\n    types: [\"builtin\"],\n    style: {\n      color: \"rgb(0, 112, 193)\"\n    }\n  }, {\n    types: [\"number\", \"variable\", \"inserted\"],\n    style: {\n      color: \"rgb(9, 134, 88)\"\n    }\n  }, {\n    types: [\"operator\"],\n    style: {\n      color: \"rgb(0, 0, 0)\"\n    }\n  }, {\n    types: [\"constant\", \"char\"],\n    style: {\n      color: \"rgb(129, 31, 63)\"\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: \"rgb(128, 0, 0)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(255, 0, 0)\"\n    }\n  }, {\n    types: [\"deleted\", \"string\"],\n    style: {\n      color: \"rgb(163, 21, 21)\"\n    }\n  }, {\n    types: [\"changed\", \"punctuation\"],\n    style: {\n      color: \"rgb(4, 81, 165)\"\n    }\n  }, {\n    types: [\"function\", \"keyword\"],\n    style: {\n      color: \"rgb(0, 0, 255)\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"rgb(38, 127, 153)\"\n    }\n  }]\n};\nvar vsLight_default = theme14;\n\n// src/themes/jettwaveDark.ts\nvar theme15 = {\n  plain: {\n    color: \"#f8fafc\",\n    backgroundColor: \"#011627\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"#000080\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"#6A9955\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"#569CD6\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"#B5CEA8\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"#f8fafc\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"#9CDCFE\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"#cbd5e1\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"#D7BA7D\"\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: \"#0ea5e9\"\n    }\n  }, {\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#0ea5e9\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#D4D4D4\"\n    }\n  }, {\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"#7dd3fc\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"#0ea5e9\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"#D16969\"\n    }\n  }]\n};\nvar jettwaveDark_default = theme15;\n\n// src/themes/jettwaveLight.ts\nvar theme16 = {\n  plain: {\n    color: \"#0f172a\",\n    backgroundColor: \"#f1f5f9\"\n  },\n  styles: [{\n    types: [\"prolog\"],\n    style: {\n      color: \"#000080\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"#6A9955\"\n    }\n  }, {\n    types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n    style: {\n      color: \"#0c4a6e\"\n    }\n  }, {\n    types: [\"number\", \"inserted\"],\n    style: {\n      color: \"#B5CEA8\"\n    }\n  }, {\n    types: [\"constant\"],\n    style: {\n      color: \"#0f172a\"\n    }\n  }, {\n    types: [\"attr-name\", \"variable\"],\n    style: {\n      color: \"#0c4a6e\"\n    }\n  }, {\n    types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n    style: {\n      color: \"#64748b\"\n    }\n  }, {\n    types: [\"selector\"],\n    style: {\n      color: \"#D7BA7D\"\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: \"#0ea5e9\"\n    }\n  }, {\n    types: [\"tag\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#0ea5e9\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#475569\"\n    }\n  }, {\n    types: [\"punctuation\"],\n    languages: [\"markup\"],\n    style: {\n      color: \"#808080\"\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: \"#0e7490\"\n    }\n  }, {\n    types: [\"class-name\"],\n    style: {\n      color: \"#0ea5e9\"\n    }\n  }, {\n    types: [\"char\"],\n    style: {\n      color: \"#D16969\"\n    }\n  }]\n};\nvar jettwaveLight_default = theme16;\n\n// src/index.ts\nimport { createElement } from \"react\";\n\n// src/components/useThemeDictionary.ts\nimport { useEffect, useRef, useState } from \"react\";\n\n// src/utils/themeToDict.ts\nvar themeToDict = (theme17, language) => {\n  const {\n    plain\n  } = theme17;\n  const themeDict = theme17.styles.reduce((acc, themeEntry) => {\n    const {\n      languages: languages2,\n      style\n    } = themeEntry;\n    if (languages2 && !languages2.includes(language)) {\n      return acc;\n    }\n    themeEntry.types.forEach(type => {\n      const accStyle = __spreadValues(__spreadValues({}, acc[type]), style);\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, {});\n  themeDict.root = plain;\n  themeDict.plain = __spreadProps(__spreadValues({}, plain), {\n    backgroundColor: void 0\n  });\n  return themeDict;\n};\nvar themeToDict_default = themeToDict;\n\n// src/components/useThemeDictionary.ts\nvar useThemeDictionary = (language, theme17) => {\n  const [themeDictionary, setThemeDictionary] = useState(themeToDict_default(theme17, language));\n  const previousTheme = useRef();\n  const previousLanguage = useRef();\n  useEffect(() => {\n    if (theme17 !== previousTheme.current || language !== previousLanguage.current) {\n      previousTheme.current = theme17;\n      previousLanguage.current = language;\n      setThemeDictionary(themeToDict_default(theme17, language));\n    }\n  }, [language, theme17]);\n  return themeDictionary;\n};\n\n// src/components/useGetLineProps.ts\nimport { useCallback } from \"react\";\nimport clsx from \"clsx\";\nvar useGetLineProps = themeDictionary => useCallback(_a => {\n  var _b = _a,\n    {\n      className,\n      style,\n      line\n    } = _b,\n    rest = __objRest(_b, [\"className\", \"style\", \"line\"]);\n  const output = __spreadProps(__spreadValues({}, rest), {\n    className: clsx(\"token-line\", className)\n  });\n  if (typeof themeDictionary === \"object\" && \"plain\" in themeDictionary) output.style = themeDictionary.plain;\n  if (typeof style === \"object\") output.style = __spreadValues(__spreadValues({}, output.style || {}), style);\n  return output;\n}, [themeDictionary]);\n\n// src/components/useGetTokenProps.ts\nimport { useCallback as useCallback2 } from \"react\";\nimport clsx2 from \"clsx\";\nvar useGetTokenProps = themeDictionary => {\n  const styleForToken = useCallback2(_ref => {\n    let {\n      types,\n      empty\n    } = _ref;\n    if (themeDictionary == null) return void 0;else if (types.length === 1 && types[0] === \"plain\") {\n      return empty != null ? {\n        display: \"inline-block\"\n      } : void 0;\n    } else if (types.length === 1 && empty != null) {\n      return themeDictionary[types[0]];\n    }\n    return Object.assign(empty != null ? {\n      display: \"inline-block\"\n    } : {}, ...types.map(type => themeDictionary[type]));\n  }, [themeDictionary]);\n  return useCallback2(_a => {\n    var _b = _a,\n      {\n        token,\n        className,\n        style\n      } = _b,\n      rest = __objRest(_b, [\"token\", \"className\", \"style\"]);\n    const output = __spreadProps(__spreadValues({}, rest), {\n      className: clsx2(\"token\", ...token.types, className),\n      children: token.content,\n      style: styleForToken(token)\n    });\n    if (style != null) {\n      output.style = __spreadValues(__spreadValues({}, output.style || {}), style);\n    }\n    return output;\n  }, [styleForToken]);\n};\n\n// src/utils/normalizeTokens.ts\nvar newlineRe = /\\r\\n|\\r|\\n/;\nvar normalizeEmptyLines = line => {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\nvar appendTypes = (types, add) => {\n  const typesSize = types.length;\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n  return types.concat(add);\n};\nvar normalizeTokens = tokens => {\n  const typeArrStack = [[]];\n  const tokenArrStack = [tokens];\n  const tokenArrIndexStack = [0];\n  const tokenArrSizeStack = [tokens.length];\n  let i = 0;\n  let stackIndex = 0;\n  let currentLine = [];\n  const acc = [currentLine];\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      let content;\n      let types = typeArrStack[stackIndex];\n      const tokenArr = tokenArrStack[stackIndex];\n      const token = tokenArr[i];\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n        content = token.content;\n      }\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      }\n      const splitByNewlines = content.split(newlineRe);\n      const newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types,\n        content: splitByNewlines[0]\n      });\n      for (let i2 = 1; i2 < newlineCount; i2++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types,\n          content: splitByNewlines[i2]\n        });\n      }\n    }\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\nvar normalizeTokens_default = normalizeTokens;\n\n// src/components/useTokenize.ts\nimport { useMemo, useRef as useRef2 } from \"react\";\nvar useTokenize = _ref2 => {\n  let {\n    prism,\n    code,\n    grammar,\n    language\n  } = _ref2;\n  const prismRef = useRef2(prism);\n  return useMemo(() => {\n    if (grammar == null) return normalizeTokens_default([code]);\n    const prismConfig = {\n      code,\n      grammar,\n      language,\n      tokens: []\n    };\n    prismRef.current.hooks.run(\"before-tokenize\", prismConfig);\n    prismConfig.tokens = prismRef.current.tokenize(code, grammar);\n    prismRef.current.hooks.run(\"after-tokenize\", prismConfig);\n    return normalizeTokens_default(prismConfig.tokens);\n  }, [code, grammar, language]);\n};\n\n// src/components/highlight.ts\nvar Highlight = _ref3 => {\n  let {\n    children,\n    language: _language,\n    code,\n    theme: theme17,\n    prism\n  } = _ref3;\n  const language = _language.toLowerCase();\n  const themeDictionary = useThemeDictionary(language, theme17);\n  const getLineProps = useGetLineProps(themeDictionary);\n  const getTokenProps = useGetTokenProps(themeDictionary);\n  const grammar = prism.languages[language];\n  const tokens = useTokenize({\n    prism,\n    language,\n    code,\n    grammar\n  });\n  return children({\n    tokens,\n    className: `prism-code language-${language}`,\n    style: themeDictionary != null ? themeDictionary.root : {},\n    getLineProps,\n    getTokenProps\n  });\n};\n\n// src/index.ts\nvar Highlight2 = props => createElement(Highlight, __spreadProps(__spreadValues({}, props), {\n  prism: props.prism || Prism,\n  theme: props.theme || vsDark_default,\n  code: props.code,\n  language: props.language\n}));\nexport { Highlight2 as Highlight, Prism, themes_exports as themes };\n/*! Bundled license information:\n\nprismjs/prism.js:\n  (**\n   * Prism: Lightweight, robust, elegant syntax highlighting\n   *\n   * @license MIT <https://opensource.org/licenses/MIT>\n   * @author Lea Verou <https://lea.verou.me>\n   * @namespace\n   * @public\n   *)\n*/","map":{"version":3,"names":["require_prism","__commonJS","../../node_modules/.pnpm/prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu/node_modules/prismjs/prism.js","exports","module","Prism2","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","lang2","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlight","env","code","hooks","run","Error","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","name","hooks2","push","callbacks","length","matchedStr","s","e","tag","classes","attributes","aliases","apply","join","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","next","tail","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","node","newNode","count","array","default","Prism","__toESM","n","t","a","r","regex","range","escape","backreference","anchor","group","quantifier","alternation","clike","comment","string","punctuation","keyword","boolean","function","number","operator","javascript","parameter","constant","hashbang","interpolation","markup","addInlined","addAttribute","js","actionscript","xml","coffeescript","delimiter","script","coffee","l","javadoclike","e2","e3","e4","addSupport","css","atrule","rule","url","selector","important","class","attribute","namespace","combinator","variable","hexcode","color","unit","entity","n2","t2","yaml","scalar","directive","datetime","null","yml","prolog","doctype","cdata","title","html","mathml","svg","ssml","atom","rss","markdown","blockquote","table","hr","bold","italic","strike","a2","r2","n3","t3","parseInt","Number","c","u","autoloader","Date","valueOf","Math","floor","random","loadLanguages","document","getElementById","innerHTML","textContent","amp","lt","gt","quot","String","fromCodePoint","fromCharCode","md","graphql","description","fragment","object","filter","d","g","indexOf","s2","test","sql","identifier","b","f","h","toUpperCase","keys","a3","l2","u2","substring","splice","concat","Boolean","typescript","ts","jsx","tsx","builtin","decorator","at","generic","jsdoc","example","flow","unshift","n4js","annotation","n4jsd","method","imports","spread","arrow","dom","console","tagName","pop","openedBraces","swift","literal","label","nil","omit","kotlin","expression","char","kt","kts","macro","objectivec","objc","reason","constructor","rust","go","cpp","themes_exports","__export","dracula","dracula_default","duotoneDark","duotoneDark_default","duotoneLight","duotoneLight_default","github","github_default","jettwaveDark","jettwaveDark_default","jettwaveLight","jettwaveLight_default","nightOwl","nightOwl_default","nightOwlLight","nightOwlLight_default","oceanicNext","oceanicNext_default","okaidia","okaidia_default","palenight","palenight_default","shadesOfPurple","shadesOfPurple_default","synthwave84","synthwave84_default","ultramin","ultramin_default","vsDark","vsDark_default","vsLight","vsLight_default","theme","backgroundColor","styles","types","style","fontStyle","theme2","opacity","textDecorationLine","fontWeight","theme3","theme4","theme5","theme6","colors","primitive","theme7","theme8","theme9","theme10","theme11","backgroundImage","textShadow","cursor","theme12","theme13","theme14","theme15","theme16","createElement","useEffect","useRef","useState","themeToDict","theme17","themeDict","reduce","acc","themeEntry","languages2","includes","accStyle","__spreadValues","__spreadProps","themeToDict_default","useThemeDictionary","themeDictionary","setThemeDictionary","previousTheme","previousLanguage","current","useCallback","clsx","useGetLineProps","_a","_b","line","__objRest","output","useCallback2","clsx2","useGetTokenProps","styleForToken","_ref","empty","display","assign","children","newlineRe","normalizeEmptyLines","appendTypes","typesSize","normalizeTokens","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","tokenArr","splitByNewlines","split","newlineCount","i2","normalizeTokens_default","useMemo","useRef2","useTokenize","_ref2","prism","prismRef","prismConfig","Highlight","_ref3","_language","getLineProps","getTokenProps","Highlight2","props"],"sources":["E:\\GENText\\node_modules\\.pnpm\\prismjs@1.29.0_patch_hash=vrxx3pzkik6jpmgpayxfjunetu\\node_modules\\prismjs\\prism.js","E:\\GENText\\node_modules\\prism-react-renderer\\src\\prism-langs.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\index.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\dracula.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\duotoneDark.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\duotoneLight.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\github.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\nightOwl.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\nightOwlLight.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\oceanicNext.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\okaidia.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\palenight.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\shadesOfPurple.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\synthwave84.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\ultramin.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\vsDark.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\vsLight.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\jettwaveDark.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\themes\\jettwaveLight.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\index.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\components\\useThemeDictionary.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\utils\\themeToDict.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\components\\useGetLineProps.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\components\\useGetTokenProps.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\utils\\normalizeTokens.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\components\\useTokenize.ts","E:\\GENText\\node_modules\\prism-react-renderer\\src\\components\\highlight.ts"],"sourcesContent":["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function () {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\treturn _;\n}());\n\nmodule.exports = Prism;\nPrism.default = Prism;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport * as Prism from \"prismjs\";\nexport { Prism };!function(e){var n={pattern:/\\\\[\\\\(){}[\\]^$+*?|.]/,alias:\"escape\"},t=/\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/,a=\"(?:[^\\\\\\\\-]|\"+t.source+\")\",a=RegExp(a+\"-\"+a),r={pattern:/(<|')[^<>']+(?=[>']$)/,lookbehind:!0,alias:\"variable\"};e.languages.regex={\"char-class\":{pattern:/((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,lookbehind:!0,inside:{\"char-class-negation\":{pattern:/(^\\[)\\^/,lookbehind:!0,alias:\"operator\"},\"char-class-punctuation\":{pattern:/^\\[|\\]$/,alias:\"punctuation\"},range:{pattern:a,inside:{escape:t,\"range-punctuation\":{pattern:/-/,alias:\"operator\"}}},\"special-escape\":n,\"char-set\":{pattern:/\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,alias:\"class-name\"},escape:t}},\"special-escape\":n,\"char-set\":{pattern:/\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,alias:\"class-name\"},backreference:[{pattern:/\\\\(?![123][0-7]{2})[1-9]/,alias:\"keyword\"},{pattern:/\\\\k<[^<>']+>/,alias:\"keyword\",inside:{\"group-name\":r}}],anchor:{pattern:/[$^]|\\\\[ABbGZz]/,alias:\"function\"},escape:t,group:[{pattern:/\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,alias:\"punctuation\",inside:{\"group-name\":r}},{pattern:/\\)/,alias:\"punctuation\"}],quantifier:{pattern:/(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,alias:\"number\"},alternation:{pattern:/\\|/,alias:\"keyword\"}}}(Prism),Prism.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,boolean:/\\b(?:false|true)\\b/,function:/\\b\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/},Prism.languages.javascript=Prism.languages.extend(\"clike\",{\"class-name\":[Prism.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:{pattern:RegExp(/(^|[^\\w$])/.source+\"(?:\"+/NaN|Infinity/.source+\"|\"+/0[bB][01]+(?:_[01]+)*n?/.source+\"|\"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+\"|\"+/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source+\"|\"+/\\d+(?:_\\d+)*n/.source+\"|\"+/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source+\")\"+/(?![\\w$])/.source),lookbehind:!0},operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),Prism.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,Prism.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:RegExp(/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source+/\\//.source+\"(?:\"+/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source+\"|\"+/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+\")\"+/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:Prism.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),Prism.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:Prism.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),Prism.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined(\"script\",\"javascript\"),Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\"javascript\")),Prism.languages.js=Prism.languages.javascript,Prism.languages.actionscript=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,operator:/\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/}),Prism.languages.actionscript[\"class-name\"].alias=\"function\",delete Prism.languages.actionscript.parameter,delete Prism.languages.actionscript[\"literal-property\"],Prism.languages.markup&&Prism.languages.insertBefore(\"actionscript\",\"string\",{xml:{pattern:/(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,lookbehind:!0,inside:Prism.languages.markup}}),function(e){var n=/#(?!\\{).+/,t={pattern:/#\\{[^}]+\\}/,alias:\"variable\"};e.languages.coffeescript=e.languages.extend(\"javascript\",{comment:n,string:[{pattern:/'(?:\\\\[\\s\\S]|[^\\\\'])*'/,greedy:!0},{pattern:/\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,greedy:!0,inside:{interpolation:t}}],keyword:/\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\"class-member\":{pattern:/@(?!\\d)\\w+/,alias:\"variable\"}}),e.languages.insertBefore(\"coffeescript\",\"comment\",{\"multiline-comment\":{pattern:/###[\\s\\S]+?###/,alias:\"comment\"},\"block-regex\":{pattern:/\\/{3}[\\s\\S]*?\\/{3}/,alias:\"regex\",inside:{comment:n,interpolation:t}}}),e.languages.insertBefore(\"coffeescript\",\"string\",{\"inline-javascript\":{pattern:/`(?:\\\\[\\s\\S]|[^\\\\`])*`/,inside:{delimiter:{pattern:/^`|`$/,alias:\"punctuation\"},script:{pattern:/[\\s\\S]+/,alias:\"language-javascript\",inside:e.languages.javascript}}},\"multiline-string\":[{pattern:/'''[\\s\\S]*?'''/,greedy:!0,alias:\"string\"},{pattern:/\"\"\"[\\s\\S]*?\"\"\"/,greedy:!0,alias:\"string\",inside:{interpolation:t}}]}),e.languages.insertBefore(\"coffeescript\",\"keyword\",{property:/(?!\\d)\\w+(?=\\s*:(?!:))/}),delete e.languages.coffeescript[\"template-string\"],e.languages.coffee=e.languages.coffeescript}(Prism),function(l){var e=l.languages.javadoclike={parameter:{pattern:/(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,lookbehind:!0},keyword:{pattern:/(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,lookbehind:!0},punctuation:/[{}]/};Object.defineProperty(e,\"addSupport\",{value:function(e,o){(e=\"string\"==typeof e?[e]:e).forEach(function(e){var n=function(e){e.inside||(e.inside={}),e.inside.rest=o},t=\"doc-comment\";if(a=l.languages[e]){var a,r=a[t];if((r=r?r:(a=l.languages.insertBefore(e,\"comment\",{\"doc-comment\":{pattern:/(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,alias:\"comment\"}}))[t])instanceof RegExp&&(r=a[t]={pattern:r}),Array.isArray(r))for(var s=0,i=r.length;s<i;s++)r[s]instanceof RegExp&&(r[s]={pattern:r[s]}),n(r[s]);else n(r)}})}}),e.addSupport([\"java\",\"javascript\",\"php\"],e)}(Prism),function(e){var n=/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,n=(e.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:RegExp(\"@[\\\\w-](?:\"+/[^;{\\s\"']|\\s+(?!\\s)/.source+\"|\"+n.source+\")*?\"+/(?:;|(?=\\s*\\{))/.source),inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"},keyword:{pattern:/(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,lookbehind:!0}}},url:{pattern:RegExp(\"\\\\burl\\\\((?:\"+n.source+\"|\"+/(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source+\")\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/,string:{pattern:RegExp(\"^\"+n.source+\"$\"),alias:\"url\"}}},selector:{pattern:RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\"+n.source+\")*(?=\\\\s*\\\\{)\"),lookbehind:!0},string:{pattern:n,greedy:!0},property:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,lookbehind:!0},important:/!important\\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css,e.languages.markup);n&&(n.tag.addInlined(\"style\",\"css\"),n.tag.addAttribute(\"style\",\"css\"))}(Prism),function(e){var n=/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,n=(e.languages.css.selector={pattern:e.languages.css.selector.pattern,lookbehind:!0,inside:n={\"pseudo-element\":/:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\"pseudo-class\":/:[-\\w]+/,class:/\\.[-\\w]+/,id:/#[-\\w]+/,attribute:{pattern:RegExp(\"\\\\[(?:[^[\\\\]\\\"']|\"+n.source+\")*\\\\]\"),greedy:!0,inside:{punctuation:/^\\[|\\]$/,\"case-sensitivity\":{pattern:/(\\s)[si]$/i,lookbehind:!0,alias:\"keyword\"},namespace:{pattern:/^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,lookbehind:!0,inside:{punctuation:/\\|$/}},\"attr-name\":{pattern:/^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,lookbehind:!0},\"attr-value\":[n,{pattern:/(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,lookbehind:!0}],operator:/[|~*^$]?=/}},\"n-th\":[{pattern:/(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,lookbehind:!0,inside:{number:/[\\dn]+/,operator:/[+-]/}},{pattern:/(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,lookbehind:!0}],combinator:/>|\\+|~|\\|\\|/,punctuation:/[(),]/}},e.languages.css.atrule.inside[\"selector-function-argument\"].inside=n,e.languages.insertBefore(\"css\",\"property\",{variable:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,lookbehind:!0}}),{pattern:/(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,lookbehind:!0}),t={pattern:/(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,lookbehind:!0};e.languages.insertBefore(\"css\",\"function\",{operator:{pattern:/(\\s)[+\\-*\\/](?=\\s)/,lookbehind:!0},hexcode:{pattern:/\\B#[\\da-f]{3,8}\\b/i,alias:\"color\"},color:[{pattern:/(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,lookbehind:!0},{pattern:/\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,inside:{unit:n,number:t,function:/[\\w-]+(?=\\()/,punctuation:/[(),]/}}],entity:/\\\\[\\da-f]{1,8}/i,unit:n,number:t})}(Prism),function(e){var n=/[*&][^\\s[\\]{},]+/,t=/!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/,a=\"(?:\"+t.source+\"(?:[ \\t]+\"+n.source+\")?|\"+n.source+\"(?:[ \\t]+\"+t.source+\")?)\",r=/(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g,function(){return/[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source}),s=/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;function i(e,n){n=(n||\"\").replace(/m/g,\"\")+\"m\";var t=/([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g,function(){return a}).replace(/<<value>>/g,function(){return e});return RegExp(t,n)}e.languages.yaml={scalar:{pattern:RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g,function(){return a})),lookbehind:!0,alias:\"string\"},comment:/#.*/,key:{pattern:RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g,function(){return a}).replace(/<<key>>/g,function(){return\"(?:\"+r+\"|\"+s+\")\"})),lookbehind:!0,greedy:!0,alias:\"atrule\"},directive:{pattern:/(^[ \\t]*)%.+/m,lookbehind:!0,alias:\"important\"},datetime:{pattern:i(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),lookbehind:!0,alias:\"number\"},boolean:{pattern:i(/false|true/.source,\"i\"),lookbehind:!0,alias:\"important\"},null:{pattern:i(/null|~/.source,\"i\"),lookbehind:!0,alias:\"important\"},string:{pattern:i(s),lookbehind:!0,greedy:!0},number:{pattern:i(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source,\"i\"),lookbehind:!0},tag:t,important:n,punctuation:/---|[:[\\]{}\\-,|>?]|\\.\\.\\./},e.languages.yml=e.languages.yaml}(Prism),Prism.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\\s\\S])*?-->/,greedy:!0},prolog:{pattern:/<\\?[\\s\\S]+?\\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/i,name:/[^\\s<>'\"]+/}},cdata:{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,greedy:!0},tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:!0}]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},Prism.languages.markup.tag.inside[\"attr-value\"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside[\"internal-subset\"].inside=Prism.languages.markup,Prism.hooks.add(\"wrap\",function(e){\"entity\"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,\"&\"))}),Object.defineProperty(Prism.languages.markup.tag,\"addInlined\",{value:function(e,n){var t={},t=(t[\"language-\"+n]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:Prism.languages[n]},t.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i,{\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:t}}),n=(t[\"language-\"+n]={pattern:/[\\s\\S]+/,inside:Prism.languages[n]},{});n[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g,function(){return e}),\"i\"),lookbehind:!0,greedy:!0,inside:t},Prism.languages.insertBefore(\"markup\",\"cdata\",n)}}),Object.defineProperty(Prism.languages.markup.tag,\"addAttribute\",{value:function(e,n){Prism.languages.markup.tag.inside[\"special-attr\"].push({pattern:RegExp(/(^|[\"'\\s])/.source+\"(?:\"+e+\")\"+/\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\"i\"),lookbehind:!0,inside:{\"attr-name\":/^[^\\s=]+/,\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{value:{pattern:/(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,lookbehind:!0,alias:[n,\"language-\"+n],inside:Prism.languages[n]},punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend(\"markup\",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml,function(o){var n=/(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;function e(e){return e=e.replace(/<inner>/g,function(){return n}),RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source+\"(?:\"+e+\")\")}var t=/(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source,a=/\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g,function(){return t}),r=/\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source,l=(o.languages.markdown=o.languages.extend(\"markup\",{}),o.languages.insertBefore(\"markdown\",\"prolog\",{\"front-matter-block\":{pattern:/(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,\"front-matter\":{pattern:/\\S+(?:\\s+\\S+)*/,alias:[\"yaml\",\"language-yaml\"],inside:o.languages.yaml}}},blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},table:{pattern:RegExp(\"^\"+a+r+\"(?:\"+a+\")*\",\"m\"),inside:{\"table-data-rows\":{pattern:RegExp(\"^(\"+a+r+\")(?:\"+a+\")*$\"),lookbehind:!0,inside:{\"table-data\":{pattern:RegExp(t),inside:o.languages.markdown},punctuation:/\\|/}},\"table-line\":{pattern:RegExp(\"^(\"+a+\")\"+r+\"$\"),lookbehind:!0,inside:{punctuation:/\\||:?-{3,}:?/}},\"table-header-row\":{pattern:RegExp(\"^\"+a+\"$\"),inside:{\"table-header\":{pattern:RegExp(t),alias:\"important\",inside:o.languages.markdown},punctuation:/\\|/}}}},code:[{pattern:/((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,lookbehind:!0,alias:\"keyword\"},{pattern:/^```[\\s\\S]*?^```$/m,greedy:!0,inside:{\"code-block\":{pattern:/^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,lookbehind:!0},\"code-language\":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:e(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\\s\\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\\*\\*|__/}},italic:{pattern:e(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\\s\\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:e(/(~~?)(?:(?!~)<inner>)+\\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\\s\\S]+(?=\\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},\"code-snippet\":{pattern:/(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:[\"code\",\"keyword\"]},url:{pattern:e(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\\[)[^\\]]+(?=\\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},url:{pattern:/(^\\]\\()[^\\s)]+/,lookbehind:!0},string:{pattern:/(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,lookbehind:!0}}}}),[\"url\",\"bold\",\"italic\",\"strike\"].forEach(function(n){[\"url\",\"bold\",\"italic\",\"strike\",\"code-snippet\"].forEach(function(e){n!==e&&(o.languages.markdown[n].inside.content.inside[e]=o.languages.markdown[e])})}),o.hooks.add(\"after-tokenize\",function(e){\"markdown\"!==e.language&&\"md\"!==e.language||!function e(n){if(n&&\"string\"!=typeof n)for(var t=0,a=n.length;t<a;t++){var r,s=n[t];\"code\"!==s.type?e(s.content):(r=s.content[1],s=s.content[3],r&&s&&\"code-language\"===r.type&&\"code-block\"===s.type&&\"string\"==typeof r.content&&(r=r.content.replace(/\\b#/g,\"sharp\").replace(/\\b\\+\\+/g,\"pp\"),r=\"language-\"+(r=(/[a-z][\\w-]*/i.exec(r)||[\"\"])[0].toLowerCase()),s.alias?\"string\"==typeof s.alias?s.alias=[s.alias,r]:s.alias.push(r):s.alias=[r]))}}(e.tokens)}),o.hooks.add(\"wrap\",function(e){if(\"code-block\"===e.type){for(var n=\"\",t=0,a=e.classes.length;t<a;t++){var r=e.classes[t],r=/language-(.+)/.exec(r);if(r){n=r[1];break}}var s,i=o.languages[n];i?e.content=o.highlight(function(e){e=e.replace(l,\"\");return e=e.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi,function(e,n){var t;return\"#\"===(n=n.toLowerCase())[0]?(t=\"x\"===n[1]?parseInt(n.slice(2),16):Number(n.slice(1)),c(t)):u[n]||e})}(e.content),i,n):n&&\"none\"!==n&&o.plugins.autoloader&&(s=\"md-\"+(new Date).valueOf()+\"-\"+Math.floor(1e16*Math.random()),e.attributes.id=s,o.plugins.autoloader.loadLanguages(n,function(){var e=document.getElementById(s);e&&(e.innerHTML=o.highlight(e.textContent,o.languages[n],n))}))}}),RegExp(o.languages.markup.tag.pattern.source,\"gi\")),u={amp:\"&\",lt:\"<\",gt:\">\",quot:'\"'},c=String.fromCodePoint||String.fromCharCode;o.languages.md=o.languages.markdown}(Prism),Prism.languages.graphql={comment:/#.*/,description:{pattern:/(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,greedy:!0,alias:\"string\",inside:{\"language-markdown\":{pattern:/(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,lookbehind:!0,inside:Prism.languages.markdown}}},string:{pattern:/\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},number:/(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,boolean:/\\b(?:false|true)\\b/,variable:/\\$[a-z_]\\w*/i,directive:{pattern:/@[a-z_]\\w*/i,alias:\"function\"},\"attr-name\":{pattern:/\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,greedy:!0},\"atom-input\":{pattern:/\\b[A-Z]\\w*Input\\b/,alias:\"class-name\"},scalar:/\\b(?:Boolean|Float|ID|Int|String)\\b/,constant:/\\b[A-Z][A-Z_\\d]*\\b/,\"class-name\":{pattern:/(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,lookbehind:!0},fragment:{pattern:/(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},\"definition-mutation\":{pattern:/(\\bmutation\\s+)[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},\"definition-query\":{pattern:/(\\bquery\\s+)[a-zA-Z_]\\w*/,lookbehind:!0,alias:\"function\"},keyword:/\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,operator:/[!=|&]|\\.{3}/,\"property-query\":/\\w+(?=\\s*\\()/,object:/\\w+(?=\\s*\\{)/,punctuation:/[!(){}\\[\\]:=,]/,property:/\\w+/},Prism.hooks.add(\"after-tokenize\",function(e){if(\"graphql\"===e.language)for(var i=e.tokens.filter(function(e){return\"string\"!=typeof e&&\"comment\"!==e.type&&\"scalar\"!==e.type}),o=0;o<i.length;){var n=i[o++];if(\"keyword\"===n.type&&\"mutation\"===n.content){var t=[];if(p([\"definition-mutation\",\"punctuation\"])&&\"(\"===c(1).content){o+=2;var a=d(/^\\($/,/^\\)$/);if(-1===a)continue;for(;o<a;o++){var r=c(0);\"variable\"===r.type&&(g(r,\"variable-input\"),t.push(r.content))}o=a+1}if(p([\"punctuation\",\"property-query\"])&&\"{\"===c(0).content&&(o++,g(c(0),\"property-mutation\"),0<t.length)){var s=d(/^\\{$/,/^\\}$/);if(-1!==s)for(var l=o;l<s;l++){var u=i[l];\"variable\"===u.type&&0<=t.indexOf(u.content)&&g(u,\"variable-input\")}}}}function c(e){return i[o+e]}function p(e,n){n=n||0;for(var t=0;t<e.length;t++){var a=c(t+n);if(!a||a.type!==e[t])return}return 1}function d(e,n){for(var t=1,a=o;a<i.length;a++){var r=i[a],s=r.content;if(\"punctuation\"===r.type&&\"string\"==typeof s)if(e.test(s))t++;else if(n.test(s)&&0===--t)return a}return-1}function g(e,n){var t=e.alias;t?Array.isArray(t)||(e.alias=t=[t]):e.alias=t=[],t.push(n)}}),Prism.languages.sql={comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,lookbehind:!0},variable:[{pattern:/@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,greedy:!0},/@[\\w.$]+/],string:{pattern:/(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,greedy:!0,lookbehind:!0},identifier:{pattern:/(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,greedy:!0,lookbehind:!0,inside:{punctuation:/^`|`$/}},function:/\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,keyword:/\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,boolean:/\\b(?:FALSE|NULL|TRUE)\\b/i,number:/\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,operator:/[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,punctuation:/[;[\\]()`,.]/},function(b){var e=b.languages.javascript[\"template-string\"],t=e.pattern.source,m=e.inside.interpolation,f=m.inside[\"interpolation-punctuation\"],s=m.pattern.source;function n(e,n){if(b.languages[e])return{pattern:RegExp(\"((?:\"+n+\")\\\\s*)\"+t),lookbehind:!0,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},\"embedded-code\":{pattern:/[\\s\\S]+/,alias:e}}}}function h(e,n,t){e={code:e,grammar:n,language:t};return b.hooks.run(\"before-tokenize\",e),e.tokens=b.tokenize(e.code,e.grammar),b.hooks.run(\"after-tokenize\",e),e.tokens}function l(a,e,r){var n=b.tokenize(a,{interpolation:{pattern:RegExp(s),lookbehind:!0}}),p=0,d={},n=h(n.map(function(e){if(\"string\"==typeof e)return e;for(var n,t,e=e.content;-1!==a.indexOf((t=p++,n=\"___\"+r.toUpperCase()+\"_\"+t+\"___\")););return d[n]=e,n}).join(\"\"),e,r),g=Object.keys(d);return p=0,function e(n){for(var t=0;t<n.length;t++){if(p>=g.length)return;var a,r,s,i,o,l,u,c=n[t];\"string\"==typeof c||\"string\"==typeof c.content?(a=g[p],-1!==(u=(l=\"string\"==typeof c?c:c.content).indexOf(a))&&(++p,r=l.substring(0,u),o=d[a],s=void 0,(i={})[\"interpolation-punctuation\"]=f,3===(i=b.tokenize(o,i)).length&&((s=[1,1]).push.apply(s,h(i[1],b.languages.javascript,\"javascript\")),i.splice.apply(i,s)),s=new b.Token(\"interpolation\",i,m.alias,o),i=l.substring(u+a.length),o=[],r&&o.push(r),o.push(s),i&&(e(l=[i]),o.push.apply(o,l)),\"string\"==typeof c?(n.splice.apply(n,[t,1].concat(o)),t+=o.length-1):c.content=o)):(u=c.content,Array.isArray(u)?e(u):e([u]))}}(n),new b.Token(r,n,\"language-\"+r,a)}b.languages.javascript[\"template-string\"]=[n(\"css\",/\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),n(\"html\",/\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),n(\"svg\",/\\bsvg/.source),n(\"markdown\",/\\b(?:markdown|md)/.source),n(\"graphql\",/\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),n(\"sql\",/\\bsql/.source),e].filter(Boolean);var a={javascript:!0,js:!0,typescript:!0,ts:!0,jsx:!0,tsx:!0};function u(e){return\"string\"==typeof e?e:Array.isArray(e)?e.map(u).join(\"\"):u(e.content)}b.hooks.add(\"after-tokenize\",function(e){e.language in a&&!function e(n){for(var t=0,a=n.length;t<a;t++){var r,s,i,o=n[t];\"string\"!=typeof o&&(r=o.content,Array.isArray(r)?\"template-string\"===o.type?(o=r[1],3===r.length&&\"string\"!=typeof o&&\"embedded-code\"===o.type&&(s=u(o),o=o.alias,o=Array.isArray(o)?o[0]:o,i=b.languages[o])&&(r[1]=l(s,i,o))):e(r):\"string\"!=typeof r&&e([r]))}}(e.tokens)})}(Prism),function(e){e.languages.typescript=e.languages.extend(\"javascript\",{\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/}),e.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,/\\btype\\b(?=\\s*(?:[\\{*]|$))/),delete e.languages.typescript.parameter,delete e.languages.typescript[\"literal-property\"];var n=e.languages.extend(\"typescript\",{});delete n[\"class-name\"],e.languages.typescript[\"class-name\"].inside=n,e.languages.insertBefore(\"typescript\",\"function\",{decorator:{pattern:/@[$\\w\\xA0-\\uFFFF]+/,inside:{at:{pattern:/^@/,alias:\"operator\"},function:/^[\\s\\S]+/}},\"generic-function\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,greedy:!0,inside:{function:/^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,generic:{pattern:/<[\\s\\S]+/,alias:\"class-name\",inside:n}}}}),e.languages.ts=e.languages.typescript}(Prism),function(e){var n=e.languages.javascript,t=/\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source,a=\"(@(?:arg|argument|param|property)\\\\s+(?:\"+t+\"\\\\s+)?)\";e.languages.jsdoc=e.languages.extend(\"javadoclike\",{parameter:{pattern:RegExp(a+/(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),lookbehind:!0,inside:{punctuation:/\\./}}}),e.languages.insertBefore(\"jsdoc\",\"keyword\",{\"optional-parameter\":{pattern:RegExp(a+/\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),lookbehind:!0,inside:{parameter:{pattern:/(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,lookbehind:!0,inside:{punctuation:/\\./}},code:{pattern:/(=)[\\s\\S]*(?=\\]$)/,lookbehind:!0,inside:n,alias:\"language-javascript\"},punctuation:/[=[\\]]/}},\"class-name\":[{pattern:RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g,function(){return t})),lookbehind:!0,inside:{punctuation:/\\./}},{pattern:RegExp(\"(@[a-z]+\\\\s+)\"+t),lookbehind:!0,inside:{string:n.string,number:n.number,boolean:n.boolean,keyword:e.languages.typescript.keyword,operator:/=>|\\.\\.\\.|[&|?:*]/,punctuation:/[.,;=<>{}()[\\]]/}}],example:{pattern:/(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,lookbehind:!0,inside:{code:{pattern:/^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,lookbehind:!0,inside:n,alias:\"language-javascript\"}}}}),e.languages.javadoclike.addSupport(\"javascript\",e.languages.jsdoc)}(Prism),function(e){e.languages.flow=e.languages.extend(\"javascript\",{}),e.languages.insertBefore(\"flow\",\"keyword\",{type:[{pattern:/\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,alias:\"class-name\"}]}),e.languages.flow[\"function-variable\"].pattern=/(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i,delete e.languages.flow.parameter,e.languages.insertBefore(\"flow\",\"operator\",{\"flow-punctuation\":{pattern:/\\{\\||\\|\\}/,alias:\"punctuation\"}}),Array.isArray(e.languages.flow.keyword)||(e.languages.flow.keyword=[e.languages.flow.keyword]),e.languages.flow.keyword.unshift({pattern:/(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,lookbehind:!0},{pattern:/(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,lookbehind:!0})}(Prism),Prism.languages.n4js=Prism.languages.extend(\"javascript\",{keyword:/\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/}),Prism.languages.insertBefore(\"n4js\",\"constant\",{annotation:{pattern:/@+\\w+/,alias:\"operator\"}}),Prism.languages.n4jsd=Prism.languages.n4js,function(e){function n(e,n){return RegExp(e.replace(/<ID>/g,function(){return/(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source}),n)}e.languages.insertBefore(\"javascript\",\"function-variable\",{\"method-variable\":{pattern:RegExp(\"(\\\\.\\\\s*)\"+e.languages.javascript[\"function-variable\"].pattern.source),lookbehind:!0,alias:[\"function-variable\",\"method\",\"function\",\"property-access\"]}}),e.languages.insertBefore(\"javascript\",\"function\",{method:{pattern:RegExp(\"(\\\\.\\\\s*)\"+e.languages.javascript.function.source),lookbehind:!0,alias:[\"function\",\"property-access\"]}}),e.languages.insertBefore(\"javascript\",\"constant\",{\"known-class-name\":[{pattern:/\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,alias:\"class-name\"},{pattern:/\\b(?:[A-Z]\\w*)Error\\b/,alias:\"class-name\"}]}),e.languages.insertBefore(\"javascript\",\"keyword\",{imports:{pattern:n(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),lookbehind:!0,inside:e.languages.javascript},exports:{pattern:n(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),lookbehind:!0,inside:e.languages.javascript}}),e.languages.javascript.keyword.unshift({pattern:/\\b(?:as|default|export|from|import)\\b/,alias:\"module\"},{pattern:/\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,alias:\"control-flow\"},{pattern:/\\bnull\\b/,alias:[\"null\",\"nil\"]},{pattern:/\\bundefined\\b/,alias:\"nil\"}),e.languages.insertBefore(\"javascript\",\"operator\",{spread:{pattern:/\\.{3}/,alias:\"operator\"},arrow:{pattern:/=>/,alias:\"operator\"}}),e.languages.insertBefore(\"javascript\",\"punctuation\",{\"property-access\":{pattern:n(/(\\.\\s*)#?<ID>/.source),lookbehind:!0},\"maybe-class-name\":{pattern:/(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,lookbehind:!0},dom:{pattern:/\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,alias:\"variable\"},console:{pattern:/\\bconsole(?=\\s*\\.)/,alias:\"class-name\"}});for(var t=[\"function\",\"function-variable\",\"method\",\"method-variable\",\"property-access\"],a=0;a<t.length;a++){var r=t[a],s=e.languages.javascript[r],r=(s=\"RegExp\"===e.util.type(s)?e.languages.javascript[r]={pattern:s}:s).inside||{};(s.inside=r)[\"maybe-class-name\"]=/^[A-Z][\\s\\S]*/}}(Prism),function(s){var e=s.util.clone(s.languages.javascript),t=/(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source,a=/(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source,r=/(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;function n(e,n){return e=e.replace(/<S>/g,function(){return t}).replace(/<BRACES>/g,function(){return a}).replace(/<SPREAD>/g,function(){return r}),RegExp(e,n)}r=n(r).source,s.languages.jsx=s.languages.extend(\"markup\",e),s.languages.jsx.tag.pattern=n(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source),s.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,s.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,s.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,s.languages.jsx.tag.inside.comment=e.comment,s.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:n(/<SPREAD>/.source),inside:s.languages.jsx}},s.languages.jsx.tag),s.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:n(/=<BRACES>/.source),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:s.languages.jsx}}},s.languages.jsx.tag);function i(e){for(var n=[],t=0;t<e.length;t++){var a=e[t],r=!1;\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"!==a.content[a.content.length-1].content&&n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:r=!0),(r||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces&&(r=o(a),t<e.length-1&&(\"string\"==typeof e[t+1]||\"plain-text\"===e[t+1].type)&&(r+=o(e[t+1]),e.splice(t+1,1)),0<t&&(\"string\"==typeof e[t-1]||\"plain-text\"===e[t-1].type)&&(r=o(e[t-1])+r,e.splice(t-1,1),t--),e[t]=new s.Token(\"plain-text\",r,null,r)),a.content&&\"string\"!=typeof a.content&&i(a.content)}}var o=function(e){return e?\"string\"==typeof e?e:\"string\"==typeof e.content?e.content:e.content.map(o).join(\"\"):\"\"};s.hooks.add(\"after-tokenize\",function(e){\"jsx\"!==e.language&&\"tsx\"!==e.language||i(e.tokens)})}(Prism),function(e){var n=e.util.clone(e.languages.typescript),n=(e.languages.tsx=e.languages.extend(\"jsx\",n),delete e.languages.tsx.parameter,delete e.languages.tsx[\"literal-property\"],e.languages.tsx.tag);n.pattern=RegExp(/(^|[^\\w$]|(?=<\\/))/.source+\"(?:\"+n.pattern.source+\")\",n.pattern.flags),n.lookbehind=!0}(Prism),Prism.languages.swift={comment:{pattern:/(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,lookbehind:!0,greedy:!0},\"string-literal\":[{pattern:RegExp(/(^|[^\"#])/.source+\"(?:\"+/\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source+\"|\"+/\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source+\")\"+/(?![\"#])/.source),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,lookbehind:!0,inside:null},\"interpolation-punctuation\":{pattern:/^\\)|\\\\\\($/,alias:\"punctuation\"},punctuation:/\\\\(?=[\\r\\n])/,string:/[\\s\\S]+/}},{pattern:RegExp(/(^|[^\"#])(#+)/.source+\"(?:\"+/\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source+\"|\"+/\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source+\")\\\\2\"),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,lookbehind:!0,inside:null},\"interpolation-punctuation\":{pattern:/^\\)|\\\\#+\\($/,alias:\"punctuation\"},string:/[\\s\\S]+/}}],directive:{pattern:RegExp(/#/.source+\"(?:\"+/(?:elseif|if)\\b/.source+\"(?:[ \\t]*\"+/(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source+\")+|\"+/(?:else|endif)\\b/.source+\")\"),alias:\"property\",inside:{\"directive-name\":/^#\\w+/,boolean:/\\b(?:false|true)\\b/,number:/\\b\\d+(?:\\.\\d+)*\\b/,operator:/!|&&|\\|\\||[<>]=?/,punctuation:/[(),]/}},literal:{pattern:/#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,alias:\"constant\"},\"other-directive\":{pattern:/#\\w+\\b/,alias:\"property\"},attribute:{pattern:/@\\w+/,alias:\"atrule\"},\"function-definition\":{pattern:/(\\bfunc\\s+)\\w+/,lookbehind:!0,alias:\"function\"},label:{pattern:/\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,lookbehind:!0,alias:\"important\"},keyword:/\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,boolean:/\\b(?:false|true)\\b/,nil:{pattern:/\\bnil\\b/,alias:\"constant\"},\"short-argument\":/\\$\\d+\\b/,omit:{pattern:/\\b_\\b/,alias:\"keyword\"},number:/\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\"class-name\":/\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()/i,constant:/\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,operator:/[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,punctuation:/[{}[\\]();,.:\\\\]/},Prism.languages.swift[\"string-literal\"].forEach(function(e){e.inside.interpolation.inside=Prism.languages.swift}),function(e){e.languages.kotlin=e.languages.extend(\"clike\",{keyword:{pattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,lookbehind:!0},function:[{pattern:/(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,greedy:!0},{pattern:/(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,lookbehind:!0,greedy:!0}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/}),delete e.languages.kotlin[\"class-name\"];var n={\"interpolation-punctuation\":{pattern:/^\\$\\{?|\\}$/,alias:\"punctuation\"},expression:{pattern:/[\\s\\S]+/,inside:e.languages.kotlin}};e.languages.insertBefore(\"kotlin\",\"string\",{\"string-literal\":[{pattern:/\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,alias:\"multiline\",inside:{interpolation:{pattern:/\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,inside:n},string:/[\\s\\S]+/}},{pattern:/\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,alias:\"singleline\",inside:{interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,lookbehind:!0,inside:n},string:/[\\s\\S]+/}}],char:{pattern:/'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,greedy:!0}}),delete e.languages.kotlin.string,e.languages.insertBefore(\"kotlin\",\"keyword\",{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:\"builtin\"}}),e.languages.insertBefore(\"kotlin\",\"function\",{label:{pattern:/\\b\\w+@|@\\w+\\b/,alias:\"symbol\"}}),e.languages.kt=e.languages.kotlin,e.languages.kts=e.languages.kotlin}(Prism),Prism.languages.c=Prism.languages.extend(\"clike\",{comment:{pattern:/\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,greedy:!0},string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,greedy:!0},\"class-name\":{pattern:/(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,lookbehind:!0},keyword:/\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,function:/\\b[a-z_]\\w*(?=\\s*\\()/i,number:/(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/}),Prism.languages.insertBefore(\"c\",\"string\",{char:{pattern:/'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,greedy:!0}}),Prism.languages.insertBefore(\"c\",\"string\",{macro:{pattern:/(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,greedy:!0,alias:\"property\",inside:{string:[{pattern:/^(#\\s*include\\s*)<[^>]+>/,lookbehind:!0},Prism.languages.c.string],char:Prism.languages.c.char,comment:Prism.languages.c.comment,\"macro-name\":[{pattern:/(^#\\s*define\\s+)\\w+\\b(?!\\()/i,lookbehind:!0},{pattern:/(^#\\s*define\\s+)\\w+\\b(?=\\()/i,lookbehind:!0,alias:\"function\"}],directive:{pattern:/^(#\\s*)[a-z]+/,lookbehind:!0,alias:\"keyword\"},\"directive-hash\":/^#/,punctuation:/##|\\\\(?=[\\r\\n])/,expression:{pattern:/\\S[\\s\\S]*/,inside:Prism.languages.c}}}}),Prism.languages.insertBefore(\"c\",\"function\",{constant:/\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/}),delete Prism.languages.c.boolean,Prism.languages.objectivec=Prism.languages.extend(\"c\",{string:{pattern:/@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,greedy:!0},keyword:/\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,operator:/-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/}),delete Prism.languages.objectivec[\"class-name\"],Prism.languages.objc=Prism.languages.objectivec,Prism.languages.reason=Prism.languages.extend(\"clike\",{string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},\"class-name\":/\\b[A-Z]\\w*/,keyword:/\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,operator:/\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/}),Prism.languages.insertBefore(\"reason\",\"class-name\",{char:{pattern:/'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,greedy:!0},constructor:/\\b[A-Z]\\w*\\b(?!\\s*\\.)/,label:{pattern:/\\b[a-z]\\w*(?=::)/,alias:\"symbol\"}}),delete Prism.languages.reason.function,function(e){for(var n=/\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source,t=0;t<2;t++)n=n.replace(/<self>/g,function(){return n});n=n.replace(/<self>/g,function(){return/[^\\s\\S]/.source}),e.languages.rust={comment:[{pattern:RegExp(/(^|[^\\\\])/.source+n),lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,greedy:!0},char:{pattern:/b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,greedy:!0},attribute:{pattern:/#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,greedy:!0,alias:\"attr-name\",inside:{string:null}},\"closure-params\":{pattern:/([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,lookbehind:!0,greedy:!0,inside:{\"closure-punctuation\":{pattern:/^\\||\\|$/,alias:\"punctuation\"},rest:null}},\"lifetime-annotation\":{pattern:/'\\w+/,alias:\"symbol\"},\"fragment-specifier\":{pattern:/(\\$\\w+:)[a-z]+/,lookbehind:!0,alias:\"punctuation\"},variable:/\\$\\w+/,\"function-definition\":{pattern:/(\\bfn\\s+)\\w+/,lookbehind:!0,alias:\"function\"},\"type-definition\":{pattern:/(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,lookbehind:!0,alias:\"class-name\"},\"module-declaration\":[{pattern:/(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,lookbehind:!0,alias:\"namespace\"},{pattern:/(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,lookbehind:!0,alias:\"namespace\",inside:{punctuation:/::/}}],keyword:[/\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,/\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],function:/\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,macro:{pattern:/\\b\\w+!/,alias:\"property\"},constant:/\\b[A-Z_][A-Z_\\d]+\\b/,\"class-name\":/\\b[A-Z]\\w*\\b/,namespace:{pattern:/(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,inside:{punctuation:/::/}},number:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,boolean:/\\b(?:false|true)\\b/,punctuation:/->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,operator:/[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/},e.languages.rust[\"closure-params\"].inside.rest=e.languages.rust,e.languages.rust.attribute.inside.string=e.languages.rust.string}(Prism),Prism.languages.go=Prism.languages.extend(\"clike\",{string:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,boolean:/\\b(?:_|false|iota|nil|true)\\b/,number:[/\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,/\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,/(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],operator:/[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,builtin:/\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/}),Prism.languages.insertBefore(\"go\",\"string\",{char:{pattern:/'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,greedy:!0}}),delete Prism.languages.go[\"class-name\"],function(e){var n=/\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,t=/\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g,function(){return n.source});e.languages.cpp=e.languages.extend(\"c\",{\"class-name\":[{pattern:RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g,function(){return n.source})),lookbehind:!0},/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,/\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],keyword:n,number:{pattern:/(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,boolean:/\\b(?:false|true)\\b/}),e.languages.insertBefore(\"cpp\",\"string\",{module:{pattern:RegExp(/(\\b(?:import|module)\\s+)/.source+\"(?:\"+/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source+\"|\"+/<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g,function(){return t})+\")\"),lookbehind:!0,greedy:!0,inside:{string:/^[<\"][\\s\\S]+/,operator:/:/,punctuation:/\\./}},\"raw-string\":{pattern:/R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,alias:\"string\",greedy:!0}}),e.languages.insertBefore(\"cpp\",\"keyword\",{\"generic-function\":{pattern:/\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,inside:{function:/^\\w+/,generic:{pattern:/<[\\s\\S]+/,alias:\"class-name\",inside:e.languages.cpp}}}}),e.languages.insertBefore(\"cpp\",\"operator\",{\"double-colon\":{pattern:/::/,alias:\"punctuation\"}}),e.languages.insertBefore(\"cpp\",\"class-name\",{\"base-clause\":{pattern:/(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend(\"cpp\",{})}}),e.languages.insertBefore(\"inside\",\"double-colon\",{\"class-name\":/\\b[a-z_]\\w*\\b(?!\\s*::)/i},e.languages.cpp[\"base-clause\"])}(Prism);","export { default as dracula } from \"./dracula\"\nexport { default as duotoneDark } from \"./duotoneDark\"\nexport { default as duotoneLight } from \"./duotoneLight\"\nexport { default as github } from \"./github\"\nexport { default as nightOwl } from \"./nightOwl\"\nexport { default as nightOwlLight } from \"./nightOwlLight\"\nexport { default as oceanicNext } from \"./oceanicNext\"\nexport { default as okaidia } from \"./okaidia\"\nexport { default as palenight } from \"./palenight\"\nexport { default as shadesOfPurple } from \"./shadesOfPurple\"\nexport { default as synthwave84 } from \"./synthwave84\"\nexport { default as ultramin } from \"./ultramin\"\nexport { default as vsDark } from \"./vsDark\"\nexport { default as vsLight } from \"./vsLight\"\nexport { default as jettwaveDark } from \"./jettwaveDark\"\nexport { default as jettwaveLight } from \"./jettwaveLight\"\n","// Original: https://github.com/dracula/visual-studio-code\n// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\",\n  },\n  styles: [\n    {\n      types: [\"prolog\", \"constant\", \"builtin\"],\n      style: {\n        color: \"rgb(189, 147, 249)\",\n      },\n    },\n    {\n      types: [\"inserted\", \"function\"],\n      style: {\n        color: \"rgb(80, 250, 123)\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgb(255, 85, 85)\",\n      },\n    },\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(255, 184, 108)\",\n      },\n    },\n    {\n      types: [\"punctuation\", \"symbol\"],\n      style: {\n        color: \"rgb(248, 248, 242)\",\n      },\n    },\n    {\n      types: [\"string\", \"char\", \"tag\", \"selector\"],\n      style: {\n        color: \"rgb(255, 121, 198)\",\n      },\n    },\n    {\n      types: [\"keyword\", \"variable\"],\n      style: {\n        color: \"rgb(189, 147, 249)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(98, 114, 164)\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(241, 250, 140)\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\",\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"#6c6783\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#e09142\",\n      },\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#9a86fd\",\n      },\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#eeebff\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#c4b9fe\",\n      },\n    },\n    {\n      types: [\n        \"boolean\",\n        \"string\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"atrule\",\n        \"placeholder\",\n        \"variable\",\n      ],\n      style: {\n        color: \"#ffcc99\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#c4b9fe\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Duotone Light\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    backgroundColor: \"#faf8f5\",\n    color: \"#728fcb\",\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n      style: {\n        color: \"#b6ad9a\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"number\"],\n      style: {\n        color: \"#063289\",\n      },\n    },\n    {\n      types: [\"property\", \"function\"],\n      style: {\n        color: \"#b29762\",\n      },\n    },\n    {\n      types: [\"tag-id\", \"selector\", \"atrule-id\"],\n      style: {\n        color: \"#2d2006\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n    {\n      types: [\n        \"boolean\",\n        \"string\",\n        \"entity\",\n        \"url\",\n        \"attr-value\",\n        \"keyword\",\n        \"control\",\n        \"directive\",\n        \"unit\",\n        \"statement\",\n        \"regex\",\n        \"atrule\",\n      ],\n      style: {\n        color: \"#728fcb\",\n      },\n    },\n    {\n      types: [\"placeholder\", \"variable\"],\n      style: {\n        color: \"#93abdc\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        textDecorationLine: \"line-through\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        textDecorationLine: \"underline\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"important\"],\n      style: {\n        color: \"#896724\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\",\n  },\n  styles: [\n    {\n      types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n      style: {\n        color: \"#999988\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"string\", \"attr-value\"],\n      style: {\n        color: \"#e3116c\",\n      },\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#393A34\",\n      },\n    },\n    {\n      types: [\n        \"entity\",\n        \"url\",\n        \"symbol\",\n        \"number\",\n        \"boolean\",\n        \"variable\",\n        \"constant\",\n        \"property\",\n        \"regex\",\n        \"inserted\",\n      ],\n      style: {\n        color: \"#36acaa\",\n      },\n    },\n    {\n      types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n      style: {\n        color: \"#00a4db\",\n      },\n    },\n    {\n      types: [\"function\", \"deleted\", \"tag\"],\n      style: {\n        color: \"#d73a49\",\n      },\n    },\n    {\n      types: [\"function-variable\"],\n      style: {\n        color: \"#6f42c1\",\n      },\n    },\n    {\n      types: [\"tag\", \"selector\", \"keyword\"],\n      style: {\n        color: \"#00009f\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Original: https://github.com/sdras/night-owl-vscode-theme\n// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#d6deeb\",\n    backgroundColor: \"#011627\",\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(99, 119, 119)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n      },\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(214, 222, 235)\",\n      },\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\",\n      },\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\",\n      },\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n      },\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(255, 203, 139)\",\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"rgb(127, 219, 202)\",\n      },\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\",\n      },\n    },\n    {\n      types: [\"property\"],\n      style: {\n        color: \"rgb(128, 203, 196)\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Original: https://github.com/sdras/night-owl-vscode-theme\n// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#403f53\",\n    backgroundColor: \"#FBFBFB\",\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"inserted\", \"attr-name\"],\n      style: {\n        color: \"rgb(72, 118, 214)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(152, 159, 177)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"string\", \"builtin\", \"char\", \"constant\", \"url\"],\n      style: {\n        color: \"rgb(72, 118, 214)\",\n      },\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(201, 103, 101)\",\n      },\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(170, 9, 130)\",\n      },\n    },\n    {\n      // This was manually added after the auto-generation\n      // so that punctuations are not italicised\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(153, 76, 195)\",\n      },\n    },\n    {\n      types: [\"function\", \"selector\", \"doctype\"],\n      style: {\n        color: \"rgb(153, 76, 195)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(17, 17, 17)\",\n      },\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(153, 76, 195)\",\n      },\n    },\n    {\n      types: [\"operator\", \"property\", \"keyword\", \"namespace\"],\n      style: {\n        color: \"rgb(12, 150, 155)\",\n      },\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(188, 84, 84)\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Oceanic Next\n// Author: Dmitri Voronianski (https://github.com/voronianski)\n// https://github.com/voronianski/oceanic-next-color-scheme\n// Adapted from: https://github.com/reactjs/reactjs.org/blob/428d52b/src/prism-styles.js\nimport type { PrismTheme } from \"../types\"\nconst colors = {\n  char: \"#D8DEE9\",\n  comment: \"#999999\",\n  keyword: \"#c5a5c5\",\n  primitive: \"#5a9bcf\",\n  string: \"#8dc891\",\n  variable: \"#d7deea\",\n  boolean: \"#ff8b50\",\n  punctuation: \"#5FB3B3\",\n  tag: \"#fc929e\",\n  function: \"#79b6f2\",\n  className: \"#FAC863\",\n  method: \"#6699CC\",\n  operator: \"#fc929e\",\n}\nconst theme: PrismTheme = {\n  plain: {\n    backgroundColor: \"#282c34\",\n    color: \"#ffffff\",\n  },\n  styles: [\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: colors.keyword,\n      },\n    },\n    {\n      types: [\"attr-value\"],\n      style: {\n        color: colors.string,\n      },\n    },\n    {\n      types: [\n        \"comment\",\n        \"block-comment\",\n        \"prolog\",\n        \"doctype\",\n        \"cdata\",\n        \"shebang\",\n      ],\n      style: {\n        color: colors.comment,\n      },\n    },\n    {\n      types: [\n        \"property\",\n        \"number\",\n        \"function-name\",\n        \"constant\",\n        \"symbol\",\n        \"deleted\",\n      ],\n      style: {\n        color: colors.primitive,\n      },\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: colors.boolean,\n      },\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: colors.tag,\n      },\n    },\n    {\n      types: [\"string\"],\n      style: {\n        color: colors.string,\n      },\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: colors.string,\n      },\n    },\n    {\n      types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n      style: {\n        color: colors.char,\n      },\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: colors.function,\n      },\n    },\n    {\n      types: [\"operator\", \"entity\", \"url\", \"variable\"],\n      style: {\n        color: colors.variable,\n      },\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        color: colors.keyword,\n      },\n    },\n    {\n      types: [\"atrule\", \"class-name\"],\n      style: {\n        color: colors.className,\n      },\n    },\n    {\n      types: [\"important\"],\n      style: {\n        fontWeight: \"400\",\n      },\n    },\n    {\n      types: [\"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        opacity: 0.7,\n      },\n    },\n  ],\n}\nexport default theme\n","/*\n    Adapted from the Prism Okaidia theme\n    https://github.com/PrismJS/prism/blob/1761513e3db48ca9222037644a9c68746e24f039/themes/prism-okaidia.css\n    https://github.com/ocodia/okaidia-prismjs-theme\n*/\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#f8f8f2\",\n    backgroundColor: \"#272822\",\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(162, 191, 252)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"#f92672\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#8292a2\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"#a6e22e\",\n      },\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"#f8f8f2\",\n      },\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"#ae81ff\",\n      },\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n      style: {\n        color: \"#e6db74\",\n      },\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"#f8f8f2\",\n      },\n    },\n    {\n      types: [\"selector\", \"doctype\"],\n      style: {\n        color: \"#a6e22e\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"tag\", \"operator\", \"keyword\"],\n      style: {\n        color: \"#66d9ef\",\n      },\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"#ae81ff\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\",\n        opacity: 0.7,\n      },\n    },\n    {\n      types: [\"tag\", \"property\"],\n      style: {\n        color: \"#f92672\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"#a6e22e !important\",\n      },\n    },\n    {\n      types: [\"doctype\"],\n      style: {\n        color: \"#8292a2\",\n      },\n    },\n    {\n      types: [\"rule\"],\n      style: {\n        color: \"#e6db74\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#bfc7d5\",\n    backgroundColor: \"#292d3e\",\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(105, 112, 152)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"string\", \"inserted\"],\n      style: {\n        color: \"rgb(195, 232, 141)\",\n      },\n    },\n    {\n      types: [\"number\"],\n      style: {\n        color: \"rgb(247, 140, 108)\",\n      },\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\"],\n      style: {\n        color: \"rgb(130, 170, 255)\",\n      },\n    },\n    {\n      types: [\"punctuation\", \"selector\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n      },\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(191, 199, 213)\",\n      },\n    },\n    {\n      types: [\"class-name\", \"attr-name\"],\n      style: {\n        color: \"rgb(255, 203, 107)\",\n      },\n    },\n    {\n      types: [\"tag\", \"deleted\"],\n      style: {\n        color: \"rgb(255, 85, 114)\",\n      },\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"rgb(137, 221, 255)\",\n      },\n    },\n    {\n      types: [\"boolean\"],\n      style: {\n        color: \"rgb(255, 88, 116)\",\n      },\n    },\n    {\n      types: [\"keyword\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"doctype\"],\n      style: {\n        color: \"rgb(199, 146, 234)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"namespace\"],\n      style: {\n        color: \"rgb(178, 204, 214)\",\n      },\n    },\n    {\n      types: [\"url\"],\n      style: {\n        color: \"rgb(221, 221, 221)\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Shades of Purple\n// Author: Ahmad Awais https://twitter.com/MrAhmadAwais\n// Original: https://github.com/ahmadawais/shades-of-purple-vscode/\n// Converted automatically using ./tools/themeFromVsCode and then customized manually.\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#9EFEFF\",\n    backgroundColor: \"#2D2A55\",\n  },\n  styles: [\n    {\n      types: [\"changed\"],\n      style: {\n        color: \"rgb(255, 238, 128)\",\n      },\n    },\n    {\n      types: [\"deleted\"],\n      style: {\n        color: \"rgba(239, 83, 80, 0.56)\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"rgb(173, 219, 103)\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(179, 98, 255)\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"rgb(255, 255, 255)\",\n      },\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"rgb(255, 98, 140)\",\n      },\n    },\n    {\n      types: [\"string\", \"url\"],\n      style: {\n        color: \"rgb(165, 255, 144)\",\n      },\n    },\n    {\n      types: [\"variable\"],\n      style: {\n        color: \"rgb(255, 238, 128)\",\n      },\n    },\n    {\n      types: [\"number\", \"boolean\"],\n      style: {\n        color: \"rgb(255, 98, 140)\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(255, 180, 84)\",\n      },\n    },\n    {\n      types: [\n        \"keyword\",\n        \"operator\",\n        \"property\",\n        \"namespace\",\n        \"tag\",\n        \"selector\",\n        \"doctype\",\n      ],\n      style: {\n        color: \"rgb(255, 157, 0)\",\n      },\n    },\n    {\n      types: [\"builtin\", \"char\", \"constant\", \"function\", \"class-name\"],\n      style: {\n        color: \"rgb(250, 208, 0)\",\n      },\n    },\n  ],\n}\nexport default theme\n","/*\n * Synthwave '84 Theme originally by Robb Owen [@Robb0wen] for Visual Studio Code\n * Demo: https://marc.dev/demo/prism-synthwave84\n *\n * Ported for PrismJS by Marc Backes [@themarcba]: https://github.com/themarcba/prism-themes/blob/master/themes/prism-synthwave84.css\n * Ported for prism-react-renderer by Forrest Akin [@forrest-akin]\n */\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    backgroundColor: \"linear-gradient(to bottom, #2a2139 75%, #34294f)\",\n    backgroundImage: \"#34294f\",\n    color: \"#f92aad\",\n    textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\",\n  },\n  styles: [\n    {\n      types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\"],\n      style: {\n        color: \"#495495\",\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"punctuation\"],\n      style: {\n        color: \"#ccc\",\n      },\n    },\n    {\n      types: [\n        \"tag\",\n        \"attr-name\",\n        \"namespace\",\n        \"number\",\n        \"unit\",\n        \"hexcode\",\n        \"deleted\",\n      ],\n      style: {\n        color: \"#e2777a\",\n      },\n    },\n    {\n      types: [\"property\", \"selector\"],\n      style: {\n        color: \"#72f1b8\",\n        textShadow: \"0 0 2px #100c0f, 0 0 10px #257c5575, 0 0 35px #21272475\",\n      },\n    },\n    {\n      types: [\"function-name\"],\n      style: {\n        color: \"#6196cc\",\n      },\n    },\n    {\n      types: [\"boolean\", \"selector-id\", \"function\"],\n      style: {\n        color: \"#fdfdfd\",\n        textShadow:\n          \"0 0 2px #001716, 0 0 3px #03edf975, 0 0 5px #03edf975, 0 0 8px #03edf975\",\n      },\n    },\n    {\n      types: [\"class-name\", \"maybe-class-name\", \"builtin\"],\n      style: {\n        color: \"#fff5f6\",\n        textShadow:\n          \"0 0 2px #000, 0 0 10px #fc1f2c75, 0 0 5px #fc1f2c75, 0 0 25px #fc1f2c75\",\n      },\n    },\n    {\n      types: [\"constant\", \"symbol\"],\n      style: {\n        color: \"#f92aad\",\n        textShadow: \"0 0 2px #100c0f, 0 0 5px #dc078e33, 0 0 10px #fff3\",\n      },\n    },\n    {\n      types: [\"important\", \"atrule\", \"keyword\", \"selector-class\"],\n      style: {\n        color: \"#f4eee4\",\n        textShadow: \"0 0 2px #393a33, 0 0 8px #f39f0575, 0 0 2px #f39f0575\",\n      },\n    },\n    {\n      types: [\"string\", \"char\", \"attr-value\", \"regex\", \"variable\"],\n      style: {\n        color: \"#f87c32\",\n      },\n    },\n    {\n      types: [\"parameter\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"entity\", \"url\"],\n      style: {\n        color: \"#67cdcc\",\n      },\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"ffffffee\",\n      },\n    },\n    {\n      types: [\"important\", \"bold\"],\n      style: {\n        fontWeight: \"bold\",\n      },\n    },\n    {\n      types: [\"italic\"],\n      style: {\n        fontStyle: \"italic\",\n      },\n    },\n    {\n      types: [\"entity\"],\n      style: {\n        cursor: \"help\",\n      },\n    },\n    {\n      types: [\"inserted\"],\n      style: {\n        color: \"green\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Original: https://github.com/damienstanton/ultramin\n// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#282a2e\",\n    backgroundColor: \"#ffffff\",\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(197, 200, 198)\",\n      },\n    },\n    {\n      types: [\"string\", \"number\", \"builtin\", \"variable\"],\n      style: {\n        color: \"rgb(150, 152, 150)\",\n      },\n    },\n    {\n      types: [\"class-name\", \"function\", \"tag\", \"attr-name\"],\n      style: {\n        color: \"rgb(40, 42, 46)\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#9CDCFE\",\n    backgroundColor: \"#1E1E1E\",\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"rgb(0, 0, 128)\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(106, 153, 85)\",\n      },\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"rgb(86, 156, 214)\",\n      },\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"rgb(181, 206, 168)\",\n      },\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"rgb(100, 102, 149)\",\n      },\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"rgb(156, 220, 254)\",\n      },\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"rgb(206, 145, 120)\",\n      },\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"rgb(215, 186, 125)\",\n      },\n    },\n    {\n      // Fix tag color\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(78, 201, 176)\",\n      },\n    },\n    {\n      // Fix tag color for HTML\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"rgb(86, 156, 214)\",\n      },\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"rgb(212, 212, 212)\",\n      },\n    },\n    {\n      // Fix punctuation color for HTML\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\",\n      },\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"rgb(220, 220, 170)\",\n      },\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(78, 201, 176)\",\n      },\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"rgb(209, 105, 105)\",\n      },\n    },\n  ],\n}\nexport default theme\n","// Converted automatically using ./tools/themeFromVsCode\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#000000\",\n    backgroundColor: \"#ffffff\",\n  },\n  styles: [\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"rgb(0, 128, 0)\",\n      },\n    },\n    {\n      types: [\"builtin\"],\n      style: {\n        color: \"rgb(0, 112, 193)\",\n      },\n    },\n    {\n      types: [\"number\", \"variable\", \"inserted\"],\n      style: {\n        color: \"rgb(9, 134, 88)\",\n      },\n    },\n    {\n      types: [\"operator\"],\n      style: {\n        color: \"rgb(0, 0, 0)\",\n      },\n    },\n    {\n      types: [\"constant\", \"char\"],\n      style: {\n        color: \"rgb(129, 31, 63)\",\n      },\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"rgb(128, 0, 0)\",\n      },\n    },\n    {\n      types: [\"attr-name\"],\n      style: {\n        color: \"rgb(255, 0, 0)\",\n      },\n    },\n    {\n      types: [\"deleted\", \"string\"],\n      style: {\n        color: \"rgb(163, 21, 21)\",\n      },\n    },\n    {\n      types: [\"changed\", \"punctuation\"],\n      style: {\n        color: \"rgb(4, 81, 165)\",\n      },\n    },\n    {\n      types: [\"function\", \"keyword\"],\n      style: {\n        color: \"rgb(0, 0, 255)\",\n      },\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"rgb(38, 127, 153)\",\n      },\n    },\n  ],\n}\nexport default theme\n","//\n// dark version of code viewer styles built for https://jettwave.com\n// only uses colors found in default tailwindCSS => https://tailwindcss.com/docs/customizing-colors\n// designed by: https://github.com/ryanmogk\n//\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#f8fafc\",\n    backgroundColor: \"#011627\",\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"#000080\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#6A9955\",\n      },\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"#569CD6\",\n      },\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"#B5CEA8\",\n      },\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"#f8fafc\",\n      },\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"#9CDCFE\",\n      },\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"#cbd5e1\",\n      },\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"#D7BA7D\",\n      },\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#0ea5e9\",\n      },\n    },\n    {\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#0ea5e9\",\n      },\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#D4D4D4\",\n      },\n    },\n    {\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\",\n      },\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"#7dd3fc\",\n      },\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"#0ea5e9\",\n      },\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"#D16969\",\n      },\n    },\n  ],\n}\nexport default theme\n","// light version of code viewer styles built for https://jettwave.com\n// only uses colors found in default tailwindCSS => https://tailwindcss.com/docs/customizing-colors\n// designed by: https://github.com/ryanmogk\nimport type { PrismTheme } from \"../types\"\nconst theme: PrismTheme = {\n  plain: {\n    color: \"#0f172a\",\n    backgroundColor: \"#f1f5f9\",\n  },\n  styles: [\n    {\n      types: [\"prolog\"],\n      style: {\n        color: \"#000080\",\n      },\n    },\n    {\n      types: [\"comment\"],\n      style: {\n        color: \"#6A9955\",\n      },\n    },\n    {\n      types: [\"builtin\", \"changed\", \"keyword\", \"interpolation-punctuation\"],\n      style: {\n        color: \"#0c4a6e\",\n      },\n    },\n    {\n      types: [\"number\", \"inserted\"],\n      style: {\n        color: \"#B5CEA8\",\n      },\n    },\n    {\n      types: [\"constant\"],\n      style: {\n        color: \"#0f172a\",\n      },\n    },\n    {\n      types: [\"attr-name\", \"variable\"],\n      style: {\n        color: \"#0c4a6e\",\n      },\n    },\n    {\n      types: [\"deleted\", \"string\", \"attr-value\", \"template-punctuation\"],\n      style: {\n        color: \"#64748b\",\n      },\n    },\n    {\n      types: [\"selector\"],\n      style: {\n        color: \"#D7BA7D\",\n      },\n    },\n    {\n      types: [\"tag\"],\n      style: {\n        color: \"#0ea5e9\",\n      },\n    },\n    {\n      types: [\"tag\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#0ea5e9\",\n      },\n    },\n    {\n      types: [\"punctuation\", \"operator\"],\n      style: {\n        color: \"#475569\",\n      },\n    },\n    {\n      types: [\"punctuation\"],\n      languages: [\"markup\"],\n      style: {\n        color: \"#808080\",\n      },\n    },\n    {\n      types: [\"function\"],\n      style: {\n        color: \"#0e7490\",\n      },\n    },\n    {\n      types: [\"class-name\"],\n      style: {\n        color: \"#0ea5e9\",\n      },\n    },\n    {\n      types: [\"char\"],\n      style: {\n        color: \"#D16969\",\n      },\n    },\n  ],\n}\nexport default theme\n","import { Prism } from \"./prism-langs\"\nimport * as themes from \"./themes\"\nimport { createElement } from \"react\"\nimport { Highlight as InternalHighlight } from \"./components/highlight\"\nimport { HighlightProps, PrismLib } from \"./types\"\n\n/**\n * Prism React Renderer requires this specific instance\n * of Prism provided to ensure the languages are correctly loaded\n */\nconst Highlight = (props: HighlightProps) =>\n  createElement(InternalHighlight, {\n    ...props,\n    prism: props.prism || (Prism as PrismLib),\n    theme: props.theme || themes.vsDark,\n    code: props.code,\n    language: props.language,\n  })\nexport { Highlight, Prism, themes }\n","import { Language, PrismTheme } from \"../types\"\nimport { useEffect, useRef, useState } from \"react\"\nimport themeToDict, { ThemeDict } from \"../utils/themeToDict\"\n\nexport const useThemeDictionary = (language: Language, theme: PrismTheme) => {\n  const [themeDictionary, setThemeDictionary] = useState<ThemeDict>(\n    themeToDict(theme, language)\n  )\n  const previousTheme = useRef<PrismTheme>()\n  const previousLanguage = useRef<Language>()\n\n  useEffect(() => {\n    if (\n      theme !== previousTheme.current ||\n      language !== previousLanguage.current\n    ) {\n      previousTheme.current = theme\n      previousLanguage.current = language\n      setThemeDictionary(themeToDict(theme, language))\n    }\n  }, [language, theme])\n\n  return themeDictionary\n}\n","import type { Language, StyleObj, PrismTheme } from \"../types\"\nexport type ThemeDict = {\n  root: StyleObj\n  plain: StyleObj\n  [type: string]: StyleObj\n}\n\nconst themeToDict = (theme: PrismTheme, language: Language): ThemeDict => {\n  const { plain } = theme\n  const themeDict = theme.styles.reduce<ThemeDict>((acc, themeEntry) => {\n    const { languages, style } = themeEntry\n\n    if (languages && !languages.includes(language)) {\n      return acc\n    }\n\n    themeEntry.types.forEach(type => {\n      const accStyle: StyleObj = { ...acc[type], ...style }\n      acc[type] = accStyle\n    })\n    return acc\n  }, {} as ThemeDict)\n\n  themeDict.root = plain as StyleObj\n  themeDict.plain = { ...plain, backgroundColor: undefined } as StyleObj\n  return themeDict\n}\n\nexport default themeToDict\n","import { ThemeDict } from \"../utils/themeToDict\"\nimport { useCallback } from \"react\"\nimport { LineInputProps, LineOutputProps } from \"../types\"\nimport clsx from \"clsx\"\n\nexport const useGetLineProps = (themeDictionary?: ThemeDict) =>\n  useCallback(\n    ({ className, style, line, ...rest }: LineInputProps) => {\n      const output: LineOutputProps = {\n        ...rest,\n        className: clsx(\"token-line\", className),\n      }\n\n      if (typeof themeDictionary === \"object\" && \"plain\" in themeDictionary)\n        output.style = themeDictionary.plain\n\n      if (typeof style === \"object\")\n        output.style = { ...(output.style || {}), ...style }\n\n      return output\n    },\n    [themeDictionary]\n  )\n","import { ThemeDict } from \"../utils/themeToDict\"\nimport { CSSProperties, useCallback } from \"react\"\nimport { Token, TokenInputProps, TokenOutputProps } from \"../types\"\nimport clsx from \"clsx\"\n\nexport const useGetTokenProps = (themeDictionary?: ThemeDict) => {\n  const styleForToken = useCallback(\n    ({ types, empty }: Token) => {\n      if (themeDictionary == null) return undefined\n      else if (types.length === 1 && types[0] === \"plain\") {\n        return empty != null ? { display: \"inline-block\" } : undefined\n      } else if (types.length === 1 && empty != null) {\n        return themeDictionary[types[0]]\n      }\n\n      return Object.assign(\n        empty != null ? { display: \"inline-block\" } : {},\n        ...types.map(type => themeDictionary[type])\n      ) satisfies CSSProperties\n    },\n    [themeDictionary]\n  )\n\n  return useCallback(\n    ({ token, className, style, ...rest }: TokenInputProps) => {\n      const output: TokenOutputProps = {\n        ...rest,\n        className: clsx(\"token\", ...token.types, className),\n        children: token.content,\n        style: styleForToken(token),\n      }\n\n      if (style != null) {\n        output.style = {\n          ...(output.style || {}),\n          ...style,\n        }\n      }\n\n      return output\n    },\n    [styleForToken]\n  )\n}\n","import type { Token } from \"../types\"\nimport type { Token as PrismToken, TokenStream } from \"prismjs\"\n\nconst newlineRe = /\\r\\n|\\r|\\n/\n\n// Empty lines need to contain a single empty token, denoted with { empty: true }\nconst normalizeEmptyLines = (line: Token[]) => {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true,\n    })\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\"\n    line[0].empty = true\n  }\n}\n\nconst appendTypes = (types: string[], add: string[] | string): string[] => {\n  const typesSize = types.length\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types\n  }\n\n  return types.concat(add)\n}\n\n// Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\nconst normalizeTokens = (tokens: (PrismToken | string)[]): Token[][] => {\n  const typeArrStack: string[][] = [[]]\n  const tokenArrStack = [tokens]\n  const tokenArrIndexStack = [0]\n  const tokenArrSizeStack = [tokens.length]\n  let i = 0\n  let stackIndex = 0\n  let currentLine: Token[] = []\n  const acc = [currentLine]\n\n  while (stackIndex > -1) {\n    while (\n      (i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]\n    ) {\n      let content: TokenStream\n      let types = typeArrStack[stackIndex]\n      const tokenArr = tokenArrStack[stackIndex]\n      const token = tokenArr[i]\n\n      // Determine content and append type to types if necessary\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"]\n        content = token\n      } else {\n        types = appendTypes(types, token.type)\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias)\n        }\n\n        content = token.content\n      }\n\n      // If token.content is an array, increase the stack depth and repeat this while-loop\n      if (typeof content !== \"string\") {\n        stackIndex++\n        typeArrStack.push(types)\n        tokenArrStack.push(content as PrismToken[])\n        tokenArrIndexStack.push(0)\n        tokenArrSizeStack.push(content.length)\n        continue\n      }\n\n      // Split by newlines\n      const splitByNewlines = content.split(newlineRe)\n      const newlineCount = splitByNewlines.length\n      currentLine.push({\n        types,\n        content: splitByNewlines[0],\n      })\n\n      // Create a new line for each string on a new line\n      for (let i = 1; i < newlineCount; i++) {\n        normalizeEmptyLines(currentLine)\n        acc.push((currentLine = []))\n        currentLine.push({\n          types,\n          content: splitByNewlines[i],\n        })\n      }\n    }\n\n    // Decreate the stack depth\n    stackIndex--\n    typeArrStack.pop()\n    tokenArrStack.pop()\n    tokenArrIndexStack.pop()\n    tokenArrSizeStack.pop()\n  }\n\n  normalizeEmptyLines(currentLine)\n  return acc\n}\n\nexport default normalizeTokens\n","import { EnvConfig, Language, PrismGrammar, PrismLib } from \"../types\"\nimport normalizeTokens from \"../utils/normalizeTokens\"\nimport { useMemo, useRef } from \"react\"\n\ntype Options = {\n  prism: PrismLib\n  code: string\n  grammar?: PrismGrammar\n  language: Language\n}\n\nexport const useTokenize = ({ prism, code, grammar, language }: Options) => {\n  const prismRef = useRef(prism)\n  return useMemo(() => {\n    if (grammar == null) return normalizeTokens([code])\n\n    const prismConfig: EnvConfig = {\n      code,\n      grammar,\n      language,\n      tokens: [],\n    }\n\n    prismRef.current.hooks.run(\"before-tokenize\", prismConfig)\n    prismConfig.tokens = prismRef.current.tokenize(code, grammar)\n    prismRef.current.hooks.run(\"after-tokenize\", prismConfig)\n    return normalizeTokens(prismConfig.tokens)\n  }, [code, grammar, language])\n}\n","import { InternalHighlightProps } from \"../types\"\nimport { useThemeDictionary } from \"./useThemeDictionary\"\nimport { useGetLineProps } from \"./useGetLineProps\"\nimport { useGetTokenProps } from \"./useGetTokenProps\"\nimport { useTokenize } from \"./useTokenize\"\n\nexport const Highlight = ({\n  children,\n  language: _language,\n  code,\n  theme,\n  prism,\n}: InternalHighlightProps) => {\n  const language = _language.toLowerCase()\n  const themeDictionary = useThemeDictionary(language, theme)\n  const getLineProps = useGetLineProps(themeDictionary)\n  const getTokenProps = useGetTokenProps(themeDictionary)\n  const grammar = prism.languages[language]\n  const tokens = useTokenize({ prism, language, code, grammar })\n\n  return children({\n    tokens,\n    className: `prism-code language-${language}`,\n    style: themeDictionary != null ? themeDictionary.root : {},\n    getLineProps,\n    getTokenProps,\n  })\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,aAAA,GAAAC,UAAA;EAAA,6GAAAC,CAAAC,OAAA,EAAAC,MAAA;IAeA,IAAIC,MAAA,GAAS,YAAY;MAGxB,IAAIC,IAAA,GAAO;MACX,IAAIC,QAAA,GAAW;MAGf,IAAIC,gBAAA,GAAmB,CAAC;MAGxB,IAAIC,CAAA,GAAI;QAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QAUPC,IAAA,EAAM;UACLC,MAAA,EAAQ,SAASA,OAAOC,MAAA,EAAQ;YAC/B,IAAIA,MAAA,YAAkBC,KAAA,EAAO;cAC5B,OAAO,IAAIA,KAAA,CAAMD,MAAA,CAAOE,IAAA,EAAMH,MAAA,CAAOC,MAAA,CAAOG,OAAO,GAAGH,MAAA,CAAOI,KAAK;YACnE,WAAWC,KAAA,CAAMC,OAAA,CAAQN,MAAM,GAAG;cACjC,OAAOA,MAAA,CAAOO,GAAA,CAAIR,MAAM;YACzB,OAAO;cACN,OAAOC,MAAA,CAAOQ,OAAA,CAAQ,MAAM,OAAO,EAAEA,OAAA,CAAQ,MAAM,MAAM,EAAEA,OAAA,CAAQ,WAAW,GAAG;YAClF;UACD;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAkBAN,IAAA,EAAM,SAAAA,CAAUO,CAAA,EAAG;YAClB,OAAOC,MAAA,CAAOC,SAAA,CAAUC,QAAA,CAASC,IAAA,CAAKJ,CAAC,EAAEK,KAAA,CAAM,GAAG,EAAE;UACrD;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAQAC,KAAA,EAAO,SAAAA,CAAUC,GAAA,EAAK;YACrB,IAAI,CAACA,GAAA,CAAI,MAAM,GAAG;cACjBN,MAAA,CAAOO,cAAA,CAAeD,GAAA,EAAK,QAAQ;gBAAEE,KAAA,EAAO,EAAEvB;cAAS,CAAC;YACzD;YACA,OAAOqB,GAAA,CAAI,MAAM;UAClB;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAYAG,KAAA,EAAO,SAASC,UAAUX,CAAA,EAAGY,OAAA,EAAS;YACrCA,OAAA,GAAUA,OAAA,IAAW,CAAC;YAEtB,IAAIF,KAAA;YAAO,IAAIG,EAAA;YACf,QAAQzB,CAAA,CAAEC,IAAA,CAAKI,IAAA,CAAKO,CAAC;cACpB,KAAK;gBACJa,EAAA,GAAKzB,CAAA,CAAEC,IAAA,CAAKiB,KAAA,CAAMN,CAAC;gBACnB,IAAIY,OAAA,CAAQC,EAAE,GAAG;kBAChB,OAAOD,OAAA,CAAQC,EAAE;gBAClB;gBACAH,KAAA;gBAA4C,CAAC;gBAC7CE,OAAA,CAAQC,EAAE,IAAIH,KAAA;gBAEd,SAASI,GAAA,IAAOd,CAAA,EAAG;kBAClB,IAAIA,CAAA,CAAEe,cAAA,CAAeD,GAAG,GAAG;oBAC1BJ,KAAA,CAAMI,GAAG,IAAIH,SAAA,CAAUX,CAAA,CAAEc,GAAG,GAAGF,OAAO;kBACvC;gBACD;gBAEA;kBAA2BF;gBAAA;cAE5B,KAAK;gBACJG,EAAA,GAAKzB,CAAA,CAAEC,IAAA,CAAKiB,KAAA,CAAMN,CAAC;gBACnB,IAAIY,OAAA,CAAQC,EAAE,GAAG;kBAChB,OAAOD,OAAA,CAAQC,EAAE;gBAClB;gBACAH,KAAA,GAAQ,EAAC;gBACTE,OAAA,CAAQC,EAAE,IAAIH,KAAA;gBAEd;gBAAA;gBAAyCV,CAAA,CAAKgB,OAAA,CAAQ,UAAUC,CAAA,EAAGC,CAAA,EAAG;kBACrER,KAAA,CAAMQ,CAAC,IAAIP,SAAA,CAAUM,CAAA,EAAGL,OAAO;gBAChC,CAAC;gBAED;kBAA2BF;gBAAA;cAE5B;gBACC,OAAOV,CAAA;YACT;UACD;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAUAmB,WAAA,EAAa,SAAAA,CAAUC,OAAA,EAAS;YAC/B,OAAOA,OAAA,EAAS;cACf,IAAIC,CAAA,GAAIpC,IAAA,CAAKqC,IAAA,CAAKF,OAAA,CAAQG,SAAS;cACnC,IAAIF,CAAA,EAAG;gBACN,OAAOA,CAAA,CAAE,CAAC,EAAEG,WAAA,CAAY;cACzB;cACAJ,OAAA,GAAUA,OAAA,CAAQK,aAAA;YACnB;YACA,OAAO;UACR;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UASAC,WAAA,EAAa,SAAAA,CAAUN,OAAA,EAASO,QAAA,EAAU;YAGzCP,OAAA,CAAQG,SAAA,GAAYH,OAAA,CAAQG,SAAA,CAAUxB,OAAA,CAAQ6B,MAAA,CAAO3C,IAAA,EAAM,IAAI,GAAG,EAAE;YAIpEmC,OAAA,CAAQS,SAAA,CAAUC,GAAA,CAAI,cAAcH,QAAQ;UAC7C;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAqBAI,QAAA,EAAU,SAAAA,CAAUX,OAAA,EAASG,SAAA,EAAWS,iBAAA,EAAmB;YAC1D,IAAIC,EAAA,GAAK,QAAQV,SAAA;YAEjB,OAAOH,OAAA,EAAS;cACf,IAAIS,SAAA,GAAYT,OAAA,CAAQS,SAAA;cACxB,IAAIA,SAAA,CAAUK,QAAA,CAASX,SAAS,GAAG;gBAClC,OAAO;cACR;cACA,IAAIM,SAAA,CAAUK,QAAA,CAASD,EAAE,GAAG;gBAC3B,OAAO;cACR;cACAb,OAAA,GAAUA,OAAA,CAAQK,aAAA;YACnB;YACA,OAAO,CAAC,CAACO,iBAAA;UACV;QACD;QAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QASAG,SAAA,EAAW;UAAA;AAAA;AAAA;UAIVC,KAAA,EAAOjD,gBAAA;UACPkD,SAAA,EAAWlD,gBAAA;UACXmD,IAAA,EAAMnD,gBAAA;UACNoD,GAAA,EAAKpD,gBAAA;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UA8BLqD,MAAA,EAAQ,SAAAA,CAAU3B,EAAA,EAAI4B,KAAA,EAAO;YAC5B,IAAIC,KAAA,GAAOtD,CAAA,CAAEC,IAAA,CAAKqB,KAAA,CAAMtB,CAAA,CAAE+C,SAAA,CAAUtB,EAAE,CAAC;YAEvC,SAASC,GAAA,IAAO2B,KAAA,EAAO;cACtBC,KAAA,CAAK5B,GAAG,IAAI2B,KAAA,CAAM3B,GAAG;YACtB;YAEA,OAAO4B,KAAA;UACR;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UA6EAC,YAAA,EAAc,SAAAA,CAAUC,MAAA,EAAQC,MAAA,EAAQC,MAAA,EAAQC,IAAA,EAAM;YACrDA,IAAA,GAAOA,IAAA;YAA4B3D,CAAA,CAAE+C,SAAA;YACrC,IAAIa,OAAA,GAAUD,IAAA,CAAKH,MAAM;YAEzB,IAAIK,GAAA,GAAM,CAAC;YAEX,SAASC,KAAA,IAASF,OAAA,EAAS;cAC1B,IAAIA,OAAA,CAAQjC,cAAA,CAAemC,KAAK,GAAG;gBAElC,IAAIA,KAAA,IAASL,MAAA,EAAQ;kBACpB,SAASM,QAAA,IAAYL,MAAA,EAAQ;oBAC5B,IAAIA,MAAA,CAAO/B,cAAA,CAAeoC,QAAQ,GAAG;sBACpCF,GAAA,CAAIE,QAAQ,IAAIL,MAAA,CAAOK,QAAQ;oBAChC;kBACD;gBACD;gBAGA,IAAI,CAACL,MAAA,CAAO/B,cAAA,CAAemC,KAAK,GAAG;kBAClCD,GAAA,CAAIC,KAAK,IAAIF,OAAA,CAAQE,KAAK;gBAC3B;cACD;YACD;YAEA,IAAIE,GAAA,GAAML,IAAA,CAAKH,MAAM;YACrBG,IAAA,CAAKH,MAAM,IAAIK,GAAA;YAGf7D,CAAA,CAAE+C,SAAA,CAAUkB,GAAA,CAAIjE,CAAA,CAAE+C,SAAA,EAAW,UAAUrB,GAAA,EAAKL,KAAA,EAAO;cAClD,IAAIA,KAAA,KAAU2C,GAAA,IAAOtC,GAAA,IAAO8B,MAAA,EAAQ;gBACnC,KAAK9B,GAAG,IAAImC,GAAA;cACb;YACD,CAAC;YAED,OAAOA,GAAA;UACR;UAAA;UAGAI,GAAA,EAAK,SAASA,IAAIrD,CAAA,EAAGsD,QAAA,EAAU7D,IAAA,EAAMmB,OAAA,EAAS;YAC7CA,OAAA,GAAUA,OAAA,IAAW,CAAC;YAEtB,IAAIN,KAAA,GAAQlB,CAAA,CAAEC,IAAA,CAAKiB,KAAA;YAEnB,SAASY,CAAA,IAAKlB,CAAA,EAAG;cAChB,IAAIA,CAAA,CAAEe,cAAA,CAAeG,CAAC,GAAG;gBACxBoC,QAAA,CAASlD,IAAA,CAAKJ,CAAA,EAAGkB,CAAA,EAAGlB,CAAA,CAAEkB,CAAC,GAAGzB,IAAA,IAAQyB,CAAC;gBAEnC,IAAIqC,QAAA,GAAWvD,CAAA,CAAEkB,CAAC;gBAClB,IAAIsC,YAAA,GAAepE,CAAA,CAAEC,IAAA,CAAKI,IAAA,CAAK8D,QAAQ;gBAEvC,IAAIC,YAAA,KAAiB,YAAY,CAAC5C,OAAA,CAAQN,KAAA,CAAMiD,QAAQ,CAAC,GAAG;kBAC3D3C,OAAA,CAAQN,KAAA,CAAMiD,QAAQ,CAAC,IAAI;kBAC3BF,GAAA,CAAIE,QAAA,EAAUD,QAAA,EAAU,MAAM1C,OAAO;gBACtC,WAAW4C,YAAA,KAAiB,WAAW,CAAC5C,OAAA,CAAQN,KAAA,CAAMiD,QAAQ,CAAC,GAAG;kBACjE3C,OAAA,CAAQN,KAAA,CAAMiD,QAAQ,CAAC,IAAI;kBAC3BF,GAAA,CAAIE,QAAA,EAAUD,QAAA,EAAUpC,CAAA,EAAGN,OAAO;gBACnC;cACD;YACD;UACD;QACD;QAEA6C,OAAA,EAAS,CAAC;QAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QAsBVC,SAAA,EAAW,SAAAA,CAAUpB,IAAA,EAAMU,OAAA,EAASrB,QAAA,EAAU;UAC7C,IAAIgC,GAAA,GAAM;YACTC,IAAA,EAAMtB,IAAA;YACNU,OAAA;YACArB;UACD;UACAvC,CAAA,CAAEyE,KAAA,CAAMC,GAAA,CAAI,mBAAmBH,GAAG;UAClC,IAAI,CAACA,GAAA,CAAIX,OAAA,EAAS;YACjB,MAAM,IAAIe,KAAA,CAAM,mBAAmBJ,GAAA,CAAIhC,QAAA,GAAW,mBAAmB;UACtE;UACAgC,GAAA,CAAIpE,MAAA,GAASH,CAAA,CAAE4E,QAAA,CAASL,GAAA,CAAIC,IAAA,EAAMD,GAAA,CAAIX,OAAO;UAC7C5D,CAAA,CAAEyE,KAAA,CAAMC,GAAA,CAAI,kBAAkBH,GAAG;UACjC,OAAOnE,KAAA,CAAMyE,SAAA,CAAU7E,CAAA,CAAEC,IAAA,CAAKC,MAAA,CAAOqE,GAAA,CAAIpE,MAAM,GAAGoE,GAAA,CAAIhC,QAAQ;QAC/D;QAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QA0BAqC,QAAA,EAAU,SAAAA,CAAU1B,IAAA,EAAMU,OAAA,EAAS;UAClC,IAAIkB,IAAA,GAAOlB,OAAA,CAAQkB,IAAA;UACnB,IAAIA,IAAA,EAAM;YACT,SAAShB,KAAA,IAASgB,IAAA,EAAM;cACvBlB,OAAA,CAAQE,KAAK,IAAIgB,IAAA,CAAKhB,KAAK;YAC5B;YAEA,OAAOF,OAAA,CAAQkB,IAAA;UAChB;UAEA,IAAIC,SAAA,GAAY,IAAIC,UAAA,CAAW;UAC/BC,QAAA,CAASF,SAAA,EAAWA,SAAA,CAAUG,IAAA,EAAMhC,IAAI;UAExCiC,YAAA,CAAajC,IAAA,EAAM6B,SAAA,EAAWnB,OAAA,EAASmB,SAAA,CAAUG,IAAA,EAAM,CAAC;UAExD,OAAOE,OAAA,CAAQL,SAAS;QACzB;QAAA;AAAA;AAAA;AAAA;AAAA;QAOAN,KAAA,EAAO;UACNY,GAAA,EAAK,CAAC;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAcN3C,GAAA,EAAK,SAAAA,CAAU4C,IAAA,EAAMpB,QAAA,EAAU;YAC9B,IAAIqB,MAAA,GAAQvF,CAAA,CAAEyE,KAAA,CAAMY,GAAA;YAEpBE,MAAA,CAAMD,IAAI,IAAIC,MAAA,CAAMD,IAAI,KAAK,EAAC;YAE9BC,MAAA,CAAMD,IAAI,EAAEE,IAAA,CAAKtB,QAAQ;UAC1B;UAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;UAWAQ,GAAA,EAAK,SAAAA,CAAUY,IAAA,EAAMf,GAAA,EAAK;YACzB,IAAIkB,SAAA,GAAYzF,CAAA,CAAEyE,KAAA,CAAMY,GAAA,CAAIC,IAAI;YAEhC,IAAI,CAACG,SAAA,IAAa,CAACA,SAAA,CAAUC,MAAA,EAAQ;cACpC;YACD;YAEA,SAAS5D,CAAA,GAAI,GAAGoC,QAAA,EAAWA,QAAA,GAAWuB,SAAA,CAAU3D,CAAA,EAAG,IAAK;cACvDoC,QAAA,CAASK,GAAG;YACb;UACD;QACD;QAEAnE;MACD;MAkBA,SAASA,MAAMC,IAAA,EAAMC,OAAA,EAASC,KAAA,EAAOoF,UAAA,EAAY;QAUhD,KAAKtF,IAAA,GAAOA,IAAA;QASZ,KAAKC,OAAA,GAAUA,OAAA;QAQf,KAAKC,KAAA,GAAQA,KAAA;QAEb,KAAKmF,MAAA,IAAUC,UAAA,IAAc,IAAID,MAAA,GAAS;MAC3C;MA8BAtF,KAAA,CAAMyE,SAAA,GAAY,SAASA,UAAUjE,CAAA,EAAG2B,QAAA,EAAU;QACjD,IAAI,OAAO3B,CAAA,IAAK,UAAU;UACzB,OAAOA,CAAA;QACR;QACA,IAAIJ,KAAA,CAAMC,OAAA,CAAQG,CAAC,GAAG;UACrB,IAAIgF,CAAA,GAAI;UACRhF,CAAA,CAAEgB,OAAA,CAAQ,UAAUiE,CAAA,EAAG;YACtBD,CAAA,IAAKf,SAAA,CAAUgB,CAAA,EAAGtD,QAAQ;UAC3B,CAAC;UACD,OAAOqD,CAAA;QACR;QAEA,IAAIrB,GAAA,GAAM;UACTlE,IAAA,EAAMO,CAAA,CAAEP,IAAA;UACRC,OAAA,EAASuE,SAAA,CAAUjE,CAAA,CAAEN,OAAA,EAASiC,QAAQ;UACtCuD,GAAA,EAAK;UACLC,OAAA,EAAS,CAAC,SAASnF,CAAA,CAAEP,IAAI;UACzB2F,UAAA,EAAY,CAAC;UACbzD;QACD;QAEA,IAAI0D,OAAA,GAAUrF,CAAA,CAAEL,KAAA;QAChB,IAAI0F,OAAA,EAAS;UACZ,IAAIzF,KAAA,CAAMC,OAAA,CAAQwF,OAAO,GAAG;YAC3BzF,KAAA,CAAMM,SAAA,CAAU0E,IAAA,CAAKU,KAAA,CAAM3B,GAAA,CAAIwB,OAAA,EAASE,OAAO;UAChD,OAAO;YACN1B,GAAA,CAAIwB,OAAA,CAAQP,IAAA,CAAKS,OAAO;UACzB;QACD;QAEAjG,CAAA,CAAEyE,KAAA,CAAMC,GAAA,CAAI,QAAQH,GAAG;QAEvB,IAAIyB,UAAA,GAAa;QACjB,SAASV,IAAA,IAAQf,GAAA,CAAIyB,UAAA,EAAY;UAChCA,UAAA,IAAc,MAAMV,IAAA,GAAO,QAAQf,GAAA,CAAIyB,UAAA,CAAWV,IAAI,KAAK,IAAI3E,OAAA,CAAQ,MAAM,QAAQ,IAAI;QAC1F;QAEA,OAAO,MAAM4D,GAAA,CAAIuB,GAAA,GAAM,aAAavB,GAAA,CAAIwB,OAAA,CAAQI,IAAA,CAAK,GAAG,IAAI,MAAMH,UAAA,GAAa,MAAMzB,GAAA,CAAIjE,OAAA,GAAU,OAAOiE,GAAA,CAAIuB,GAAA,GAAM;MACrH;MASA,SAASM,aAAaC,OAAA,EAASC,GAAA,EAAKpD,IAAA,EAAMqD,UAAA,EAAY;QACrDF,OAAA,CAAQG,SAAA,GAAYF,GAAA;QACpB,IAAIG,KAAA,GAAQJ,OAAA,CAAQnE,IAAA,CAAKgB,IAAI;QAC7B,IAAIuD,KAAA,IAASF,UAAA,IAAcE,KAAA,CAAM,CAAC,GAAG;UAEpC,IAAIC,gBAAA,GAAmBD,KAAA,CAAM,CAAC,EAAEf,MAAA;UAChCe,KAAA,CAAME,KAAA,IAASD,gBAAA;UACfD,KAAA,CAAM,CAAC,IAAIA,KAAA,CAAM,CAAC,EAAExF,KAAA,CAAMyF,gBAAgB;QAC3C;QACA,OAAOD,KAAA;MACR;MAgBA,SAAStB,aAAajC,IAAA,EAAM6B,SAAA,EAAWnB,OAAA,EAASgD,SAAA,EAAWC,QAAA,EAAUC,OAAA,EAAS;QAC7E,SAAShD,KAAA,IAASF,OAAA,EAAS;UAC1B,IAAI,CAACA,OAAA,CAAQjC,cAAA,CAAemC,KAAK,KAAK,CAACF,OAAA,CAAQE,KAAK,GAAG;YACtD;UACD;UAEA,IAAIiD,QAAA,GAAWnD,OAAA,CAAQE,KAAK;UAC5BiD,QAAA,GAAWvG,KAAA,CAAMC,OAAA,CAAQsG,QAAQ,IAAIA,QAAA,GAAW,CAACA,QAAQ;UAEzD,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAID,QAAA,CAASrB,MAAA,EAAQ,EAAEsB,CAAA,EAAG;YACzC,IAAIF,OAAA,IAAWA,OAAA,CAAQG,KAAA,IAASnD,KAAA,GAAQ,MAAMkD,CAAA,EAAG;cAChD;YACD;YAEA,IAAIE,UAAA,GAAaH,QAAA,CAASC,CAAC;YAC3B,IAAIxD,MAAA,GAAS0D,UAAA,CAAW1D,MAAA;YACxB,IAAI+C,UAAA,GAAa,CAAC,CAACW,UAAA,CAAWX,UAAA;YAC9B,IAAIY,MAAA,GAAS,CAAC,CAACD,UAAA,CAAWC,MAAA;YAC1B,IAAI5G,KAAA,GAAQ2G,UAAA,CAAW3G,KAAA;YAEvB,IAAI4G,MAAA,IAAU,CAACD,UAAA,CAAWb,OAAA,CAAQe,MAAA,EAAQ;cAEzC,IAAIC,KAAA,GAAQH,UAAA,CAAWb,OAAA,CAAQtF,QAAA,CAAS,EAAE0F,KAAA,CAAM,WAAW,EAAE,CAAC;cAC9DS,UAAA,CAAWb,OAAA,GAAU7D,MAAA,CAAO0E,UAAA,CAAWb,OAAA,CAAQiB,MAAA,EAAQD,KAAA,GAAQ,GAAG;YACnE;YAGA,IAAIhB,OAAA,GAAUa,UAAA,CAAWb,OAAA,IAAWa,UAAA;YAEpC,SACKK,WAAA,GAAcX,SAAA,CAAUY,IAAA,EAAMlB,GAAA,GAAMO,QAAA,EACxCU,WAAA,KAAgBxC,SAAA,CAAU0C,IAAA,EAC1BnB,GAAA,IAAOiB,WAAA,CAAYlG,KAAA,CAAMqE,MAAA,EAAQ6B,WAAA,GAAcA,WAAA,CAAYC,IAAA,EAC1D;cAED,IAAIV,OAAA,IAAWR,GAAA,IAAOQ,OAAA,CAAQY,KAAA,EAAO;gBACpC;cACD;cAEA,IAAIC,GAAA,GAAMJ,WAAA,CAAYlG,KAAA;cAEtB,IAAI0D,SAAA,CAAUW,MAAA,GAASxC,IAAA,CAAKwC,MAAA,EAAQ;gBAEnC;cACD;cAEA,IAAIiC,GAAA,YAAevH,KAAA,EAAO;gBACzB;cACD;cAEA,IAAIwH,WAAA,GAAc;cAClB,IAAInB,KAAA;cAEJ,IAAIU,MAAA,EAAQ;gBACXV,KAAA,GAAQL,YAAA,CAAaC,OAAA,EAASC,GAAA,EAAKpD,IAAA,EAAMqD,UAAU;gBACnD,IAAI,CAACE,KAAA,IAASA,KAAA,CAAME,KAAA,IAASzD,IAAA,CAAKwC,MAAA,EAAQ;kBACzC;gBACD;gBAEA,IAAImC,IAAA,GAAOpB,KAAA,CAAME,KAAA;gBACjB,IAAImB,EAAA,GAAKrB,KAAA,CAAME,KAAA,GAAQF,KAAA,CAAM,CAAC,EAAEf,MAAA;gBAChC,IAAIqC,CAAA,GAAIzB,GAAA;gBAGRyB,CAAA,IAAKR,WAAA,CAAYlG,KAAA,CAAMqE,MAAA;gBACvB,OAAOmC,IAAA,IAAQE,CAAA,EAAG;kBACjBR,WAAA,GAAcA,WAAA,CAAYC,IAAA;kBAC1BO,CAAA,IAAKR,WAAA,CAAYlG,KAAA,CAAMqE,MAAA;gBACxB;gBAEAqC,CAAA,IAAKR,WAAA,CAAYlG,KAAA,CAAMqE,MAAA;gBACvBY,GAAA,GAAMyB,CAAA;gBAGN,IAAIR,WAAA,CAAYlG,KAAA,YAAiBjB,KAAA,EAAO;kBACvC;gBACD;gBAGA,SACK4H,CAAA,GAAIT,WAAA,EACRS,CAAA,KAAMjD,SAAA,CAAU0C,IAAA,KAASM,CAAA,GAAID,EAAA,IAAM,OAAOE,CAAA,CAAE3G,KAAA,KAAU,WACtD2G,CAAA,GAAIA,CAAA,CAAER,IAAA,EACL;kBACDI,WAAA;kBACAG,CAAA,IAAKC,CAAA,CAAE3G,KAAA,CAAMqE,MAAA;gBACd;gBACAkC,WAAA;gBAGAD,GAAA,GAAMzE,IAAA,CAAKjC,KAAA,CAAMqF,GAAA,EAAKyB,CAAC;gBACvBtB,KAAA,CAAME,KAAA,IAASL,GAAA;cAChB,OAAO;gBACNG,KAAA,GAAQL,YAAA,CAAaC,OAAA,EAAS,GAAGsB,GAAA,EAAKpB,UAAU;gBAChD,IAAI,CAACE,KAAA,EAAO;kBACX;gBACD;cACD;cAGA,IAAIoB,IAAA,GAAOpB,KAAA,CAAME,KAAA;cACjB,IAAIsB,QAAA,GAAWxB,KAAA,CAAM,CAAC;cACtB,IAAIhD,MAAA,GAASkE,GAAA,CAAI1G,KAAA,CAAM,GAAG4G,IAAI;cAC9B,IAAIK,KAAA,GAAQP,GAAA,CAAI1G,KAAA,CAAM4G,IAAA,GAAOI,QAAA,CAASvC,MAAM;cAE5C,IAAIgC,KAAA,GAAQpB,GAAA,GAAMqB,GAAA,CAAIjC,MAAA;cACtB,IAAIoB,OAAA,IAAWY,KAAA,GAAQZ,OAAA,CAAQY,KAAA,EAAO;gBACrCZ,OAAA,CAAQY,KAAA,GAAQA,KAAA;cACjB;cAEA,IAAIS,UAAA,GAAaZ,WAAA,CAAYa,IAAA;cAE7B,IAAI3E,MAAA,EAAQ;gBACX0E,UAAA,GAAalD,QAAA,CAASF,SAAA,EAAWoD,UAAA,EAAY1E,MAAM;gBACnD6C,GAAA,IAAO7C,MAAA,CAAOiC,MAAA;cACf;cAEA2C,WAAA,CAAYtD,SAAA,EAAWoD,UAAA,EAAYP,WAAW;cAE9C,IAAIU,OAAA,GAAU,IAAIlI,KAAA,CAAM0D,KAAA,EAAON,MAAA,GAASxD,CAAA,CAAE4E,QAAA,CAASqD,QAAA,EAAUzE,MAAM,IAAIyE,QAAA,EAAU1H,KAAA,EAAO0H,QAAQ;cAChGV,WAAA,GAActC,QAAA,CAASF,SAAA,EAAWoD,UAAA,EAAYG,OAAO;cAErD,IAAIJ,KAAA,EAAO;gBACVjD,QAAA,CAASF,SAAA,EAAWwC,WAAA,EAAaW,KAAK;cACvC;cAEA,IAAIN,WAAA,GAAc,GAAG;gBAKpB,IAAIW,aAAA,GAAgB;kBACnBtB,KAAA,EAAOnD,KAAA,GAAQ,MAAMkD,CAAA;kBACrBU;gBACD;gBACAvC,YAAA,CAAajC,IAAA,EAAM6B,SAAA,EAAWnB,OAAA,EAAS2D,WAAA,CAAYa,IAAA,EAAM9B,GAAA,EAAKiC,aAAa;gBAG3E,IAAIzB,OAAA,IAAWyB,aAAA,CAAcb,KAAA,GAAQZ,OAAA,CAAQY,KAAA,EAAO;kBACnDZ,OAAA,CAAQY,KAAA,GAAQa,aAAA,CAAcb,KAAA;gBAC/B;cACD;YACD;UACD;QACD;MACD;MAeA,SAAS1C,WAAA,EAAa;QAErB,IAAIE,IAAA,GAAO;UAAE7D,KAAA,EAAO;UAAM+G,IAAA,EAAM;UAAMZ,IAAA,EAAM;QAAK;QAEjD,IAAIC,IAAA,GAAO;UAAEpG,KAAA,EAAO;UAAM+G,IAAA,EAAMlD,IAAA;UAAMsC,IAAA,EAAM;QAAK;QACjDtC,IAAA,CAAKsC,IAAA,GAAOC,IAAA;QAGZ,KAAKvC,IAAA,GAAOA,IAAA;QAEZ,KAAKuC,IAAA,GAAOA,IAAA;QACZ,KAAK/B,MAAA,GAAS;MACf;MAWA,SAAST,SAASuD,IAAA,EAAMC,IAAA,EAAMpH,KAAA,EAAO;QAEpC,IAAImG,IAAA,GAAOiB,IAAA,CAAKjB,IAAA;QAEhB,IAAIkB,OAAA,GAAU;UAAErH,KAAA;UAAc+G,IAAA,EAAMK,IAAA;UAAMjB;QAAW;QACrDiB,IAAA,CAAKjB,IAAA,GAAOkB,OAAA;QACZlB,IAAA,CAAKY,IAAA,GAAOM,OAAA;QACZF,IAAA,CAAK9C,MAAA;QAEL,OAAOgD,OAAA;MACR;MASA,SAASL,YAAYG,IAAA,EAAMC,IAAA,EAAME,KAAA,EAAO;QACvC,IAAInB,IAAA,GAAOiB,IAAA,CAAKjB,IAAA;QAChB,SAAS1F,CAAA,GAAI,GAAGA,CAAA,GAAI6G,KAAA,IAASnB,IAAA,KAASgB,IAAA,CAAKf,IAAA,EAAM3F,CAAA,IAAK;UACrD0F,IAAA,GAAOA,IAAA,CAAKA,IAAA;QACb;QACAiB,IAAA,CAAKjB,IAAA,GAAOA,IAAA;QACZA,IAAA,CAAKY,IAAA,GAAOK,IAAA;QACZD,IAAA,CAAK9C,MAAA,IAAU5D,CAAA;MAChB;MAMA,SAASsD,QAAQoD,IAAA,EAAM;QACtB,IAAII,KAAA,GAAQ,EAAC;QACb,IAAIH,IAAA,GAAOD,IAAA,CAAKtD,IAAA,CAAKsC,IAAA;QACrB,OAAOiB,IAAA,KAASD,IAAA,CAAKf,IAAA,EAAM;UAC1BmB,KAAA,CAAMpD,IAAA,CAAKiD,IAAA,CAAKpH,KAAK;UACrBoH,IAAA,GAAOA,IAAA,CAAKjB,IAAA;QACb;QACA,OAAOoB,KAAA;MACR;MACA,OAAO5I,CAAA;IACR,EAAE;IAEFL,MAAA,CAAOD,OAAA,GAAUE,MAAA;IACjBA,MAAA,CAAMiJ,OAAA,GAAUjJ,MAAA;EAAA;AAAA;;;ACp4BhB,IAAAkJ,KAAA,GAAuBC,OAAA,CAAAxJ,aAAA;AACN,CAAC,UAASsG,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAE;MAAC3C,OAAA,EAAQ;MAAuB9F,KAAA,EAAM;IAAQ;IAAE0I,CAAA,GAAE;IAA6FC,CAAA,GAAE,iBAAeD,CAAA,CAAE3B,MAAA,GAAO;IAAI4B,CAAA,GAAE1G,MAAA,CAAO0G,CAAA,GAAE,MAAIA,CAAC;IAAEC,CAAA,GAAE;MAAC9C,OAAA,EAAQ;MAAwBE,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAU;EAAEsF,CAAA,CAAE9C,SAAA,CAAUqG,KAAA,GAAM;IAAC,cAAa;MAAC/C,OAAA,EAAQ;MAAkDE,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAAC,uBAAsB;UAAC6C,OAAA,EAAQ;UAAUE,UAAA,EAAW;UAAGhG,KAAA,EAAM;QAAU;QAAE,0BAAyB;UAAC8F,OAAA,EAAQ;UAAU9F,KAAA,EAAM;QAAa;QAAE8I,KAAA,EAAM;UAAChD,OAAA,EAAQ6C,CAAA;UAAE1F,MAAA,EAAO;YAAC8F,MAAA,EAAOL,CAAA;YAAE,qBAAoB;cAAC5C,OAAA,EAAQ;cAAI9F,KAAA,EAAM;YAAU;UAAC;QAAC;QAAE,kBAAiByI,CAAA;QAAE,YAAW;UAAC3C,OAAA,EAAQ;UAAyB9F,KAAA,EAAM;QAAY;QAAE+I,MAAA,EAAOL;MAAC;IAAC;IAAE,kBAAiBD,CAAA;IAAE,YAAW;MAAC3C,OAAA,EAAQ;MAA4B9F,KAAA,EAAM;IAAY;IAAEgJ,aAAA,EAAc,CAAC;MAAClD,OAAA,EAAQ;MAA2B9F,KAAA,EAAM;IAAS,GAAE;MAAC8F,OAAA,EAAQ;MAAe9F,KAAA,EAAM;MAAUiD,MAAA,EAAO;QAAC,cAAa2F;MAAC;IAAC,CAAC;IAAEK,MAAA,EAAO;MAACnD,OAAA,EAAQ;MAAkB9F,KAAA,EAAM;IAAU;IAAE+I,MAAA,EAAOL,CAAA;IAAEQ,KAAA,EAAM,CAAC;MAACpD,OAAA,EAAQ;MAA8E9F,KAAA,EAAM;MAAciD,MAAA,EAAO;QAAC,cAAa2F;MAAC;IAAC,GAAE;MAAC9C,OAAA,EAAQ;MAAK9F,KAAA,EAAM;IAAa,CAAC;IAAEmJ,UAAA,EAAW;MAACrD,OAAA,EAAQ;MAAkC9F,KAAA,EAAM;IAAQ;IAAEoJ,WAAA,EAAY;MAACtD,OAAA,EAAQ;MAAK9F,KAAA,EAAM;IAAS;EAAC;AAAC,EAAEuI,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAU6G,KAAA,GAAM;EAACC,OAAA,EAAQ,CAAC;IAACxD,OAAA,EAAQ;IAAkCE,UAAA,EAAW;IAAGY,MAAA,EAAO;EAAE,GAAE;IAACd,OAAA,EAAQ;IAAmBE,UAAA,EAAW;IAAGY,MAAA,EAAO;EAAE,CAAC;EAAE2C,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAiDc,MAAA,EAAO;EAAE;EAAE,cAAa;IAACd,OAAA,EAAQ;IAA2FE,UAAA,EAAW;IAAG/C,MAAA,EAAO;MAACuG,WAAA,EAAY;IAAO;EAAC;EAAEC,OAAA,EAAQ;EAA6GC,OAAA,EAAQ;EAAqBC,QAAA,EAAS;EAAcC,MAAA,EAAO;EAA4DC,QAAA,EAAS;EAA+CL,WAAA,EAAY;AAAe,GAAQjB,KAAA,CAAA/F,SAAA,CAAUsH,UAAA,GAAiBvB,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,SAAQ;EAAC,cAAa,CAAO0F,KAAA,CAAA/F,SAAA,CAAU6G,KAAA,CAAM,YAAY,GAAE;IAACvD,OAAA,EAAQ;IAA0GE,UAAA,EAAW;EAAE,CAAC;EAAEyD,OAAA,EAAQ,CAAC;IAAC3D,OAAA,EAAQ;IAAuBE,UAAA,EAAW;EAAE,GAAE;IAACF,OAAA,EAAQ;IAAmdE,UAAA,EAAW;EAAE,CAAC;EAAE2D,QAAA,EAAS;EAAoGC,MAAA,EAAO;IAAC9D,OAAA,EAAQ7D,MAAA,CAAO,aAAa8E,MAAA,GAAO,QAAM,eAAeA,MAAA,GAAO,MAAI,0BAA0BA,MAAA,GAAO,MAAI,4BAA4BA,MAAA,GAAO,MAAI,sCAAsCA,MAAA,GAAO,MAAI,gBAAgBA,MAAA,GAAO,MAAI,oFAAoFA,MAAA,GAAO,MAAI,YAAYA,MAAM;IAAEf,UAAA,EAAW;EAAE;EAAE6D,QAAA,EAAS;AAA2F,CAAC,GAAQtB,KAAA,CAAA/F,SAAA,CAAUsH,UAAA,CAAW,YAAY,EAAE,CAAC,EAAEhE,OAAA,GAAQ,wEAA6EyC,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,cAAa,WAAU;EAAC6F,KAAA,EAAM;IAAC/C,OAAA,EAAQ7D,MAAA,CAAO,0DAA0D8E,MAAA,GAAO,KAAKA,MAAA,GAAO,QAAM,iEAAiEA,MAAA,GAAO,MAAI,qIAAqIA,MAAA,GAAO,MAAI,kEAAkEA,MAAM;IAAEf,UAAA,EAAW;IAAGY,MAAA,EAAO;IAAG3D,MAAA,EAAO;MAAC,gBAAe;QAAC6C,OAAA,EAAQ;QAA4BE,UAAA,EAAW;QAAGhG,KAAA,EAAM;QAAiBiD,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUqG;MAAK;MAAE,mBAAkB;MAAU,eAAc;IAAU;EAAC;EAAE,qBAAoB;IAAC/C,OAAA,EAAQ;IAAgM9F,KAAA,EAAM;EAAU;EAAE+J,SAAA,EAAU,CAAC;IAACjE,OAAA,EAAQ;IAAsIE,UAAA,EAAW;IAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUsH;EAAU,GAAE;IAAChE,OAAA,EAAQ;IAAqFE,UAAA,EAAW;IAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUsH;EAAU,GAAE;IAAChE,OAAA,EAAQ;IAAkEE,UAAA,EAAW;IAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUsH;EAAU,GAAE;IAAChE,OAAA,EAAQ;IAA8eE,UAAA,EAAW;IAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUsH;EAAU,CAAC;EAAEE,QAAA,EAAS;AAA2B,CAAC,GAAQzB,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,cAAa,UAAS;EAACiH,QAAA,EAAS;IAACnE,OAAA,EAAQ;IAAQc,MAAA,EAAO;IAAG5G,KAAA,EAAM;EAAS;EAAE,mBAAkB;IAAC8F,OAAA,EAAQ;IAA2Ec,MAAA,EAAO;IAAG3D,MAAA,EAAO;MAAC,wBAAuB;QAAC6C,OAAA,EAAQ;QAAQ9F,KAAA,EAAM;MAAQ;MAAEkK,aAAA,EAAc;QAACpE,OAAA,EAAQ;QAAmEE,UAAA,EAAW;QAAG/C,MAAA,EAAO;UAAC,6BAA4B;YAAC6C,OAAA,EAAQ;YAAY9F,KAAA,EAAM;UAAa;UAAEuE,IAAA,EAAWgE,KAAA,CAAA/F,SAAA,CAAUsH;QAAU;MAAC;MAAEP,MAAA,EAAO;IAAS;EAAC;EAAE,mBAAkB;IAACzD,OAAA,EAAQ;IAA4EE,UAAA,EAAW;IAAGY,MAAA,EAAO;IAAG5G,KAAA,EAAM;EAAU;AAAC,CAAC,GAAQuI,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,cAAa,YAAW;EAAC,oBAAmB;IAAC8C,OAAA,EAAQ;IAAoFE,UAAA,EAAW;IAAGhG,KAAA,EAAM;EAAU;AAAC,CAAC,GAAQuI,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,KAAe5B,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,CAAI6E,UAAA,CAAW,UAAS,YAAY,GAAQ7B,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,CAAI8E,YAAA,CAAa,yNAAyNtD,MAAA,EAAO,YAAY,IAASwB,KAAA,CAAA/F,SAAA,CAAU8H,EAAA,GAAS/B,KAAA,CAAA/F,SAAA,CAAUsH,UAAA,EAAiBvB,KAAA,CAAA/F,SAAA,CAAU+H,YAAA,GAAmBhC,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,cAAa;EAAC4G,OAAA,EAAQ;EAAuUI,QAAA,EAAS;AAA2D,CAAC,GAAQtB,KAAA,CAAA/F,SAAA,CAAU+H,YAAA,CAAa,YAAY,EAAEvK,KAAA,GAAM,YAAW,OAAauI,KAAA,CAAA/F,SAAA,CAAU+H,YAAA,CAAaR,SAAA,EAAU,OAAaxB,KAAA,CAAA/F,SAAA,CAAU+H,YAAA,CAAa,kBAAkB,GAAQhC,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,IAAc5B,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,gBAAe,UAAS;EAACwH,GAAA,EAAI;IAAC1E,OAAA,EAAQ;IAA4EE,UAAA,EAAW;IAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAU2H;EAAM;AAAC,CAAC,GAAE,UAAS7E,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAE;IAAYC,CAAA,GAAE;MAAC5C,OAAA,EAAQ;MAAa9F,KAAA,EAAM;IAAU;EAAEsF,CAAA,CAAE9C,SAAA,CAAUiI,YAAA,GAAanF,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,cAAa;IAACyG,OAAA,EAAQb,CAAA;IAAEc,MAAA,EAAO,CAAC;MAACzD,OAAA,EAAQ;MAAyBc,MAAA,EAAO;IAAE,GAAE;MAACd,OAAA,EAAQ;MAAyBc,MAAA,EAAO;MAAG3D,MAAA,EAAO;QAACiH,aAAA,EAAcxB;MAAC;IAAC,CAAC;IAAEe,OAAA,EAAQ;IAAmS,gBAAe;MAAC3D,OAAA,EAAQ;MAAa9F,KAAA,EAAM;IAAU;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,gBAAe,WAAU;IAAC,qBAAoB;MAAC8C,OAAA,EAAQ;MAAiB9F,KAAA,EAAM;IAAS;IAAE,eAAc;MAAC8F,OAAA,EAAQ;MAAqB9F,KAAA,EAAM;MAAQiD,MAAA,EAAO;QAACqG,OAAA,EAAQb,CAAA;QAAEyB,aAAA,EAAcxB;MAAC;IAAC;EAAC,CAAC,GAAEpD,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,gBAAe,UAAS;IAAC,qBAAoB;MAAC8C,OAAA,EAAQ;MAAyB7C,MAAA,EAAO;QAACyH,SAAA,EAAU;UAAC5E,OAAA,EAAQ;UAAQ9F,KAAA,EAAM;QAAa;QAAE2K,MAAA,EAAO;UAAC7E,OAAA,EAAQ;UAAU9F,KAAA,EAAM;UAAsBiD,MAAA,EAAOqC,CAAA,CAAE9C,SAAA,CAAUsH;QAAU;MAAC;IAAC;IAAE,oBAAmB,CAAC;MAAChE,OAAA,EAAQ;MAAiBc,MAAA,EAAO;MAAG5G,KAAA,EAAM;IAAQ,GAAE;MAAC8F,OAAA,EAAQ;MAAiBc,MAAA,EAAO;MAAG5G,KAAA,EAAM;MAASiD,MAAA,EAAO;QAACiH,aAAA,EAAcxB;MAAC;IAAC,CAAC;EAAC,CAAC,GAAEpD,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,gBAAe,WAAU;IAACY,QAAA,EAAS;EAAwB,CAAC,GAAE,OAAO0B,CAAA,CAAE9C,SAAA,CAAUiI,YAAA,CAAa,iBAAiB,GAAEnF,CAAA,CAAE9C,SAAA,CAAUoI,MAAA,GAAOtF,CAAA,CAAE9C,SAAA,CAAUiI,YAAA;AAAY,EAAElC,KAAK,GAAE,UAASsC,CAAA,EAAE;EAAC,IAAIvF,CAAA,GAAEuF,CAAA,CAAErI,SAAA,CAAUsI,WAAA,GAAY;IAACf,SAAA,EAAU;MAACjE,OAAA,EAAQ;MAAiEE,UAAA,EAAW;IAAE;IAAEyD,OAAA,EAAQ;MAAC3D,OAAA,EAAQ;MAAwDE,UAAA,EAAW;IAAE;IAAEwD,WAAA,EAAY;EAAM;EAAElJ,MAAA,CAAOO,cAAA,CAAeyE,CAAA,EAAE,cAAa;IAACxE,KAAA,EAAM,SAAAA,CAASiK,EAAA,EAAE1K,CAAA,EAAE;MAAC,CAAC0K,EAAA,GAAE,YAAU,OAAOA,EAAA,GAAE,CAACA,EAAC,IAAEA,EAAA,EAAG1J,OAAA,CAAQ,UAAS2J,EAAA,EAAE;QAAC,IAAIvC,CAAA,GAAE,SAAAA,CAASwC,EAAA,EAAE;YAACA,EAAA,CAAEhI,MAAA,KAASgI,EAAA,CAAEhI,MAAA,GAAO,CAAC,IAAGgI,EAAA,CAAEhI,MAAA,CAAOsB,IAAA,GAAKlE,CAAA;UAAC;UAAEqI,CAAA,GAAE;QAAc,IAAGC,CAAA,GAAEkC,CAAA,CAAErI,SAAA,CAAUwI,EAAC,GAAE;UAAC,IAAIrC,CAAA;YAAEC,CAAA,GAAED,CAAA,CAAED,CAAC;UAAE,KAAIE,CAAA,GAAEA,CAAA,GAAEA,CAAA,IAAGD,CAAA,GAAEkC,CAAA,CAAErI,SAAA,CAAUQ,YAAA,CAAagI,EAAA,EAAE,WAAU;YAAC,eAAc;cAAClF,OAAA,EAAQ;cAAwCE,UAAA,EAAW;cAAGhG,KAAA,EAAM;YAAS;UAAC,CAAC,GAAG0I,CAAC,cAAazG,MAAA,KAAS2G,CAAA,GAAED,CAAA,CAAED,CAAC,IAAE;YAAC5C,OAAA,EAAQ8C;UAAC,IAAG3I,KAAA,CAAMC,OAAA,CAAQ0I,CAAC,GAAE,SAAQvD,CAAA,GAAE,GAAE9D,CAAA,GAAEqH,CAAA,CAAEzD,MAAA,EAAOE,CAAA,GAAE9D,CAAA,EAAE8D,CAAA,IAAIuD,CAAA,CAAEvD,CAAC,aAAYpD,MAAA,KAAS2G,CAAA,CAAEvD,CAAC,IAAE;YAACS,OAAA,EAAQ8C,CAAA,CAAEvD,CAAC;UAAC,IAAGoD,CAAA,CAAEG,CAAA,CAAEvD,CAAC,CAAC,OAAOoD,CAAA,CAAEG,CAAC;QAAC;MAAC,CAAC;IAAC;EAAC,CAAC,GAAEtD,CAAA,CAAE4F,UAAA,CAAW,CAAC,QAAO,cAAa,KAAK,GAAE5F,CAAC;AAAC,EAAEiD,KAAK,GAAE,UAASjD,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAE;IAA8EA,CAAA,IAAGnD,CAAA,CAAE9C,SAAA,CAAU2I,GAAA,GAAI;MAAC7B,OAAA,EAAQ;MAAmB8B,MAAA,EAAO;QAACtF,OAAA,EAAQ7D,MAAA,CAAO,eAAa,sBAAsB8E,MAAA,GAAO,MAAI0B,CAAA,CAAE1B,MAAA,GAAO,QAAM,kBAAkBA,MAAM;QAAE9D,MAAA,EAAO;UAACoI,IAAA,EAAK;UAAW,8BAA6B;YAACvF,OAAA,EAAQ;YAA4FE,UAAA,EAAW;YAAGhG,KAAA,EAAM;UAAU;UAAEyJ,OAAA,EAAQ;YAAC3D,OAAA,EAAQ;YAAyCE,UAAA,EAAW;UAAE;QAAC;MAAC;MAAEsF,GAAA,EAAI;QAACxF,OAAA,EAAQ7D,MAAA,CAAO,iBAAewG,CAAA,CAAE1B,MAAA,GAAO,MAAI,8BAA8BA,MAAA,GAAO,QAAO,GAAG;QAAEH,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAAC0G,QAAA,EAAS;UAAQH,WAAA,EAAY;UAAUD,MAAA,EAAO;YAACzD,OAAA,EAAQ7D,MAAA,CAAO,MAAIwG,CAAA,CAAE1B,MAAA,GAAO,GAAG;YAAE/G,KAAA,EAAM;UAAK;QAAC;MAAC;MAAEuL,QAAA,EAAS;QAACzF,OAAA,EAAQ7D,MAAA,CAAO,sDAAqDwG,CAAA,CAAE1B,MAAA,GAAO,eAAe;QAAEf,UAAA,EAAW;MAAE;MAAEuD,MAAA,EAAO;QAACzD,OAAA,EAAQ2C,CAAA;QAAE7B,MAAA,EAAO;MAAE;MAAEhD,QAAA,EAAS;QAACkC,OAAA,EAAQ;QAAoFE,UAAA,EAAW;MAAE;MAAEwF,SAAA,EAAU;MAAgB7B,QAAA,EAAS;QAAC7D,OAAA,EAAQ;QAAkCE,UAAA,EAAW;MAAE;MAAEwD,WAAA,EAAY;IAAW,GAAElE,CAAA,CAAE9C,SAAA,CAAU2I,GAAA,CAAIC,MAAA,CAAOnI,MAAA,CAAOsB,IAAA,GAAKe,CAAA,CAAE9C,SAAA,CAAU2I,GAAA,EAAI7F,CAAA,CAAE9C,SAAA,CAAU2H,MAAA;EAAQ1B,CAAA,KAAIA,CAAA,CAAElD,GAAA,CAAI6E,UAAA,CAAW,SAAQ,KAAK,GAAE3B,CAAA,CAAElD,GAAA,CAAI8E,YAAA,CAAa,SAAQ,KAAK;AAAE,EAAE9B,KAAK,GAAE,UAASjD,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAE;IAAgDA,CAAA,IAAGnD,CAAA,CAAE9C,SAAA,CAAU2I,GAAA,CAAII,QAAA,GAAS;MAACzF,OAAA,EAAQR,CAAA,CAAE9C,SAAA,CAAU2I,GAAA,CAAII,QAAA,CAASzF,OAAA;MAAQE,UAAA,EAAW;MAAG/C,MAAA,EAAOwF,CAAA,GAAE;QAAC,kBAAiB;QAA+D,gBAAe;QAAUgD,KAAA,EAAM;QAAWvK,EAAA,EAAG;QAAUwK,SAAA,EAAU;UAAC5F,OAAA,EAAQ7D,MAAA,CAAO,qBAAoBwG,CAAA,CAAE1B,MAAA,GAAO,OAAO;UAAEH,MAAA,EAAO;UAAG3D,MAAA,EAAO;YAACuG,WAAA,EAAY;YAAU,oBAAmB;cAAC1D,OAAA,EAAQ;cAAaE,UAAA,EAAW;cAAGhG,KAAA,EAAM;YAAS;YAAE2L,SAAA,EAAU;cAAC7F,OAAA,EAAQ;cAA4CE,UAAA,EAAW;cAAG/C,MAAA,EAAO;gBAACuG,WAAA,EAAY;cAAK;YAAC;YAAE,aAAY;cAAC1D,OAAA,EAAQ;cAAoCE,UAAA,EAAW;YAAE;YAAE,cAAa,CAACyC,CAAA,EAAE;cAAC3C,OAAA,EAAQ;cAA4CE,UAAA,EAAW;YAAE,CAAC;YAAE6D,QAAA,EAAS;UAAW;QAAC;QAAE,QAAO,CAAC;UAAC/D,OAAA,EAAQ;UAAkDE,UAAA,EAAW;UAAG/C,MAAA,EAAO;YAAC2G,MAAA,EAAO;YAASC,QAAA,EAAS;UAAM;QAAC,GAAE;UAAC/D,OAAA,EAAQ;UAAgCE,UAAA,EAAW;QAAE,CAAC;QAAE4F,UAAA,EAAW;QAAcpC,WAAA,EAAY;MAAO;IAAC,GAAElE,CAAA,CAAE9C,SAAA,CAAU2I,GAAA,CAAIC,MAAA,CAAOnI,MAAA,CAAO,4BAA4B,EAAEA,MAAA,GAAOwF,CAAA,EAAEnD,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,OAAM,YAAW;MAAC6I,QAAA,EAAS;QAAC/F,OAAA,EAAQ;QAA8EE,UAAA,EAAW;MAAE;IAAC,CAAC,GAAE;MAACF,OAAA,EAAQ;MAA+BE,UAAA,EAAW;IAAE;IAAG0C,CAAA,GAAE;MAAC5C,OAAA,EAAQ;MAAuCE,UAAA,EAAW;IAAE;EAAEV,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,OAAM,YAAW;IAAC6G,QAAA,EAAS;MAAC/D,OAAA,EAAQ;MAAqBE,UAAA,EAAW;IAAE;IAAE8F,OAAA,EAAQ;MAAChG,OAAA,EAAQ;MAAqB9F,KAAA,EAAM;IAAO;IAAE+L,KAAA,EAAM,CAAC;MAACjG,OAAA,EAAQ;MAAk7CE,UAAA,EAAW;IAAE,GAAE;MAACF,OAAA,EAAQ;MAA4J7C,MAAA,EAAO;QAAC+I,IAAA,EAAKvD,CAAA;QAAEmB,MAAA,EAAOlB,CAAA;QAAEiB,QAAA,EAAS;QAAeH,WAAA,EAAY;MAAO;IAAC,CAAC;IAAEyC,MAAA,EAAO;IAAkBD,IAAA,EAAKvD,CAAA;IAAEmB,MAAA,EAAOlB;EAAC,CAAC;AAAC,EAAEH,KAAK,GAAE,UAASjD,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAE;IAAmBC,CAAA,GAAE;IAAmFC,CAAA,GAAE,QAAMD,CAAA,CAAE3B,MAAA,GAAO,aAAY0B,CAAA,CAAE1B,MAAA,GAAO,QAAM0B,CAAA,CAAE1B,MAAA,GAAO,aAAY2B,CAAA,CAAE3B,MAAA,GAAO;IAAM6B,CAAA,GAAE,kJAAkJ7B,MAAA,CAAO3G,OAAA,CAAQ,YAAW,YAAU;MAAC,OAAM,2EAA2E2G,MAAA;IAAM,CAAC;IAAE1B,CAAA,GAAE,8CAA8C0B,MAAA;EAAO,SAASxF,EAAEwJ,EAAA,EAAEmB,EAAA,EAAE;IAACA,EAAA,IAAGA,EAAA,IAAG,IAAI9L,OAAA,CAAQ,MAAK,EAAE,IAAE;IAAI,IAAI+L,EAAA,GAAE,yFAAyFpF,MAAA,CAAO3G,OAAA,CAAQ,aAAY,YAAU;MAAC,OAAOuI,CAAA;IAAC,CAAC,EAAEvI,OAAA,CAAQ,cAAa,YAAU;MAAC,OAAO2K,EAAA;IAAC,CAAC;IAAE,OAAO9I,MAAA,CAAOkK,EAAA,EAAED,EAAC;EAAC;EAAC5G,CAAA,CAAE9C,SAAA,CAAU4J,IAAA,GAAK;IAACC,MAAA,EAAO;MAACvG,OAAA,EAAQ7D,MAAA,CAAO,6FAA6F8E,MAAA,CAAO3G,OAAA,CAAQ,aAAY,YAAU;QAAC,OAAOuI,CAAA;MAAC,CAAC,CAAC;MAAE3C,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAQ;IAAEsJ,OAAA,EAAQ;IAAMnI,GAAA,EAAI;MAAC2E,OAAA,EAAQ7D,MAAA,CAAO,kEAAkE8E,MAAA,CAAO3G,OAAA,CAAQ,aAAY,YAAU;QAAC,OAAOuI,CAAA;MAAC,CAAC,EAAEvI,OAAA,CAAQ,YAAW,YAAU;QAAC,OAAM,QAAMwI,CAAA,GAAE,MAAIvD,CAAA,GAAE;MAAG,CAAC,CAAC;MAAEW,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG5G,KAAA,EAAM;IAAQ;IAAEsM,SAAA,EAAU;MAACxG,OAAA,EAAQ;MAAgBE,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAW;IAAEuM,QAAA,EAAS;MAACzG,OAAA,EAAQvE,CAAA,CAAE,sJAAsJwF,MAAM;MAAEf,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAQ;IAAE0J,OAAA,EAAQ;MAAC5D,OAAA,EAAQvE,CAAA,CAAE,aAAawF,MAAA,EAAO,GAAG;MAAEf,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAW;IAAEwM,IAAA,EAAK;MAAC1G,OAAA,EAAQvE,CAAA,CAAE,SAASwF,MAAA,EAAO,GAAG;MAAEf,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAW;IAAEuJ,MAAA,EAAO;MAACzD,OAAA,EAAQvE,CAAA,CAAE8D,CAAC;MAAEW,UAAA,EAAW;MAAGY,MAAA,EAAO;IAAE;IAAEgD,MAAA,EAAO;MAAC9D,OAAA,EAAQvE,CAAA,CAAE,iFAAiFwF,MAAA,EAAO,GAAG;MAAEf,UAAA,EAAW;IAAE;IAAET,GAAA,EAAImD,CAAA;IAAE8C,SAAA,EAAU/C,CAAA;IAAEe,WAAA,EAAY;EAA2B,GAAElE,CAAA,CAAE9C,SAAA,CAAUiK,GAAA,GAAInH,CAAA,CAAE9C,SAAA,CAAU4J,IAAA;AAAI,EAAE7D,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,GAAO;EAACb,OAAA,EAAQ;IAACxD,OAAA,EAAQ;IAA8Bc,MAAA,EAAO;EAAE;EAAE8F,MAAA,EAAO;IAAC5G,OAAA,EAAQ;IAAiBc,MAAA,EAAO;EAAE;EAAE+F,OAAA,EAAQ;IAAC7G,OAAA,EAAQ;IAAuHc,MAAA,EAAO;IAAG3D,MAAA,EAAO;MAAC,mBAAkB;QAAC6C,OAAA,EAAQ;QAA6BE,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG3D,MAAA,EAAO;MAAI;MAAEsG,MAAA,EAAO;QAACzD,OAAA,EAAQ;QAAkBc,MAAA,EAAO;MAAE;MAAE4C,WAAA,EAAY;MAAe,eAAc;MAAYzE,IAAA,EAAK;IAAY;EAAC;EAAE6H,KAAA,EAAM;IAAC9G,OAAA,EAAQ;IAA4Bc,MAAA,EAAO;EAAE;EAAErB,GAAA,EAAI;IAACO,OAAA,EAAQ;IAAuHc,MAAA,EAAO;IAAG3D,MAAA,EAAO;MAACsC,GAAA,EAAI;QAACO,OAAA,EAAQ;QAAiB7C,MAAA,EAAO;UAACuG,WAAA,EAAY;UAAQmC,SAAA,EAAU;QAAc;MAAC;MAAE,gBAAe,EAAC;MAAE,cAAa;QAAC7F,OAAA,EAAQ;QAAqC7C,MAAA,EAAO;UAACuG,WAAA,EAAY,CAAC;YAAC1D,OAAA,EAAQ;YAAK9F,KAAA,EAAM;UAAa,GAAE;YAAC8F,OAAA,EAAQ;YAAmBE,UAAA,EAAW;UAAE,CAAC;QAAC;MAAC;MAAEwD,WAAA,EAAY;MAAO,aAAY;QAAC1D,OAAA,EAAQ;QAAY7C,MAAA,EAAO;UAAC0I,SAAA,EAAU;QAAc;MAAC;IAAC;EAAC;EAAEM,MAAA,EAAO,CAAC;IAACnG,OAAA,EAAQ;IAAkB9F,KAAA,EAAM;EAAc,GAAE,oBAAoB;AAAC,GAAQuI,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,CAAItC,MAAA,CAAO,YAAY,EAAEA,MAAA,CAAOgJ,MAAA,GAAa1D,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO8B,MAAA,EAAa1D,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAOwC,OAAA,CAAQ1J,MAAA,CAAO,iBAAiB,EAAEA,MAAA,GAAasF,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,EAAa5B,KAAA,CAAArE,KAAA,CAAM/B,GAAA,CAAI,QAAO,UAASmD,CAAA,EAAE;EAAC,aAAWA,CAAA,CAAExF,IAAA,KAAOwF,CAAA,CAAEG,UAAA,CAAWoH,KAAA,GAAMvH,CAAA,CAAEvF,OAAA,CAAQK,OAAA,CAAQ,SAAQ,GAAG;AAAE,CAAC,GAAEE,MAAA,CAAOO,cAAA,CAAqB0H,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,EAAI,cAAa;EAACzE,KAAA,EAAM,SAAAA,CAASwE,CAAA,EAAEmD,CAAA,EAAE;IAAC,IAAIC,CAAA,GAAE,CAAC;MAAEA,CAAA,IAAGA,CAAA,CAAE,cAAYD,CAAC,IAAE;QAAC3C,OAAA,EAAQ;QAAoCE,UAAA,EAAW;QAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUiG,CAAC;MAAC,GAAEC,CAAA,CAAEkE,KAAA,GAAM,wBAAuB;QAAC,kBAAiB;UAAC9G,OAAA,EAAQ;UAA4B7C,MAAA,EAAOyF;QAAC;MAAC;MAAGD,CAAA,IAAGC,CAAA,CAAE,cAAYD,CAAC,IAAE;QAAC3C,OAAA,EAAQ;QAAU7C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUiG,CAAC;MAAC,GAAE,CAAC;IAAGA,CAAA,CAAEnD,CAAC,IAAE;MAACQ,OAAA,EAAQ7D,MAAA,CAAO,wFAAwF8E,MAAA,CAAO3G,OAAA,CAAQ,OAAM,YAAU;QAAC,OAAOkF,CAAA;MAAC,CAAC,GAAE,GAAG;MAAEU,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG3D,MAAA,EAAOyF;IAAC,GAAQH,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,UAAS,SAAQyF,CAAC;EAAC;AAAC,CAAC,GAAEnI,MAAA,CAAOO,cAAA,CAAqB0H,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,EAAI,gBAAe;EAACzE,KAAA,EAAM,SAAAA,CAASwE,CAAA,EAAEmD,CAAA,EAAE;IAAOF,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,CAAItC,MAAA,CAAO,cAAc,EAAEgC,IAAA,CAAK;MAACa,OAAA,EAAQ7D,MAAA,CAAO,aAAa8E,MAAA,GAAO,QAAMzB,CAAA,GAAE,MAAI,iDAAiDyB,MAAA,EAAO,GAAG;MAAEf,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAAC,aAAY;QAAW,cAAa;UAAC6C,OAAA,EAAQ;UAAW7C,MAAA,EAAO;YAACnC,KAAA,EAAM;cAACgF,OAAA,EAAQ;cAAyCE,UAAA,EAAW;cAAGhG,KAAA,EAAM,CAACyI,CAAA,EAAE,cAAYA,CAAC;cAAExF,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUiG,CAAC;YAAC;YAAEe,WAAA,EAAY,CAAC;cAAC1D,OAAA,EAAQ;cAAK9F,KAAA,EAAM;YAAa,GAAE,KAAK;UAAC;QAAC;MAAC;IAAC,CAAC;EAAC;AAAC,CAAC,GAAQuI,KAAA,CAAA/F,SAAA,CAAUsK,IAAA,GAAWvE,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,EAAa5B,KAAA,CAAA/F,SAAA,CAAUuK,MAAA,GAAaxE,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,EAAa5B,KAAA,CAAA/F,SAAA,CAAUwK,GAAA,GAAUzE,KAAA,CAAA/F,SAAA,CAAU2H,MAAA,EAAa5B,KAAA,CAAA/F,SAAA,CAAUgI,GAAA,GAAUjC,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,UAAS,CAAC,CAAC,GAAQ0F,KAAA,CAAA/F,SAAA,CAAUyK,IAAA,GAAW1E,KAAA,CAAA/F,SAAA,CAAUgI,GAAA,EAAUjC,KAAA,CAAA/F,SAAA,CAAU0K,IAAA,GAAW3E,KAAA,CAAA/F,SAAA,CAAUgI,GAAA,EAAUjC,KAAA,CAAA/F,SAAA,CAAU2K,GAAA,GAAU5E,KAAA,CAAA/F,SAAA,CAAUgI,GAAA,EAAI,UAASnK,CAAA,EAAE;EAAC,IAAIoI,CAAA,GAAE,2CAA2C1B,MAAA;EAAO,SAASzB,EAAEyF,EAAA,EAAE;IAAC,OAAOA,EAAA,GAAEA,EAAA,CAAE3K,OAAA,CAAQ,YAAW,YAAU;MAAC,OAAOqI,CAAA;IAAC,CAAC,GAAExG,MAAA,CAAO,0BAA0B8E,MAAA,GAAO,QAAMgE,EAAA,GAAE,GAAG;EAAC;EAAC,IAAIrC,CAAA,GAAE,4DAA4D3B,MAAA;IAAO4B,CAAA,GAAE,+CAA+C5B,MAAA,CAAO3G,OAAA,CAAQ,OAAM,YAAU;MAAC,OAAOsI,CAAA;IAAC,CAAC;IAAEE,CAAA,GAAE,sEAAsE7B,MAAA;IAAO8D,CAAA,IAAGxK,CAAA,CAAEmC,SAAA,CAAU4K,QAAA,GAAS/M,CAAA,CAAEmC,SAAA,CAAUK,MAAA,CAAO,UAAS,CAAC,CAAC,GAAExC,CAAA,CAAEmC,SAAA,CAAUQ,YAAA,CAAa,YAAW,UAAS;MAAC,sBAAqB;QAAC8C,OAAA,EAAQ;QAAkDE,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAACuG,WAAA,EAAY;UAAY,gBAAe;YAAC1D,OAAA,EAAQ;YAAiB9F,KAAA,EAAM,CAAC,QAAO,eAAe;YAAEiD,MAAA,EAAO5C,CAAA,CAAEmC,SAAA,CAAU4J;UAAI;QAAC;MAAC;MAAEiB,UAAA,EAAW;QAACvH,OAAA,EAAQ;QAAkB9F,KAAA,EAAM;MAAa;MAAEsN,KAAA,EAAM;QAACxH,OAAA,EAAQ7D,MAAA,CAAO,MAAI0G,CAAA,GAAEC,CAAA,GAAE,QAAMD,CAAA,GAAE,MAAK,GAAG;QAAE1F,MAAA,EAAO;UAAC,mBAAkB;YAAC6C,OAAA,EAAQ7D,MAAA,CAAO,OAAK0G,CAAA,GAAEC,CAAA,GAAE,SAAOD,CAAA,GAAE,KAAK;YAAE3C,UAAA,EAAW;YAAG/C,MAAA,EAAO;cAAC,cAAa;gBAAC6C,OAAA,EAAQ7D,MAAA,CAAOyG,CAAC;gBAAEzF,MAAA,EAAO5C,CAAA,CAAEmC,SAAA,CAAU4K;cAAQ;cAAE5D,WAAA,EAAY;YAAI;UAAC;UAAE,cAAa;YAAC1D,OAAA,EAAQ7D,MAAA,CAAO,OAAK0G,CAAA,GAAE,MAAIC,CAAA,GAAE,GAAG;YAAE5C,UAAA,EAAW;YAAG/C,MAAA,EAAO;cAACuG,WAAA,EAAY;YAAc;UAAC;UAAE,oBAAmB;YAAC1D,OAAA,EAAQ7D,MAAA,CAAO,MAAI0G,CAAA,GAAE,GAAG;YAAE1F,MAAA,EAAO;cAAC,gBAAe;gBAAC6C,OAAA,EAAQ7D,MAAA,CAAOyG,CAAC;gBAAE1I,KAAA,EAAM;gBAAYiD,MAAA,EAAO5C,CAAA,CAAEmC,SAAA,CAAU4K;cAAQ;cAAE5D,WAAA,EAAY;YAAI;UAAC;QAAC;MAAC;MAAEvF,IAAA,EAAK,CAAC;QAAC6B,OAAA,EAAQ;QAAuFE,UAAA,EAAW;QAAGhG,KAAA,EAAM;MAAS,GAAE;QAAC8F,OAAA,EAAQ;QAAqBc,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAAC,cAAa;YAAC6C,OAAA,EAAQ;YAAqDE,UAAA,EAAW;UAAE;UAAE,iBAAgB;YAACF,OAAA,EAAQ;YAAWE,UAAA,EAAW;UAAE;UAAEwD,WAAA,EAAY;QAAK;MAAC,CAAC;MAAEqD,KAAA,EAAM,CAAC;QAAC/G,OAAA,EAAQ;QAA0C9F,KAAA,EAAM;QAAYiD,MAAA,EAAO;UAACuG,WAAA,EAAY;QAAW;MAAC,GAAE;QAAC1D,OAAA,EAAQ;QAAaE,UAAA,EAAW;QAAGhG,KAAA,EAAM;QAAYiD,MAAA,EAAO;UAACuG,WAAA,EAAY;QAAS;MAAC,CAAC;MAAE+D,EAAA,EAAG;QAACzH,OAAA,EAAQ;QAAwCE,UAAA,EAAW;QAAGhG,KAAA,EAAM;MAAa;MAAEiI,IAAA,EAAK;QAACnC,OAAA,EAAQ;QAAmCE,UAAA,EAAW;QAAGhG,KAAA,EAAM;MAAa;MAAE,iBAAgB;QAAC8F,OAAA,EAAQ;QAAqH7C,MAAA,EAAO;UAAC4I,QAAA,EAAS;YAAC/F,OAAA,EAAQ;YAAgBE,UAAA,EAAW;UAAE;UAAEuD,MAAA,EAAO;UAA+DC,WAAA,EAAY;QAAgB;QAAExJ,KAAA,EAAM;MAAK;MAAEwN,IAAA,EAAK;QAAC1H,OAAA,EAAQR,CAAA,CAAE,kGAAkGyB,MAAM;QAAEf,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAAClD,OAAA,EAAQ;YAAC+F,OAAA,EAAQ;YAAsBE,UAAA,EAAW;YAAG/C,MAAA,EAAO,CAAC;UAAC;UAAEuG,WAAA,EAAY;QAAS;MAAC;MAAEiE,MAAA,EAAO;QAAC3H,OAAA,EAAQR,CAAA,CAAE,kGAAkGyB,MAAM;QAAEf,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAAClD,OAAA,EAAQ;YAAC+F,OAAA,EAAQ;YAAoBE,UAAA,EAAW;YAAG/C,MAAA,EAAO,CAAC;UAAC;UAAEuG,WAAA,EAAY;QAAM;MAAC;MAAEkE,MAAA,EAAO;QAAC5H,OAAA,EAAQR,CAAA,CAAE,2BAA2ByB,MAAM;QAAEf,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAAClD,OAAA,EAAQ;YAAC+F,OAAA,EAAQ;YAAuBE,UAAA,EAAW;YAAG/C,MAAA,EAAO,CAAC;UAAC;UAAEuG,WAAA,EAAY;QAAK;MAAC;MAAE,gBAAe;QAAC1D,OAAA,EAAQ;QAAmEE,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG5G,KAAA,EAAM,CAAC,QAAO,SAAS;MAAC;MAAEsL,GAAA,EAAI;QAACxF,OAAA,EAAQR,CAAA,CAAE,mGAAmGyB,MAAM;QAAEf,UAAA,EAAW;QAAGY,MAAA,EAAO;QAAG3D,MAAA,EAAO;UAAC4G,QAAA,EAAS;UAAK9J,OAAA,EAAQ;YAAC+F,OAAA,EAAQ;YAAoBE,UAAA,EAAW;YAAG/C,MAAA,EAAO,CAAC;UAAC;UAAE4I,QAAA,EAAS;YAAC/F,OAAA,EAAQ;YAA6BE,UAAA,EAAW;UAAE;UAAEsF,GAAA,EAAI;YAACxF,OAAA,EAAQ;YAAiBE,UAAA,EAAW;UAAE;UAAEuD,MAAA,EAAO;YAACzD,OAAA,EAAQ;YAAoCE,UAAA,EAAW;UAAE;QAAC;MAAC;IAAC,CAAC,GAAE,CAAC,OAAM,QAAO,UAAS,QAAQ,EAAE3E,OAAA,CAAQ,UAAS6K,EAAA,EAAE;MAAC,CAAC,OAAM,QAAO,UAAS,UAAS,cAAc,EAAE7K,OAAA,CAAQ,UAAS0J,EAAA,EAAE;QAACmB,EAAA,KAAInB,EAAA,KAAI1K,CAAA,CAAEmC,SAAA,CAAU4K,QAAA,CAASlB,EAAC,EAAEjJ,MAAA,CAAOlD,OAAA,CAAQkD,MAAA,CAAO8H,EAAC,IAAE1K,CAAA,CAAEmC,SAAA,CAAU4K,QAAA,CAASrC,EAAC;MAAE,CAAC;IAAC,CAAC,GAAE1K,CAAA,CAAE6D,KAAA,CAAM/B,GAAA,CAAI,kBAAiB,UAAS4I,EAAA,EAAE;MAAC,eAAaA,EAAA,CAAE/I,QAAA,IAAU,SAAO+I,EAAA,CAAE/I,QAAA,IAAU,CAAC,SAASgJ,GAAEkB,EAAA,EAAE;QAAC,IAAGA,EAAA,IAAG,YAAU,OAAOA,EAAA,EAAE,SAAQC,EAAA,GAAE,GAAEwB,EAAA,GAAEzB,EAAA,CAAE/G,MAAA,EAAOgH,EAAA,GAAEwB,EAAA,EAAExB,EAAA,IAAI;UAAC,IAAIyB,EAAA;YAAEvI,CAAA,GAAE6G,EAAA,CAAEC,EAAC;UAAE,WAAS9G,CAAA,CAAEvF,IAAA,GAAKkL,EAAA,CAAE3F,CAAA,CAAEtF,OAAO,KAAG6N,EAAA,GAAEvI,CAAA,CAAEtF,OAAA,CAAQ,CAAC,GAAEsF,CAAA,GAAEA,CAAA,CAAEtF,OAAA,CAAQ,CAAC,GAAE6N,EAAA,IAAGvI,CAAA,IAAG,oBAAkBuI,EAAA,CAAE9N,IAAA,IAAM,iBAAeuF,CAAA,CAAEvF,IAAA,IAAM,YAAU,OAAO8N,EAAA,CAAE7N,OAAA,KAAU6N,EAAA,GAAEA,EAAA,CAAE7N,OAAA,CAAQK,OAAA,CAAQ,QAAO,OAAO,EAAEA,OAAA,CAAQ,WAAU,IAAI,GAAEwN,EAAA,GAAE,eAAaA,EAAA,IAAG,eAAejM,IAAA,CAAKiM,EAAC,KAAG,CAAC,EAAE,GAAG,CAAC,EAAE/L,WAAA,CAAY,IAAGwD,CAAA,CAAErF,KAAA,GAAM,YAAU,OAAOqF,CAAA,CAAErF,KAAA,GAAMqF,CAAA,CAAErF,KAAA,GAAM,CAACqF,CAAA,CAAErF,KAAA,EAAM4N,EAAC,IAAEvI,CAAA,CAAErF,KAAA,CAAMiF,IAAA,CAAK2I,EAAC,IAAEvI,CAAA,CAAErF,KAAA,GAAM,CAAC4N,EAAC;QAAG;MAAC,EAAE7C,EAAA,CAAEnL,MAAM;IAAC,CAAC,GAAES,CAAA,CAAE6D,KAAA,CAAM/B,GAAA,CAAI,QAAO,UAAS4I,EAAA,EAAE;MAAC,IAAG,iBAAeA,EAAA,CAAEjL,IAAA,EAAK;QAAC,SAAQoM,EAAA,GAAE,IAAGC,EAAA,GAAE,GAAEwB,EAAA,GAAE5C,EAAA,CAAEvF,OAAA,CAAQL,MAAA,EAAOgH,EAAA,GAAEwB,EAAA,EAAExB,EAAA,IAAI;UAAC,IAAIyB,EAAA,GAAE7C,EAAA,CAAEvF,OAAA,CAAQ2G,EAAC;YAAEyB,EAAA,GAAE,gBAAgBjM,IAAA,CAAKiM,EAAC;UAAE,IAAGA,EAAA,EAAE;YAAC1B,EAAA,GAAE0B,EAAA,CAAE,CAAC;YAAE;UAAK;QAAC;QAAC,IAAIvI,CAAA;UAAE9D,CAAA,GAAElB,CAAA,CAAEmC,SAAA,CAAU0J,EAAC;QAAE3K,CAAA,GAAEwJ,EAAA,CAAEhL,OAAA,GAAQM,CAAA,CAAE0D,SAAA,CAAU,UAASiH,EAAA,EAAE;UAACA,EAAA,GAAEA,EAAA,CAAE5K,OAAA,CAAQyK,CAAA,EAAE,EAAE;UAAE,OAAOG,EAAA,GAAEA,EAAA,CAAE5K,OAAA,CAAQ,iCAAgC,UAAS6K,EAAA,EAAE4C,EAAA,EAAE;YAAC,IAAIC,EAAA;YAAE,OAAM,SAAOD,EAAA,GAAEA,EAAA,CAAEhM,WAAA,CAAY,GAAG,CAAC,KAAGiM,EAAA,GAAE,QAAMD,EAAA,CAAE,CAAC,IAAEE,QAAA,CAASF,EAAA,CAAEnN,KAAA,CAAM,CAAC,GAAE,EAAE,IAAEsN,MAAA,CAAOH,EAAA,CAAEnN,KAAA,CAAM,CAAC,CAAC,GAAEuN,CAAA,CAAEH,EAAC,KAAGI,CAAA,CAAEL,EAAC,KAAG5C,EAAA;UAAC,CAAC;QAAC,EAAEF,EAAA,CAAEhL,OAAO,GAAEwB,CAAA,EAAE2K,EAAC,IAAEA,EAAA,IAAG,WAASA,EAAA,IAAG7L,CAAA,CAAEyD,OAAA,CAAQqK,UAAA,KAAa9I,CAAA,GAAE,QAAO,mBAAI+I,IAAA,GAAMC,OAAA,CAAQ,IAAE,MAAIC,IAAA,CAAKC,KAAA,CAAM,OAAKD,IAAA,CAAKE,MAAA,CAAO,CAAC,GAAEzD,EAAA,CAAEtF,UAAA,CAAWvE,EAAA,GAAGmE,CAAA,EAAEhF,CAAA,CAAEyD,OAAA,CAAQqK,UAAA,CAAWM,aAAA,CAAcvC,EAAA,EAAE,YAAU;UAAC,IAAIlB,EAAA,GAAE0D,QAAA,CAASC,cAAA,CAAetJ,CAAC;UAAE2F,EAAA,KAAIA,EAAA,CAAE4D,SAAA,GAAUvO,CAAA,CAAE0D,SAAA,CAAUiH,EAAA,CAAE6D,WAAA,EAAYxO,CAAA,CAAEmC,SAAA,CAAU0J,EAAC,GAAEA,EAAC;QAAE,CAAC;MAAE;IAAC,CAAC,GAAEjK,MAAA,CAAO5B,CAAA,CAAEmC,SAAA,CAAU2H,MAAA,CAAO5E,GAAA,CAAIO,OAAA,CAAQiB,MAAA,EAAO,IAAI;IAAGmH,CAAA,GAAE;MAACY,GAAA,EAAI;MAAIC,EAAA,EAAG;MAAIC,EAAA,EAAG;MAAIC,IAAA,EAAK;IAAG;IAAEhB,CAAA,GAAEiB,MAAA,CAAOC,aAAA,IAAeD,MAAA,CAAOE,YAAA;EAAa/O,CAAA,CAAEmC,SAAA,CAAU6M,EAAA,GAAGhP,CAAA,CAAEmC,SAAA,CAAU4K,QAAA;AAAQ,EAAE7E,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAU8M,OAAA,GAAQ;EAAChG,OAAA,EAAQ;EAAMiG,WAAA,EAAY;IAACzJ,OAAA,EAAQ;IAAmEc,MAAA,EAAO;IAAG5G,KAAA,EAAM;IAASiD,MAAA,EAAO;MAAC,qBAAoB;QAAC6C,OAAA,EAAQ;QAAkCE,UAAA,EAAW;QAAG/C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAU4K;MAAQ;IAAC;EAAC;EAAE7D,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAiDc,MAAA,EAAO;EAAE;EAAEgD,MAAA,EAAO;EAA2CF,OAAA,EAAQ;EAAqBmC,QAAA,EAAS;EAAeS,SAAA,EAAU;IAACxG,OAAA,EAAQ;IAAc9F,KAAA,EAAM;EAAU;EAAE,aAAY;IAAC8F,OAAA,EAAQ;IAAiEc,MAAA,EAAO;EAAE;EAAE,cAAa;IAACd,OAAA,EAAQ;IAAoB9F,KAAA,EAAM;EAAY;EAAEqM,MAAA,EAAO;EAAsCrC,QAAA,EAAS;EAAqB,cAAa;IAAClE,OAAA,EAAQ;IAAkFE,UAAA,EAAW;EAAE;EAAEwJ,QAAA,EAAS;IAAC1J,OAAA,EAAQ;IAA+CE,UAAA,EAAW;IAAGhG,KAAA,EAAM;EAAU;EAAE,uBAAsB;IAAC8F,OAAA,EAAQ;IAA8BE,UAAA,EAAW;IAAGhG,KAAA,EAAM;EAAU;EAAE,oBAAmB;IAAC8F,OAAA,EAAQ;IAA2BE,UAAA,EAAW;IAAGhG,KAAA,EAAM;EAAU;EAAEyJ,OAAA,EAAQ;EAAuII,QAAA,EAAS;EAAe,kBAAiB;EAAe4F,MAAA,EAAO;EAAejG,WAAA,EAAY;EAAiB5F,QAAA,EAAS;AAAK,GAAQ2E,KAAA,CAAArE,KAAA,CAAM/B,GAAA,CAAI,kBAAiB,UAASmD,CAAA,EAAE;EAAC,IAAG,cAAYA,CAAA,CAAEtD,QAAA,EAAS,SAAQT,CAAA,GAAE+D,CAAA,CAAE1F,MAAA,CAAO8P,MAAA,CAAO,UAAS3E,EAAA,EAAE;MAAC,OAAM,YAAU,OAAOA,EAAA,IAAG,cAAYA,EAAA,CAAEjL,IAAA,IAAM,aAAWiL,EAAA,CAAEjL,IAAA;IAAI,CAAC,GAAEO,CAAA,GAAE,GAAEA,CAAA,GAAEkB,CAAA,CAAE4D,MAAA,GAAQ;IAAC,IAAIsD,CAAA,GAAElH,CAAA,CAAElB,CAAA,EAAG;IAAE,IAAG,cAAYoI,CAAA,CAAE3I,IAAA,IAAM,eAAa2I,CAAA,CAAE1I,OAAA,EAAQ;MAAC,IAAI2I,CAAA,GAAE,EAAC;MAAE,IAAGlB,CAAA,CAAE,CAAC,uBAAsB,aAAa,CAAC,KAAG,QAAMyG,CAAA,CAAE,CAAC,EAAElO,OAAA,EAAQ;QAACM,CAAA,IAAG;QAAE,IAAIsI,CAAA,GAAEgH,CAAA,CAAE,QAAO,MAAM;QAAE,IAAG,OAAKhH,CAAA,EAAE;QAAS,OAAKtI,CAAA,GAAEsI,CAAA,EAAEtI,CAAA,IAAI;UAAC,IAAIuI,CAAA,GAAEqF,CAAA,CAAE,CAAC;UAAE,eAAarF,CAAA,CAAE9I,IAAA,KAAO8P,CAAA,CAAEhH,CAAA,EAAE,gBAAgB,GAAEF,CAAA,CAAEzD,IAAA,CAAK2D,CAAA,CAAE7I,OAAO;QAAE;QAACM,CAAA,GAAEsI,CAAA,GAAE;MAAC;MAAC,IAAGnB,CAAA,CAAE,CAAC,eAAc,gBAAgB,CAAC,KAAG,QAAMyG,CAAA,CAAE,CAAC,EAAElO,OAAA,KAAUM,CAAA,IAAIuP,CAAA,CAAE3B,CAAA,CAAE,CAAC,GAAE,mBAAmB,GAAE,IAAEvF,CAAA,CAAEvD,MAAA,GAAQ;QAAC,IAAIE,CAAA,GAAEsK,CAAA,CAAE,QAAO,MAAM;QAAE,IAAG,OAAKtK,CAAA,EAAE,SAAQwF,CAAA,GAAExK,CAAA,EAAEwK,CAAA,GAAExF,CAAA,EAAEwF,CAAA,IAAI;UAAC,IAAIqD,CAAA,GAAE3M,CAAA,CAAEsJ,CAAC;UAAE,eAAaqD,CAAA,CAAEpO,IAAA,IAAM,KAAG4I,CAAA,CAAEmH,OAAA,CAAQ3B,CAAA,CAAEnO,OAAO,KAAG6P,CAAA,CAAE1B,CAAA,EAAE,gBAAgB;QAAC;MAAC;IAAC;EAAC;EAAC,SAASD,EAAElD,EAAA,EAAE;IAAC,OAAOxJ,CAAA,CAAElB,CAAA,GAAE0K,EAAC;EAAC;EAAC,SAASvD,EAAEuD,EAAA,EAAEmB,EAAA,EAAE;IAACA,EAAA,GAAEA,EAAA,IAAG;IAAE,SAAQC,EAAA,GAAE,GAAEA,EAAA,GAAEpB,EAAA,CAAE5F,MAAA,EAAOgH,EAAA,IAAI;MAAC,IAAIwB,EAAA,GAAEM,CAAA,CAAE9B,EAAA,GAAED,EAAC;MAAE,IAAG,CAACyB,EAAA,IAAGA,EAAA,CAAE7N,IAAA,KAAOiL,EAAA,CAAEoB,EAAC,GAAE;IAAM;IAAC,OAAO;EAAC;EAAC,SAASwD,EAAE5E,EAAA,EAAEmB,EAAA,EAAE;IAAC,SAAQC,EAAA,GAAE,GAAEwB,EAAA,GAAEtN,CAAA,EAAEsN,EAAA,GAAEpM,CAAA,CAAE4D,MAAA,EAAOwI,EAAA,IAAI;MAAC,IAAIC,EAAA,GAAErM,CAAA,CAAEoM,EAAC;QAAEmC,EAAA,GAAElC,EAAA,CAAE7N,OAAA;MAAQ,IAAG,kBAAgB6N,EAAA,CAAE9N,IAAA,IAAM,YAAU,OAAOgQ,EAAA;QAAE,IAAG/E,EAAA,CAAEgF,IAAA,CAAKD,EAAC,GAAE3D,EAAA,YAAYD,EAAA,CAAE6D,IAAA,CAAKD,EAAC,KAAG,MAAI,EAAE3D,EAAA,EAAE,OAAOwB,EAAA;MAAA;IAAC;IAAC,OAAM;EAAE;EAAC,SAASiC,EAAE7E,EAAA,EAAEmB,EAAA,EAAE;IAAC,IAAIC,EAAA,GAAEpB,EAAA,CAAE/K,KAAA;IAAMmM,EAAA,GAAElM,KAAA,CAAMC,OAAA,CAAQiM,EAAC,MAAIpB,EAAA,CAAE/K,KAAA,GAAMmM,EAAA,GAAE,CAACA,EAAC,KAAGpB,EAAA,CAAE/K,KAAA,GAAMmM,EAAA,GAAE,EAAC,EAAEA,EAAA,CAAElH,IAAA,CAAKiH,EAAC;EAAC;AAAC,CAAC,GAAQ3D,KAAA,CAAA/F,SAAA,CAAUwN,GAAA,GAAI;EAAC1G,OAAA,EAAQ;IAACxD,OAAA,EAAQ;IAAgDE,UAAA,EAAW;EAAE;EAAE6F,QAAA,EAAS,CAAC;IAAC/F,OAAA,EAAQ;IAAsCc,MAAA,EAAO;EAAE,GAAE,UAAU;EAAE2C,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAkDc,MAAA,EAAO;IAAGZ,UAAA,EAAW;EAAE;EAAEiK,UAAA,EAAW;IAACnK,OAAA,EAAQ;IAAsCc,MAAA,EAAO;IAAGZ,UAAA,EAAW;IAAG/C,MAAA,EAAO;MAACuG,WAAA,EAAY;IAAO;EAAC;EAAEG,QAAA,EAAS;EAA4FF,OAAA,EAAQ;EAAu9EC,OAAA,EAAQ;EAA2BE,MAAA,EAAO;EAA4CC,QAAA,EAAS;EAA+HL,WAAA,EAAY;AAAa,GAAE,UAAS0G,CAAA,EAAE;EAAC,IAAI5K,CAAA,GAAE4K,CAAA,CAAE1N,SAAA,CAAUsH,UAAA,CAAW,iBAAiB;IAAEpB,CAAA,GAAEpD,CAAA,CAAEQ,OAAA,CAAQiB,MAAA;IAAOrF,CAAA,GAAE4D,CAAA,CAAErC,MAAA,CAAOiH,aAAA;IAAciG,CAAA,GAAEzO,CAAA,CAAEuB,MAAA,CAAO,2BAA2B;IAAEoC,CAAA,GAAE3D,CAAA,CAAEoE,OAAA,CAAQiB,MAAA;EAAO,SAAS0B,EAAEsC,EAAA,EAAEmB,EAAA,EAAE;IAAC,IAAGgE,CAAA,CAAE1N,SAAA,CAAUuI,EAAC,GAAE,OAAM;MAACjF,OAAA,EAAQ7D,MAAA,CAAO,SAAOiK,EAAA,GAAE,WAASxD,CAAC;MAAE1C,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG3D,MAAA,EAAO;QAAC,wBAAuB;UAAC6C,OAAA,EAAQ;UAAQ9F,KAAA,EAAM;QAAQ;QAAE,iBAAgB;UAAC8F,OAAA,EAAQ;UAAU9F,KAAA,EAAM+K;QAAC;MAAC;IAAC;EAAC;EAAC,SAASqF,EAAErF,EAAA,EAAEmB,EAAA,EAAEC,EAAA,EAAE;IAACpB,EAAA,GAAE;MAAC9G,IAAA,EAAK8G,EAAA;MAAE1H,OAAA,EAAQ6I,EAAA;MAAElK,QAAA,EAASmK;IAAC;IAAE,OAAO+D,CAAA,CAAEhM,KAAA,CAAMC,GAAA,CAAI,mBAAkB4G,EAAC,GAAEA,EAAA,CAAEnL,MAAA,GAAOsQ,CAAA,CAAE7L,QAAA,CAAS0G,EAAA,CAAE9G,IAAA,EAAK8G,EAAA,CAAE1H,OAAO,GAAE6M,CAAA,CAAEhM,KAAA,CAAMC,GAAA,CAAI,kBAAiB4G,EAAC,GAAEA,EAAA,CAAEnL,MAAA;EAAM;EAAC,SAASiL,EAAE8C,EAAA,EAAE5C,EAAA,EAAEnC,CAAA,EAAE;IAAC,IAAIsD,EAAA,GAAEgE,CAAA,CAAE7L,QAAA,CAASsJ,EAAA,EAAE;QAACzD,aAAA,EAAc;UAACpE,OAAA,EAAQ7D,MAAA,CAAOoD,CAAC;UAAEW,UAAA,EAAW;QAAE;MAAC,CAAC;MAAEwB,CAAA,GAAE;MAAEmI,CAAA,GAAE,CAAC;MAAEzD,EAAA,GAAEkE,CAAA,CAAElE,EAAA,CAAE/L,GAAA,CAAI,UAAS6K,EAAA,EAAE;QAAC,IAAG,YAAU,OAAOA,EAAA,EAAE,OAAOA,EAAA;QAAE,SAAQ6C,EAAA,EAAE1B,EAAA,EAAEnB,EAAA,GAAEA,EAAA,CAAEjL,OAAA,EAAQ,OAAK4N,EAAA,CAAEkC,OAAA,EAAS1D,EAAA,GAAE3E,CAAA,IAAIqG,EAAA,GAAE,QAAMjF,CAAA,CAAEyH,WAAA,CAAY,IAAE,MAAIlE,EAAA,GAAE,MAAM,GAAG;QAAC,OAAOwD,CAAA,CAAE9B,EAAC,IAAE7C,EAAA,EAAE6C,EAAA;MAAC,CAAC,EAAEjI,IAAA,CAAK,EAAE,GAAEmF,EAAA,EAAEnC,CAAC;MAAEgH,CAAA,GAAEtP,MAAA,CAAOgQ,IAAA,CAAKX,CAAC;IAAE,OAAOnI,CAAA,GAAE,GAAE,SAASwD,GAAE6C,EAAA,EAAE;MAAC,SAAQ1B,EAAA,GAAE,GAAEA,EAAA,GAAE0B,EAAA,CAAE1I,MAAA,EAAOgH,EAAA,IAAI;QAAC,IAAG3E,CAAA,IAAGoI,CAAA,CAAEzK,MAAA,EAAO;QAAO,IAAIoL,EAAA;UAAE3C,EAAA;UAAEkC,EAAA;UAAEvO,CAAA;UAAElB,CAAA;UAAEmQ,EAAA;UAAEC,EAAA;UAAExC,CAAA,GAAEJ,EAAA,CAAE1B,EAAC;QAAE,YAAU,OAAO8B,CAAA,IAAG,YAAU,OAAOA,CAAA,CAAElO,OAAA,IAASwQ,EAAA,GAAEX,CAAA,CAAEpI,CAAC,GAAE,QAAMiJ,EAAA,IAAGD,EAAA,GAAE,YAAU,OAAOvC,CAAA,GAAEA,CAAA,GAAEA,CAAA,CAAElO,OAAA,EAAS8P,OAAA,CAAQU,EAAC,OAAK,EAAE/I,CAAA,EAAEoG,EAAA,GAAE4C,EAAA,CAAEE,SAAA,CAAU,GAAED,EAAC,GAAEpQ,CAAA,GAAEsP,CAAA,CAAEY,EAAC,GAAET,EAAA,GAAE,SAAQvO,CAAA,GAAE,CAAC,GAAG,2BAA2B,IAAE4O,CAAA,EAAE,OAAK5O,CAAA,GAAE2O,CAAA,CAAE7L,QAAA,CAAShE,CAAA,EAAEkB,CAAC,GAAG4D,MAAA,MAAU2K,EAAA,GAAE,CAAC,GAAE,CAAC,GAAG7K,IAAA,CAAKU,KAAA,CAAMmK,EAAA,EAAEM,CAAA,CAAE7O,CAAA,CAAE,CAAC,GAAE2O,CAAA,CAAE1N,SAAA,CAAUsH,UAAA,EAAW,YAAY,CAAC,GAAEvI,CAAA,CAAEoP,MAAA,CAAOhL,KAAA,CAAMpE,CAAA,EAAEuO,EAAC,IAAGA,EAAA,GAAE,IAAII,CAAA,CAAErQ,KAAA,CAAM,iBAAgB0B,CAAA,EAAEG,CAAA,CAAE1B,KAAA,EAAMK,CAAC,GAAEkB,CAAA,GAAEiP,EAAA,CAAEE,SAAA,CAAUD,EAAA,GAAEF,EAAA,CAAEpL,MAAM,GAAE9E,CAAA,GAAE,EAAC,EAAEuN,EAAA,IAAGvN,CAAA,CAAE4E,IAAA,CAAK2I,EAAC,GAAEvN,CAAA,CAAE4E,IAAA,CAAK6K,EAAC,GAAEvO,CAAA,KAAIyJ,EAAA,CAAEwF,EAAA,GAAE,CAACjP,CAAC,CAAC,GAAElB,CAAA,CAAE4E,IAAA,CAAKU,KAAA,CAAMtF,CAAA,EAAEmQ,EAAC,IAAG,YAAU,OAAOvC,CAAA,IAAGJ,EAAA,CAAE8C,MAAA,CAAOhL,KAAA,CAAMkI,EAAA,EAAE,CAAC1B,EAAA,EAAE,CAAC,EAAEyE,MAAA,CAAOvQ,CAAC,CAAC,GAAE8L,EAAA,IAAG9L,CAAA,CAAE8E,MAAA,GAAO,KAAG8I,CAAA,CAAElO,OAAA,GAAQM,CAAA,MAAKoQ,EAAA,GAAExC,CAAA,CAAElO,OAAA,EAAQE,KAAA,CAAMC,OAAA,CAAQuQ,EAAC,IAAEzF,EAAA,CAAEyF,EAAC,IAAEzF,EAAA,CAAE,CAACyF,EAAC,CAAC;MAAE;IAAC,EAAEvE,EAAC,GAAE,IAAIgE,CAAA,CAAErQ,KAAA,CAAM+I,CAAA,EAAEsD,EAAA,EAAE,cAAYtD,CAAA,EAAE+E,EAAC;EAAC;EAACuC,CAAA,CAAE1N,SAAA,CAAUsH,UAAA,CAAW,iBAAiB,IAAE,CAACrB,CAAA,CAAE,OAAM,0HAA0H1B,MAAM,GAAE0B,CAAA,CAAE,QAAO,yCAAyC1B,MAAM,GAAE0B,CAAA,CAAE,OAAM,QAAQ1B,MAAM,GAAE0B,CAAA,CAAE,YAAW,oBAAoB1B,MAAM,GAAE0B,CAAA,CAAE,WAAU,6CAA6C1B,MAAM,GAAE0B,CAAA,CAAE,OAAM,QAAQ1B,MAAM,GAAEzB,CAAC,EAAEoK,MAAA,CAAOmB,OAAO;EAAE,IAAIlI,CAAA,GAAE;IAACmB,UAAA,EAAW;IAAGQ,EAAA,EAAG;IAAGwG,UAAA,EAAW;IAAGC,EAAA,EAAG;IAAGC,GAAA,EAAI;IAAGC,GAAA,EAAI;EAAE;EAAE,SAAS/C,EAAEnD,EAAA,EAAE;IAAC,OAAM,YAAU,OAAOA,EAAA,GAAEA,EAAA,GAAE9K,KAAA,CAAMC,OAAA,CAAQ6K,EAAC,IAAEA,EAAA,CAAE5K,GAAA,CAAI+N,CAAC,EAAEtI,IAAA,CAAK,EAAE,IAAEsI,CAAA,CAAEnD,EAAA,CAAEhL,OAAO;EAAC;EAACmQ,CAAA,CAAEhM,KAAA,CAAM/B,GAAA,CAAI,kBAAiB,UAAS4I,EAAA,EAAE;IAACA,EAAA,CAAE/I,QAAA,IAAY2G,CAAA,IAAG,CAAC,SAASqC,GAAEkB,EAAA,EAAE;MAAC,SAAQC,EAAA,GAAE,GAAEwB,EAAA,GAAEzB,EAAA,CAAE/G,MAAA,EAAOgH,EAAA,GAAEwB,EAAA,EAAExB,EAAA,IAAI;QAAC,IAAIvD,CAAA;UAAEkH,EAAA;UAAEvO,CAAA;UAAElB,CAAA,GAAE6L,EAAA,CAAEC,EAAC;QAAE,YAAU,OAAO9L,CAAA,KAAIuI,CAAA,GAAEvI,CAAA,CAAEN,OAAA,EAAQE,KAAA,CAAMC,OAAA,CAAQ0I,CAAC,IAAE,sBAAoBvI,CAAA,CAAEP,IAAA,IAAMO,CAAA,GAAEuI,CAAA,CAAE,CAAC,GAAE,MAAIA,CAAA,CAAEzD,MAAA,IAAQ,YAAU,OAAO9E,CAAA,IAAG,oBAAkBA,CAAA,CAAEP,IAAA,KAAOgQ,EAAA,GAAE5B,CAAA,CAAE7N,CAAC,GAAEA,CAAA,GAAEA,CAAA,CAAEL,KAAA,EAAMK,CAAA,GAAEJ,KAAA,CAAMC,OAAA,CAAQG,CAAC,IAAEA,CAAA,CAAE,CAAC,IAAEA,CAAA,EAAEkB,CAAA,GAAE2O,CAAA,CAAE1N,SAAA,CAAUnC,CAAC,OAAKuI,CAAA,CAAE,CAAC,IAAEiC,CAAA,CAAEiF,EAAA,EAAEvO,CAAA,EAAElB,CAAC,MAAI2K,EAAA,CAAEpC,CAAC,IAAE,YAAU,OAAOA,CAAA,IAAGoC,EAAA,CAAE,CAACpC,CAAC,CAAC;MAAE;IAAC,EAAEmC,EAAA,CAAEnL,MAAM;EAAC,CAAC;AAAC,EAAE2I,KAAK,GAAE,UAASjD,CAAA,EAAE;EAACA,CAAA,CAAE9C,SAAA,CAAUsO,UAAA,GAAWxL,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,cAAa;IAAC,cAAa;MAACiD,OAAA,EAAQ;MAA+KE,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG3D,MAAA,EAAO;IAAI;IAAEiO,OAAA,EAAQ;EAAuF,CAAC,GAAE5L,CAAA,CAAE9C,SAAA,CAAUsO,UAAA,CAAWrH,OAAA,CAAQxE,IAAA,CAAK,sDAAqD,4FAA2F,4BAA4B,GAAE,OAAOK,CAAA,CAAE9C,SAAA,CAAUsO,UAAA,CAAW/G,SAAA,EAAU,OAAOzE,CAAA,CAAE9C,SAAA,CAAUsO,UAAA,CAAW,kBAAkB;EAAE,IAAIrI,CAAA,GAAEnD,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,cAAa,CAAC,CAAC;EAAE,OAAO4F,CAAA,CAAE,YAAY,GAAEnD,CAAA,CAAE9C,SAAA,CAAUsO,UAAA,CAAW,YAAY,EAAE7N,MAAA,GAAOwF,CAAA,EAAEnD,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,YAAW;IAACmO,SAAA,EAAU;MAACrL,OAAA,EAAQ;MAAqB7C,MAAA,EAAO;QAACmO,EAAA,EAAG;UAACtL,OAAA,EAAQ;UAAK9F,KAAA,EAAM;QAAU;QAAE2J,QAAA,EAAS;MAAU;IAAC;IAAE,oBAAmB;MAAC7D,OAAA,EAAQ;MAAyGc,MAAA,EAAO;MAAG3D,MAAA,EAAO;QAAC0G,QAAA,EAAS;QAA4D0H,OAAA,EAAQ;UAACvL,OAAA,EAAQ;UAAW9F,KAAA,EAAM;UAAaiD,MAAA,EAAOwF;QAAC;MAAC;IAAC;EAAC,CAAC,GAAEnD,CAAA,CAAE9C,SAAA,CAAUuO,EAAA,GAAGzL,CAAA,CAAE9C,SAAA,CAAUsO,UAAA;AAAU,EAAEvI,KAAK,GAAE,UAASjD,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAEnD,CAAA,CAAE9C,SAAA,CAAUsH,UAAA;IAAWpB,CAAA,GAAE,2CAA2C3B,MAAA;IAAO4B,CAAA,GAAE,6CAA2CD,CAAA,GAAE;EAAUpD,CAAA,CAAE9C,SAAA,CAAU8O,KAAA,GAAMhM,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,eAAc;IAACkH,SAAA,EAAU;MAACjE,OAAA,EAAQ7D,MAAA,CAAO0G,CAAA,GAAE,uCAAuC5B,MAAM;MAAEf,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAACuG,WAAA,EAAY;MAAI;IAAC;EAAC,CAAC,GAAElE,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,SAAQ,WAAU;IAAC,sBAAqB;MAAC8C,OAAA,EAAQ7D,MAAA,CAAO0G,CAAA,GAAE,wDAAwD5B,MAAM;MAAEf,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAAC8G,SAAA,EAAU;UAACjE,OAAA,EAAQ;UAA2BE,UAAA,EAAW;UAAG/C,MAAA,EAAO;YAACuG,WAAA,EAAY;UAAI;QAAC;QAAEvF,IAAA,EAAK;UAAC6B,OAAA,EAAQ;UAAoBE,UAAA,EAAW;UAAG/C,MAAA,EAAOwF,CAAA;UAAEzI,KAAA,EAAM;QAAqB;QAAEwJ,WAAA,EAAY;MAAQ;IAAC;IAAE,cAAa,CAAC;MAAC1D,OAAA,EAAQ7D,MAAA,CAAO,mHAAmH8E,MAAA,CAAO3G,OAAA,CAAQ,WAAU,YAAU;QAAC,OAAOsI,CAAA;MAAC,CAAC,CAAC;MAAE1C,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAACuG,WAAA,EAAY;MAAI;IAAC,GAAE;MAAC1D,OAAA,EAAQ7D,MAAA,CAAO,kBAAgByG,CAAC;MAAE1C,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAACsG,MAAA,EAAOd,CAAA,CAAEc,MAAA;QAAOK,MAAA,EAAOnB,CAAA,CAAEmB,MAAA;QAAOF,OAAA,EAAQjB,CAAA,CAAEiB,OAAA;QAAQD,OAAA,EAAQnE,CAAA,CAAE9C,SAAA,CAAUsO,UAAA,CAAWrH,OAAA;QAAQI,QAAA,EAAS;QAAoBL,WAAA,EAAY;MAAiB;IAAC,CAAC;IAAE+H,OAAA,EAAQ;MAACzL,OAAA,EAAQ;MAAyEE,UAAA,EAAW;MAAG/C,MAAA,EAAO;QAACgB,IAAA,EAAK;UAAC6B,OAAA,EAAQ;UAA4BE,UAAA,EAAW;UAAG/C,MAAA,EAAOwF,CAAA;UAAEzI,KAAA,EAAM;QAAqB;MAAC;IAAC;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUsI,WAAA,CAAYI,UAAA,CAAW,cAAa5F,CAAA,CAAE9C,SAAA,CAAU8O,KAAK;AAAC,EAAE/I,KAAK,GAAE,UAASjD,CAAA,EAAE;EAACA,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,GAAKlM,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,cAAa,CAAC,CAAC,GAAEyC,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,QAAO,WAAU;IAAClD,IAAA,EAAK,CAAC;MAACgG,OAAA,EAAQ;MAAgF9F,KAAA,EAAM;IAAY,CAAC;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,CAAK,mBAAmB,EAAE1L,OAAA,GAAQ,wKAAuK,OAAOR,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,CAAKzH,SAAA,EAAUzE,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,QAAO,YAAW;IAAC,oBAAmB;MAAC8C,OAAA,EAAQ;MAAY9F,KAAA,EAAM;IAAa;EAAC,CAAC,GAAEC,KAAA,CAAMC,OAAA,CAAQoF,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,CAAK/H,OAAO,MAAInE,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,CAAK/H,OAAA,GAAQ,CAACnE,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,CAAK/H,OAAO,IAAGnE,CAAA,CAAE9C,SAAA,CAAUgP,IAAA,CAAK/H,OAAA,CAAQgI,OAAA,CAAQ;IAAC3L,OAAA,EAAQ;IAAkDE,UAAA,EAAW;EAAE,GAAE;IAACF,OAAA,EAAQ;IAAwGE,UAAA,EAAW;EAAE,CAAC;AAAC,EAAEuC,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAUkP,IAAA,GAAWnJ,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,cAAa;EAAC4G,OAAA,EAAQ;AAAiX,CAAC,GAAQlB,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,QAAO,YAAW;EAAC2O,UAAA,EAAW;IAAC7L,OAAA,EAAQ;IAAQ9F,KAAA,EAAM;EAAU;AAAC,CAAC,GAAQuI,KAAA,CAAA/F,SAAA,CAAUoP,KAAA,GAAYrJ,KAAA,CAAA/F,SAAA,CAAUkP,IAAA,EAAK,UAASpM,CAAA,EAAE;EAAC,SAASmD,EAAEsC,EAAA,EAAEmB,EAAA,EAAE;IAAC,OAAOjK,MAAA,CAAO8I,EAAA,CAAE3K,OAAA,CAAQ,SAAQ,YAAU;MAAC,OAAM,yDAAyD2G,MAAA;IAAM,CAAC,GAAEmF,EAAC;EAAC;EAAC5G,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,qBAAoB;IAAC,mBAAkB;MAAC8C,OAAA,EAAQ7D,MAAA,CAAO,cAAYqD,CAAA,CAAE9C,SAAA,CAAUsH,UAAA,CAAW,mBAAmB,EAAEhE,OAAA,CAAQiB,MAAM;MAAEf,UAAA,EAAW;MAAGhG,KAAA,EAAM,CAAC,qBAAoB,UAAS,YAAW,iBAAiB;IAAC;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,YAAW;IAAC6O,MAAA,EAAO;MAAC/L,OAAA,EAAQ7D,MAAA,CAAO,cAAYqD,CAAA,CAAE9C,SAAA,CAAUsH,UAAA,CAAWH,QAAA,CAAS5C,MAAM;MAAEf,UAAA,EAAW;MAAGhG,KAAA,EAAM,CAAC,YAAW,iBAAiB;IAAC;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,YAAW;IAAC,oBAAmB,CAAC;MAAC8C,OAAA,EAAQ;MAAyO9F,KAAA,EAAM;IAAY,GAAE;MAAC8F,OAAA,EAAQ;MAAwB9F,KAAA,EAAM;IAAY,CAAC;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,WAAU;IAAC8O,OAAA,EAAQ;MAAChM,OAAA,EAAQ2C,CAAA,CAAE,4GAA4G1B,MAAM;MAAEf,UAAA,EAAW;MAAG/C,MAAA,EAAOqC,CAAA,CAAE9C,SAAA,CAAUsH;IAAU;IAAE3K,OAAA,EAAQ;MAAC2G,OAAA,EAAQ2C,CAAA,CAAE,mEAAmE1B,MAAM;MAAEf,UAAA,EAAW;MAAG/C,MAAA,EAAOqC,CAAA,CAAE9C,SAAA,CAAUsH;IAAU;EAAC,CAAC,GAAExE,CAAA,CAAE9C,SAAA,CAAUsH,UAAA,CAAWL,OAAA,CAAQgI,OAAA,CAAQ;IAAC3L,OAAA,EAAQ;IAAwC9F,KAAA,EAAM;EAAQ,GAAE;IAAC8F,OAAA,EAAQ;IAAgG9F,KAAA,EAAM;EAAc,GAAE;IAAC8F,OAAA,EAAQ;IAAW9F,KAAA,EAAM,CAAC,QAAO,KAAK;EAAC,GAAE;IAAC8F,OAAA,EAAQ;IAAgB9F,KAAA,EAAM;EAAK,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,YAAW;IAAC+O,MAAA,EAAO;MAACjM,OAAA,EAAQ;MAAQ9F,KAAA,EAAM;IAAU;IAAEgS,KAAA,EAAM;MAAClM,OAAA,EAAQ;MAAK9F,KAAA,EAAM;IAAU;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,cAAa,eAAc;IAAC,mBAAkB;MAAC8C,OAAA,EAAQ2C,CAAA,CAAE,gBAAgB1B,MAAM;MAAEf,UAAA,EAAW;IAAE;IAAE,oBAAmB;MAACF,OAAA,EAAQ;MAA8CE,UAAA,EAAW;IAAE;IAAEiM,GAAA,EAAI;MAACnM,OAAA,EAAQ;MAAkF9F,KAAA,EAAM;IAAU;IAAEkS,OAAA,EAAQ;MAACpM,OAAA,EAAQ;MAAqB9F,KAAA,EAAM;IAAY;EAAC,CAAC;EAAE,SAAQ0I,CAAA,GAAE,CAAC,YAAW,qBAAoB,UAAS,mBAAkB,iBAAiB,GAAEC,CAAA,GAAE,GAAEA,CAAA,GAAED,CAAA,CAAEvD,MAAA,EAAOwD,CAAA,IAAI;IAAC,IAAIC,CAAA,GAAEF,CAAA,CAAEC,CAAC;MAAEtD,CAAA,GAAEC,CAAA,CAAE9C,SAAA,CAAUsH,UAAA,CAAWlB,CAAC;MAAEA,CAAA,IAAGvD,CAAA,GAAE,aAAWC,CAAA,CAAE5F,IAAA,CAAKI,IAAA,CAAKuF,CAAC,IAAEC,CAAA,CAAE9C,SAAA,CAAUsH,UAAA,CAAWlB,CAAC,IAAE;QAAC9C,OAAA,EAAQT;MAAC,IAAEA,CAAA,EAAGpC,MAAA,IAAQ,CAAC;IAAE,CAACoC,CAAA,CAAEpC,MAAA,GAAO2F,CAAA,EAAG,kBAAkB,IAAE;EAAe;AAAC,EAAEL,KAAK,GAAE,UAASlD,CAAA,EAAE;EAAC,IAAIC,CAAA,GAAED,CAAA,CAAE3F,IAAA,CAAKqB,KAAA,CAAMsE,CAAA,CAAE7C,SAAA,CAAUsH,UAAU;IAAEpB,CAAA,GAAE,+CAA+C3B,MAAA;IAAO4B,CAAA,GAAE,+CAA+C5B,MAAA;IAAO6B,CAAA,GAAE,uCAAuC7B,MAAA;EAAO,SAAS0B,EAAEsC,EAAA,EAAEmB,EAAA,EAAE;IAAC,OAAOnB,EAAA,GAAEA,EAAA,CAAE3K,OAAA,CAAQ,QAAO,YAAU;MAAC,OAAOsI,CAAA;IAAC,CAAC,EAAEtI,OAAA,CAAQ,aAAY,YAAU;MAAC,OAAOuI,CAAA;IAAC,CAAC,EAAEvI,OAAA,CAAQ,aAAY,YAAU;MAAC,OAAOwI,CAAA;IAAC,CAAC,GAAE3G,MAAA,CAAO8I,EAAA,EAAEmB,EAAC;EAAC;EAACtD,CAAA,GAAEH,CAAA,CAAEG,CAAC,EAAE7B,MAAA,EAAO1B,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,GAAI3L,CAAA,CAAE7C,SAAA,CAAUK,MAAA,CAAO,UAASyC,CAAC,GAAED,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAA,CAAIO,OAAA,GAAQ2C,CAAA,CAAE,wIAAwI1B,MAAM,GAAE1B,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAA,CAAItC,MAAA,CAAOsC,GAAA,CAAIO,OAAA,GAAQ,kBAAiBT,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAA,CAAItC,MAAA,CAAO,YAAY,EAAE6C,OAAA,GAAQ,sEAAqET,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAA,CAAItC,MAAA,CAAOsC,GAAA,CAAItC,MAAA,CAAO,YAAY,IAAE,6BAA4BoC,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAA,CAAItC,MAAA,CAAOqG,OAAA,GAAQhE,CAAA,CAAEgE,OAAA,EAAQjE,CAAA,CAAE7C,SAAA,CAAUQ,YAAA,CAAa,UAAS,aAAY;IAAC+O,MAAA,EAAO;MAACjM,OAAA,EAAQ2C,CAAA,CAAE,WAAW1B,MAAM;MAAE9D,MAAA,EAAOoC,CAAA,CAAE7C,SAAA,CAAUwO;IAAG;EAAC,GAAE3L,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAG,GAAEF,CAAA,CAAE7C,SAAA,CAAUQ,YAAA,CAAa,UAAS,gBAAe;IAAC2H,MAAA,EAAO;MAAC7E,OAAA,EAAQ2C,CAAA,CAAE,YAAY1B,MAAM;MAAE/G,KAAA,EAAM;MAAsBiD,MAAA,EAAO;QAAC,sBAAqB;UAAC6C,OAAA,EAAQ;UAAW9F,KAAA,EAAM;QAAa;QAAEuE,IAAA,EAAKc,CAAA,CAAE7C,SAAA,CAAUwO;MAAG;IAAC;EAAC,GAAE3L,CAAA,CAAE7C,SAAA,CAAUwO,GAAA,CAAIzL,GAAG;EAAE,SAAShE,EAAEwJ,EAAA,EAAE;IAAC,SAAQmB,EAAA,GAAE,EAAC,EAAEC,EAAA,GAAE,GAAEA,EAAA,GAAEpB,EAAA,CAAE5F,MAAA,EAAOgH,EAAA,IAAI;MAAC,IAAIwB,EAAA,GAAE5C,EAAA,CAAEoB,EAAC;QAAEyB,EAAA,GAAE;MAAG,YAAU,OAAOD,EAAA,KAAI,UAAQA,EAAA,CAAE7N,IAAA,IAAM6N,EAAA,CAAE5N,OAAA,CAAQ,CAAC,KAAG,UAAQ4N,EAAA,CAAE5N,OAAA,CAAQ,CAAC,EAAED,IAAA,GAAK,SAAO6N,EAAA,CAAE5N,OAAA,CAAQ,CAAC,EAAEA,OAAA,CAAQ,CAAC,EAAEA,OAAA,GAAQ,IAAEmM,EAAA,CAAE/G,MAAA,IAAQ+G,EAAA,CAAEA,EAAA,CAAE/G,MAAA,GAAO,CAAC,EAAEgN,OAAA,KAAU9R,CAAA,CAAEsN,EAAA,CAAE5N,OAAA,CAAQ,CAAC,EAAEA,OAAA,CAAQ,CAAC,CAAC,KAAGmM,EAAA,CAAEkG,GAAA,CAAI,IAAE,SAAOzE,EAAA,CAAE5N,OAAA,CAAQ4N,EAAA,CAAE5N,OAAA,CAAQoF,MAAA,GAAO,CAAC,EAAEpF,OAAA,IAASmM,EAAA,CAAEjH,IAAA,CAAK;QAACkN,OAAA,EAAQ9R,CAAA,CAAEsN,EAAA,CAAE5N,OAAA,CAAQ,CAAC,EAAEA,OAAA,CAAQ,CAAC,CAAC;QAAEsS,YAAA,EAAa;MAAC,CAAC,IAAE,IAAEnG,EAAA,CAAE/G,MAAA,IAAQ,kBAAgBwI,EAAA,CAAE7N,IAAA,IAAM,QAAM6N,EAAA,CAAE5N,OAAA,GAAQmM,EAAA,CAAEA,EAAA,CAAE/G,MAAA,GAAO,CAAC,EAAEkN,YAAA,KAAe,IAAEnG,EAAA,CAAE/G,MAAA,IAAQ,IAAE+G,EAAA,CAAEA,EAAA,CAAE/G,MAAA,GAAO,CAAC,EAAEkN,YAAA,IAAc,kBAAgB1E,EAAA,CAAE7N,IAAA,IAAM,QAAM6N,EAAA,CAAE5N,OAAA,GAAQmM,EAAA,CAAEA,EAAA,CAAE/G,MAAA,GAAO,CAAC,EAAEkN,YAAA,KAAezE,EAAA,GAAE,QAAKA,EAAA,IAAG,YAAU,OAAOD,EAAA,KAAI,IAAEzB,EAAA,CAAE/G,MAAA,IAAQ,MAAI+G,EAAA,CAAEA,EAAA,CAAE/G,MAAA,GAAO,CAAC,EAAEkN,YAAA,KAAezE,EAAA,GAAEvN,CAAA,CAAEsN,EAAC,GAAExB,EAAA,GAAEpB,EAAA,CAAE5F,MAAA,GAAO,MAAI,YAAU,OAAO4F,EAAA,CAAEoB,EAAA,GAAE,CAAC,KAAG,iBAAepB,EAAA,CAAEoB,EAAA,GAAE,CAAC,EAAErM,IAAA,MAAQ8N,EAAA,IAAGvN,CAAA,CAAE0K,EAAA,CAAEoB,EAAA,GAAE,CAAC,CAAC,GAAEpB,EAAA,CAAE4F,MAAA,CAAOxE,EAAA,GAAE,GAAE,CAAC,IAAG,IAAEA,EAAA,KAAI,YAAU,OAAOpB,EAAA,CAAEoB,EAAA,GAAE,CAAC,KAAG,iBAAepB,EAAA,CAAEoB,EAAA,GAAE,CAAC,EAAErM,IAAA,MAAQ8N,EAAA,GAAEvN,CAAA,CAAE0K,EAAA,CAAEoB,EAAA,GAAE,CAAC,CAAC,IAAEyB,EAAA,EAAE7C,EAAA,CAAE4F,MAAA,CAAOxE,EAAA,GAAE,GAAE,CAAC,GAAEA,EAAA,KAAKpB,EAAA,CAAEoB,EAAC,IAAE,IAAI9G,CAAA,CAAExF,KAAA,CAAM,cAAa+N,EAAA,EAAE,MAAKA,EAAC,IAAGD,EAAA,CAAE5N,OAAA,IAAS,YAAU,OAAO4N,EAAA,CAAE5N,OAAA,IAASwB,CAAA,CAAEoM,EAAA,CAAE5N,OAAO;IAAC;EAAC;EAAC,IAAIM,CAAA,GAAE,SAAAA,CAAS0K,EAAA,EAAE;IAAC,OAAOA,EAAA,GAAE,YAAU,OAAOA,EAAA,GAAEA,EAAA,GAAE,YAAU,OAAOA,EAAA,CAAEhL,OAAA,GAAQgL,EAAA,CAAEhL,OAAA,GAAQgL,EAAA,CAAEhL,OAAA,CAAQI,GAAA,CAAIE,CAAC,EAAEuF,IAAA,CAAK,EAAE,IAAE;EAAE;EAAEP,CAAA,CAAEnB,KAAA,CAAM/B,GAAA,CAAI,kBAAiB,UAAS4I,EAAA,EAAE;IAAC,UAAQA,EAAA,CAAE/I,QAAA,IAAU,UAAQ+I,EAAA,CAAE/I,QAAA,IAAUT,CAAA,CAAEwJ,EAAA,CAAEnL,MAAM;EAAC,CAAC;AAAC,EAAE2I,KAAK,GAAE,UAASjD,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAEnD,CAAA,CAAE5F,IAAA,CAAKqB,KAAA,CAAMuE,CAAA,CAAE9C,SAAA,CAAUsO,UAAU;IAAErI,CAAA,IAAGnD,CAAA,CAAE9C,SAAA,CAAUyO,GAAA,GAAI3L,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,OAAM4F,CAAC,GAAE,OAAOnD,CAAA,CAAE9C,SAAA,CAAUyO,GAAA,CAAIlH,SAAA,EAAU,OAAOzE,CAAA,CAAE9C,SAAA,CAAUyO,GAAA,CAAI,kBAAkB,GAAE3L,CAAA,CAAE9C,SAAA,CAAUyO,GAAA,CAAI1L,GAAA;EAAKkD,CAAA,CAAE3C,OAAA,GAAQ7D,MAAA,CAAO,qBAAqB8E,MAAA,GAAO,QAAM0B,CAAA,CAAE3C,OAAA,CAAQiB,MAAA,GAAO,KAAI0B,CAAA,CAAE3C,OAAA,CAAQgB,KAAK,GAAE2B,CAAA,CAAEzC,UAAA,GAAW;AAAE,EAAEuC,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAU8P,KAAA,GAAM;EAAChJ,OAAA,EAAQ;IAACxD,OAAA,EAAQ;IAAuFE,UAAA,EAAW;IAAGY,MAAA,EAAO;EAAE;EAAE,kBAAiB,CAAC;IAACd,OAAA,EAAQ7D,MAAA,CAAO,YAAY8E,MAAA,GAAO,QAAM,8DAA8DA,MAAA,GAAO,MAAI,iEAAiEA,MAAA,GAAO,MAAI,WAAWA,MAAM;IAAEf,UAAA,EAAW;IAAGY,MAAA,EAAO;IAAG3D,MAAA,EAAO;MAACiH,aAAA,EAAc;QAACpE,OAAA,EAAQ;QAAoCE,UAAA,EAAW;QAAG/C,MAAA,EAAO;MAAI;MAAE,6BAA4B;QAAC6C,OAAA,EAAQ;QAAY9F,KAAA,EAAM;MAAa;MAAEwJ,WAAA,EAAY;MAAeD,MAAA,EAAO;IAAS;EAAC,GAAE;IAACzD,OAAA,EAAQ7D,MAAA,CAAO,gBAAgB8E,MAAA,GAAO,QAAM,gEAAgEA,MAAA,GAAO,MAAI,2DAA2DA,MAAA,GAAO,MAAM;IAAEf,UAAA,EAAW;IAAGY,MAAA,EAAO;IAAG3D,MAAA,EAAO;MAACiH,aAAA,EAAc;QAACpE,OAAA,EAAQ;QAAsCE,UAAA,EAAW;QAAG/C,MAAA,EAAO;MAAI;MAAE,6BAA4B;QAAC6C,OAAA,EAAQ;QAAc9F,KAAA,EAAM;MAAa;MAAEuJ,MAAA,EAAO;IAAS;EAAC,CAAC;EAAE+C,SAAA,EAAU;IAACxG,OAAA,EAAQ7D,MAAA,CAAO,IAAI8E,MAAA,GAAO,QAAM,kBAAkBA,MAAA,GAAO,aAAY,8GAA8GA,MAAA,GAAO,QAAM,mBAAmBA,MAAA,GAAO,GAAG;IAAE/G,KAAA,EAAM;IAAWiD,MAAA,EAAO;MAAC,kBAAiB;MAAQyG,OAAA,EAAQ;MAAqBE,MAAA,EAAO;MAAoBC,QAAA,EAAS;MAAmBL,WAAA,EAAY;IAAO;EAAC;EAAE+I,OAAA,EAAQ;IAACzM,OAAA,EAAQ;IAA2F9F,KAAA,EAAM;EAAU;EAAE,mBAAkB;IAAC8F,OAAA,EAAQ;IAAS9F,KAAA,EAAM;EAAU;EAAE0L,SAAA,EAAU;IAAC5F,OAAA,EAAQ;IAAO9F,KAAA,EAAM;EAAQ;EAAE,uBAAsB;IAAC8F,OAAA,EAAQ;IAAiBE,UAAA,EAAW;IAAGhG,KAAA,EAAM;EAAU;EAAEwS,KAAA,EAAM;IAAC1M,OAAA,EAAQ;IAA2EE,UAAA,EAAW;IAAGhG,KAAA,EAAM;EAAW;EAAEyJ,OAAA,EAAQ;EAAunBC,OAAA,EAAQ;EAAqB+I,GAAA,EAAI;IAAC3M,OAAA,EAAQ;IAAU9F,KAAA,EAAM;EAAU;EAAE,kBAAiB;EAAU0S,IAAA,EAAK;IAAC5M,OAAA,EAAQ;IAAQ9F,KAAA,EAAM;EAAS;EAAE4J,MAAA,EAAO;EAAkF,cAAa;EAAkCD,QAAA,EAAS;EAAwBK,QAAA,EAAS;EAAsCH,QAAA,EAAS;EAA0CL,WAAA,EAAY;AAAiB,GAAQjB,KAAA,CAAA/F,SAAA,CAAU8P,KAAA,CAAM,gBAAgB,EAAEjR,OAAA,CAAQ,UAASiE,CAAA,EAAE;EAACA,CAAA,CAAErC,MAAA,CAAOiH,aAAA,CAAcjH,MAAA,GAAasF,KAAA,CAAA/F,SAAA,CAAU8P,KAAA;AAAK,CAAC,GAAE,UAAShN,CAAA,EAAE;EAACA,CAAA,CAAE9C,SAAA,CAAUmQ,MAAA,GAAOrN,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,SAAQ;IAAC4G,OAAA,EAAQ;MAAC3D,OAAA,EAAQ;MAA2bE,UAAA,EAAW;IAAE;IAAE2D,QAAA,EAAS,CAAC;MAAC7D,OAAA,EAAQ;MAAiCc,MAAA,EAAO;IAAE,GAAE;MAACd,OAAA,EAAQ;MAAmCE,UAAA,EAAW;MAAGY,MAAA,EAAO;IAAE,CAAC;IAAEgD,MAAA,EAAO;IAAkIC,QAAA,EAAS;EAAsG,CAAC,GAAE,OAAOvE,CAAA,CAAE9C,SAAA,CAAUmQ,MAAA,CAAO,YAAY;EAAE,IAAIlK,CAAA,GAAE;IAAC,6BAA4B;MAAC3C,OAAA,EAAQ;MAAa9F,KAAA,EAAM;IAAa;IAAE4S,UAAA,EAAW;MAAC9M,OAAA,EAAQ;MAAU7C,MAAA,EAAOqC,CAAA,CAAE9C,SAAA,CAAUmQ;IAAM;EAAC;EAAErN,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,UAAS,UAAS;IAAC,kBAAiB,CAAC;MAAC8C,OAAA,EAAQ;MAA2C9F,KAAA,EAAM;MAAYiD,MAAA,EAAO;QAACiH,aAAA,EAAc;UAACpE,OAAA,EAAQ;UAA8B7C,MAAA,EAAOwF;QAAC;QAAEc,MAAA,EAAO;MAAS;IAAC,GAAE;MAACzD,OAAA,EAAQ;MAAiD9F,KAAA,EAAM;MAAaiD,MAAA,EAAO;QAACiH,aAAA,EAAc;UAACpE,OAAA,EAAQ;UAAqDE,UAAA,EAAW;UAAG/C,MAAA,EAAOwF;QAAC;QAAEc,MAAA,EAAO;MAAS;IAAC,CAAC;IAAEsJ,IAAA,EAAK;MAAC/M,OAAA,EAAQ;MAA6Cc,MAAA,EAAO;IAAE;EAAC,CAAC,GAAE,OAAOtB,CAAA,CAAE9C,SAAA,CAAUmQ,MAAA,CAAOpJ,MAAA,EAAOjE,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,UAAS,WAAU;IAAC2O,UAAA,EAAW;MAAC7L,OAAA,EAAQ;MAAsC9F,KAAA,EAAM;IAAS;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,UAAS,YAAW;IAACwP,KAAA,EAAM;MAAC1M,OAAA,EAAQ;MAAgB9F,KAAA,EAAM;IAAQ;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUsQ,EAAA,GAAGxN,CAAA,CAAE9C,SAAA,CAAUmQ,MAAA,EAAOrN,CAAA,CAAE9C,SAAA,CAAUuQ,GAAA,GAAIzN,CAAA,CAAE9C,SAAA,CAAUmQ,MAAA;AAAM,EAAEpK,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAUyL,CAAA,GAAQ1F,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,SAAQ;EAACyG,OAAA,EAAQ;IAACxD,OAAA,EAAQ;IAAsEc,MAAA,EAAO;EAAE;EAAE2C,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAsCc,MAAA,EAAO;EAAE;EAAE,cAAa;IAACd,OAAA,EAAQ;IAAmFE,UAAA,EAAW;EAAE;EAAEyD,OAAA,EAAQ;EAAoVE,QAAA,EAAS;EAAwBC,MAAA,EAAO;EAAoHC,QAAA,EAAS;AAAiD,CAAC,GAAQtB,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,KAAI,UAAS;EAAC6P,IAAA,EAAK;IAAC/M,OAAA,EAAQ;IAA2Cc,MAAA,EAAO;EAAE;AAAC,CAAC,GAAQ2B,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,KAAI,UAAS;EAACgQ,KAAA,EAAM;IAAClN,OAAA,EAAQ;IAA4FE,UAAA,EAAW;IAAGY,MAAA,EAAO;IAAG5G,KAAA,EAAM;IAAWiD,MAAA,EAAO;MAACsG,MAAA,EAAO,CAAC;QAACzD,OAAA,EAAQ;QAA2BE,UAAA,EAAW;MAAE,GAAQuC,KAAA,CAAA/F,SAAA,CAAUyL,CAAA,CAAE1E,MAAM;MAAEsJ,IAAA,EAAWtK,KAAA,CAAA/F,SAAA,CAAUyL,CAAA,CAAE4E,IAAA;MAAKvJ,OAAA,EAAcf,KAAA,CAAA/F,SAAA,CAAUyL,CAAA,CAAE3E,OAAA;MAAQ,cAAa,CAAC;QAACxD,OAAA,EAAQ;QAA+BE,UAAA,EAAW;MAAE,GAAE;QAACF,OAAA,EAAQ;QAA+BE,UAAA,EAAW;QAAGhG,KAAA,EAAM;MAAU,CAAC;MAAEsM,SAAA,EAAU;QAACxG,OAAA,EAAQ;QAAgBE,UAAA,EAAW;QAAGhG,KAAA,EAAM;MAAS;MAAE,kBAAiB;MAAKwJ,WAAA,EAAY;MAAkBoJ,UAAA,EAAW;QAAC9M,OAAA,EAAQ;QAAY7C,MAAA,EAAasF,KAAA,CAAA/F,SAAA,CAAUyL;MAAC;IAAC;EAAC;AAAC,CAAC,GAAQ1F,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,KAAI,YAAW;EAACgH,QAAA,EAAS;AAA4H,CAAC,GAAE,OAAazB,KAAA,CAAA/F,SAAA,CAAUyL,CAAA,CAAEvE,OAAA,EAAcnB,KAAA,CAAA/F,SAAA,CAAUyQ,UAAA,GAAiB1K,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,KAAI;EAAC0G,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAwCc,MAAA,EAAO;EAAE;EAAE6C,OAAA,EAAQ;EAAwYI,QAAA,EAAS;AAAuD,CAAC,GAAE,OAAatB,KAAA,CAAA/F,SAAA,CAAUyQ,UAAA,CAAW,YAAY,GAAQ1K,KAAA,CAAA/F,SAAA,CAAU0Q,IAAA,GAAW3K,KAAA,CAAA/F,SAAA,CAAUyQ,UAAA,EAAiB1K,KAAA,CAAA/F,SAAA,CAAU2Q,MAAA,GAAa5K,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,SAAQ;EAAC0G,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAsCc,MAAA,EAAO;EAAE;EAAE,cAAa;EAAa6C,OAAA,EAAQ;EAA4RI,QAAA,EAAS;AAAqG,CAAC,GAAQtB,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,UAAS,cAAa;EAAC6P,IAAA,EAAK;IAAC/M,OAAA,EAAQ;IAAgEc,MAAA,EAAO;EAAE;EAAEwM,WAAA,EAAY;EAAwBZ,KAAA,EAAM;IAAC1M,OAAA,EAAQ;IAAmB9F,KAAA,EAAM;EAAQ;AAAC,CAAC,GAAE,OAAauI,KAAA,CAAA/F,SAAA,CAAU2Q,MAAA,CAAOxJ,QAAA,EAAS,UAASrE,CAAA,EAAE;EAAC,SAAQmD,CAAA,GAAE,8CAA8C1B,MAAA,EAAO2B,CAAA,GAAE,GAAEA,CAAA,GAAE,GAAEA,CAAA,IAAID,CAAA,GAAEA,CAAA,CAAErI,OAAA,CAAQ,WAAU,YAAU;IAAC,OAAOqI,CAAA;EAAC,CAAC;EAAEA,CAAA,GAAEA,CAAA,CAAErI,OAAA,CAAQ,WAAU,YAAU;IAAC,OAAM,UAAU2G,MAAA;EAAM,CAAC,GAAEzB,CAAA,CAAE9C,SAAA,CAAU6Q,IAAA,GAAK;IAAC/J,OAAA,EAAQ,CAAC;MAACxD,OAAA,EAAQ7D,MAAA,CAAO,YAAY8E,MAAA,GAAO0B,CAAC;MAAEzC,UAAA,EAAW;MAAGY,MAAA,EAAO;IAAE,GAAE;MAACd,OAAA,EAAQ;MAAmBE,UAAA,EAAW;MAAGY,MAAA,EAAO;IAAE,CAAC;IAAE2C,MAAA,EAAO;MAACzD,OAAA,EAAQ;MAAwDc,MAAA,EAAO;IAAE;IAAEiM,IAAA,EAAK;MAAC/M,OAAA,EAAQ;MAA2Ec,MAAA,EAAO;IAAE;IAAE8E,SAAA,EAAU;MAAC5F,OAAA,EAAQ;MAA8Cc,MAAA,EAAO;MAAG5G,KAAA,EAAM;MAAYiD,MAAA,EAAO;QAACsG,MAAA,EAAO;MAAI;IAAC;IAAE,kBAAiB;MAACzD,OAAA,EAAQ;MAA2DE,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG3D,MAAA,EAAO;QAAC,uBAAsB;UAAC6C,OAAA,EAAQ;UAAU9F,KAAA,EAAM;QAAa;QAAEuE,IAAA,EAAK;MAAI;IAAC;IAAE,uBAAsB;MAACuB,OAAA,EAAQ;MAAO9F,KAAA,EAAM;IAAQ;IAAE,sBAAqB;MAAC8F,OAAA,EAAQ;MAAiBE,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAa;IAAE6L,QAAA,EAAS;IAAQ,uBAAsB;MAAC/F,OAAA,EAAQ;MAAeE,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAU;IAAE,mBAAkB;MAAC8F,OAAA,EAAQ;MAA6CE,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAY;IAAE,sBAAqB,CAAC;MAAC8F,OAAA,EAAQ;MAAqCE,UAAA,EAAW;MAAGhG,KAAA,EAAM;IAAW,GAAE;MAAC8F,OAAA,EAAQ;MAAwFE,UAAA,EAAW;MAAGhG,KAAA,EAAM;MAAYiD,MAAA,EAAO;QAACuG,WAAA,EAAY;MAAI;IAAC,CAAC;IAAEC,OAAA,EAAQ,CAAC,+RAA8R,8DAA8D;IAAEE,QAAA,EAAS;IAAkCqJ,KAAA,EAAM;MAAClN,OAAA,EAAQ;MAAS9F,KAAA,EAAM;IAAU;IAAEgK,QAAA,EAAS;IAAsB,cAAa;IAAe2B,SAAA,EAAU;MAAC7F,OAAA,EAAQ;MAA6D7C,MAAA,EAAO;QAACuG,WAAA,EAAY;MAAI;IAAC;IAAEI,MAAA,EAAO;IAA6KF,OAAA,EAAQ;IAAqBF,WAAA,EAAY;IAAmCK,QAAA,EAAS;EAAqD,GAAEvE,CAAA,CAAE9C,SAAA,CAAU6Q,IAAA,CAAK,gBAAgB,EAAEpQ,MAAA,CAAOsB,IAAA,GAAKe,CAAA,CAAE9C,SAAA,CAAU6Q,IAAA,EAAK/N,CAAA,CAAE9C,SAAA,CAAU6Q,IAAA,CAAK3H,SAAA,CAAUzI,MAAA,CAAOsG,MAAA,GAAOjE,CAAA,CAAE9C,SAAA,CAAU6Q,IAAA,CAAK9J,MAAA;AAAM,EAAEhB,KAAK,GAAQA,KAAA,CAAA/F,SAAA,CAAU8Q,EAAA,GAAS/K,KAAA,CAAA/F,SAAA,CAAUK,MAAA,CAAO,SAAQ;EAAC0G,MAAA,EAAO;IAACzD,OAAA,EAAQ;IAAyCE,UAAA,EAAW;IAAGY,MAAA,EAAO;EAAE;EAAE6C,OAAA,EAAQ;EAAsKC,OAAA,EAAQ;EAAgCE,MAAA,EAAO,CAAC,gCAA+B,iFAAgF,oEAAoE;EAAEC,QAAA,EAAS;EAAwFqH,OAAA,EAAQ;AAA0L,CAAC,GAAQ3I,KAAA,CAAA/F,SAAA,CAAUQ,YAAA,CAAa,MAAK,UAAS;EAAC6P,IAAA,EAAK;IAAC/M,OAAA,EAAQ;IAA6Bc,MAAA,EAAO;EAAE;AAAC,CAAC,GAAE,OAAa2B,KAAA,CAAA/F,SAAA,CAAU8Q,EAAA,CAAG,YAAY,GAAE,UAAShO,CAAA,EAAE;EAAC,IAAImD,CAAA,GAAE;IAAosBC,CAAA,GAAE,uCAAuC3B,MAAA,CAAO3G,OAAA,CAAQ,cAAa,YAAU;MAAC,OAAOqI,CAAA,CAAE1B,MAAA;IAAM,CAAC;EAAEzB,CAAA,CAAE9C,SAAA,CAAU+Q,GAAA,GAAIjO,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,KAAI;IAAC,cAAa,CAAC;MAACiD,OAAA,EAAQ7D,MAAA,CAAO,gEAAgE8E,MAAA,CAAO3G,OAAA,CAAQ,cAAa,YAAU;QAAC,OAAOqI,CAAA,CAAE1B,MAAA;MAAM,CAAC,CAAC;MAAEf,UAAA,EAAW;IAAE,GAAE,kCAAiC,qCAAoC,gEAAgE;IAAEyD,OAAA,EAAQhB,CAAA;IAAEmB,MAAA,EAAO;MAAC9D,OAAA,EAAQ;MAAiJc,MAAA,EAAO;IAAE;IAAEiD,QAAA,EAAS;IAAyHH,OAAA,EAAQ;EAAoB,CAAC,GAAEpE,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,OAAM,UAAS;IAAC5D,MAAA,EAAO;MAAC0G,OAAA,EAAQ7D,MAAA,CAAO,2BAA2B8E,MAAA,GAAO,QAAM,mDAAmDA,MAAA,GAAO,MAAI,kDAAkDA,MAAA,CAAO3G,OAAA,CAAQ,eAAc,YAAU;QAAC,OAAOsI,CAAA;MAAC,CAAC,IAAE,GAAG;MAAE1C,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG3D,MAAA,EAAO;QAACsG,MAAA,EAAO;QAAeM,QAAA,EAAS;QAAIL,WAAA,EAAY;MAAI;IAAC;IAAE,cAAa;MAAC1D,OAAA,EAAQ;MAAoC9F,KAAA,EAAM;MAAS4G,MAAA,EAAO;IAAE;EAAC,CAAC,GAAEtB,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,OAAM,WAAU;IAAC,oBAAmB;MAAC8C,OAAA,EAAQ;MAA8D7C,MAAA,EAAO;QAAC0G,QAAA,EAAS;QAAO0H,OAAA,EAAQ;UAACvL,OAAA,EAAQ;UAAW9F,KAAA,EAAM;UAAaiD,MAAA,EAAOqC,CAAA,CAAE9C,SAAA,CAAU+Q;QAAG;MAAC;IAAC;EAAC,CAAC,GAAEjO,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,OAAM,YAAW;IAAC,gBAAe;MAAC8C,OAAA,EAAQ;MAAK9F,KAAA,EAAM;IAAa;EAAC,CAAC,GAAEsF,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,OAAM,cAAa;IAAC,eAAc;MAAC8C,OAAA,EAAQ;MAA6EE,UAAA,EAAW;MAAGY,MAAA,EAAO;MAAG3D,MAAA,EAAOqC,CAAA,CAAE9C,SAAA,CAAUK,MAAA,CAAO,OAAM,CAAC,CAAC;IAAC;EAAC,CAAC,GAAEyC,CAAA,CAAE9C,SAAA,CAAUQ,YAAA,CAAa,UAAS,gBAAe;IAAC,cAAa;EAAyB,GAAEsC,CAAA,CAAE9C,SAAA,CAAU+Q,GAAA,CAAI,aAAa,CAAC;AAAC,EAAEhL,KAAK;;;ACH3/tD,IAAAiL,cAAA;AAAAC,QAAA,CAAAD,cAAA;EAAAE,OAAA,EAAAA,CAAA,KAAAC,eAAA;EAAAC,WAAA,EAAAA,CAAA,KAAAC,mBAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAC,oBAAA;EAAAC,MAAA,EAAAA,CAAA,KAAAC,cAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAC,oBAAA;EAAAC,aAAA,EAAAA,CAAA,KAAAC,qBAAA;EAAAC,QAAA,EAAAA,CAAA,KAAAC,gBAAA;EAAAC,aAAA,EAAAA,CAAA,KAAAC,qBAAA;EAAAC,WAAA,EAAAA,CAAA,KAAAC,mBAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAC,eAAA;EAAAC,SAAA,EAAAA,CAAA,KAAAC,iBAAA;EAAAC,cAAA,EAAAA,CAAA,KAAAC,sBAAA;EAAAC,WAAA,EAAAA,CAAA,KAAAC,mBAAA;EAAAC,QAAA,EAAAA,CAAA,KAAAC,gBAAA;EAAAC,MAAA,EAAAA,CAAA,KAAAC,cAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAC;AAAA;;;ACGA,IAAMC,KAAA,GAAoB;EACxBjT,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,UAAU,YAAY,SAAS;IACvCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,UAAU;IAC9BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,QAAQ;IAC/BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,QAAQ,OAAO,UAAU;IAC3CC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,UAAU;IAC7BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAO4H,eAAA,GAAQ+B,KAAA;;;AC7Df,IAAMM,MAAA,GAAoB;EACxBvT,KAAA,EAAO;IACLkT,eAAA,EAAiB;IACjB5J,KAAA,EAAO;EACT;EACA6J,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,WAAW,UAAU,WAAW,SAAS,aAAa;IAC9DC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACLG,OAAA,EAAS;IACX;EACF,GACA;IACEJ,KAAA,EAAO,CAAC,OAAO,YAAY,QAAQ;IACnCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,UAAU;IAC9BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,YAAY,WAAW;IACzCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CACL,WACA,UACA,UACA,OACA,cACA,WACA,WACA,aACA,QACA,aACA,SACA,UACA,eACA,WACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACLI,kBAAA,EAAoB;IACtB;EACF,GACA;IACEL,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACLI,kBAAA,EAAoB;IACtB;EACF,GACA;IACEL,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACLC,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,aAAa,MAAM;IAC3BC,KAAA,EAAO;MACLK,UAAA,EAAY;IACd;EACF,GACA;IACEN,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAO8H,mBAAA,GAAQmC,MAAA;;;AC/Ff,IAAMI,MAAA,GAAoB;EACxB3T,KAAA,EAAO;IACLkT,eAAA,EAAiB;IACjB5J,KAAA,EAAO;EACT;EACA6J,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,WAAW,UAAU,WAAW,SAAS,aAAa;IAC9DC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACLG,OAAA,EAAS;IACX;EACF,GACA;IACEJ,KAAA,EAAO,CAAC,OAAO,YAAY,QAAQ;IACnCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,UAAU;IAC9BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,YAAY,WAAW;IACzCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CACL,WACA,UACA,UACA,OACA,cACA,WACA,WACA,aACA,QACA,aACA,SACA,SACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,UAAU;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACLI,kBAAA,EAAoB;IACtB;EACF,GACA;IACEL,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACLI,kBAAA,EAAoB;IACtB;EACF,GACA;IACEL,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACLC,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,aAAa,MAAM;IAC3BC,KAAA,EAAO;MACLK,UAAA,EAAY;IACd;EACF,GACA;IACEN,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOgI,oBAAA,GAAQqC,MAAA;;;ACtGf,IAAMC,MAAA,GAAoB;EACxB5T,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,WAAW,UAAU,WAAW,OAAO;IAC/CC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACLG,OAAA,EAAS;IACX;EACF,GACA;IACEJ,KAAA,EAAO,CAAC,UAAU,YAAY;IAC9BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,UAAU;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CACL,UACA,OACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,WAAW,aAAa,UAAU;IACpDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,WAAW,KAAK;IACpCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,mBAAmB;IAC3BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,OAAO,YAAY,SAAS;IACpCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOkI,cAAA,GAAQoC,MAAA;;;ACzEf,IAAMC,MAAA,GAAoB;EACxB7T,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,YAAY,WAAW;IAC/BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,UAAU,KAAK;IACvBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,QAAQ,YAAY,UAAU;IACjDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IAAA;IAAA;IAGE8J,KAAA,EAAO,CAAC,aAAa;IACrBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,SAAS;IAC7BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,OAAO,YAAY,SAAS;IACpCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOwI,gBAAA,GAAQ+B,MAAA;;;ACzGf,IAAMC,MAAA,GAAoB;EACxB9T,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,YAAY,WAAW;IAC/BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,UAAU,WAAW,QAAQ,YAAY,KAAK;IACtDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IAAA;IAAA;IAGE8J,KAAA,EAAO,CAAC,aAAa;IACrBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,YAAY,SAAS;IACzCC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,YAAY,WAAW,WAAW;IACtDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAO0I,qBAAA,GAAQ8B,MAAA;;;AC3Ff,IAAMC,MAAA,GAAS;EACb3D,IAAA,EAAM;EACNvJ,OAAA,EAAS;EACTG,OAAA,EAAS;EACTgN,SAAA,EAAW;EACXlN,MAAA,EAAQ;EACRsC,QAAA,EAAU;EACVnC,OAAA,EAAS;EACTF,WAAA,EAAa;EACbjE,GAAA,EAAK;EACLoE,QAAA,EAAU;EACV/H,SAAA,EAAW;EACXiQ,MAAA,EAAQ;EACRhI,QAAA,EAAU;AACZ;AACA,IAAM6M,MAAA,GAAoB;EACxBjU,KAAA,EAAO;IACLkT,eAAA,EAAiB;IACjB5J,KAAA,EAAO;EACT;EACA6J,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO/M;IAChB;EACF,GACA;IACEoM,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAOjN;IAChB;EACF,GACA;IACEsM,KAAA,EAAO,CACL,WACA,iBACA,UACA,WACA,SACA,UACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAOlN;IAChB;EACF,GACA;IACEuM,KAAA,EAAO,CACL,YACA,UACA,iBACA,YACA,UACA,UACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAOC;IAChB;EACF,GACA;IACEZ,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO9M;IAChB;EACF,GACA;IACEmM,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAOjR;IAChB;EACF,GACA;IACEsQ,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAOjN;IAChB;EACF,GACA;IACEsM,KAAA,EAAO,CAAC,aAAa;IACrBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAOjN;IAChB;EACF,GACA;IACEsM,KAAA,EAAO,CAAC,YAAY,QAAQ,WAAW,UAAU;IACjDC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO3D;IAChB;EACF,GACA;IACEgD,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO7M;IAChB;EACF,GACA;IACEkM,KAAA,EAAO,CAAC,YAAY,UAAU,OAAO,UAAU;IAC/CC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO3K;IAChB;EACF,GACA;IACEgK,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO/M;IAChB;EACF,GACA;IACEoM,KAAA,EAAO,CAAC,UAAU,YAAY;IAC9BC,KAAA,EAAO;MACL/J,KAAA,EAAOyK,MAAA,CAAO5U;IAChB;EACF,GACA;IACEiU,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACLK,UAAA,EAAY;IACd;EACF,GACA;IACEN,KAAA,EAAO,CAAC,MAAM;IACdC,KAAA,EAAO;MACLK,UAAA,EAAY;IACd;EACF,GACA;IACEN,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACLC,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACLG,OAAA,EAAS;IACX;EACF;AAEJ;AACA,IAAOtB,mBAAA,GAAQ+B,MAAA;;;AC1If,IAAMC,MAAA,GAAoB;EACxBlU,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,UAAU,KAAK;IACvBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,QAAQ,YAAY,YAAY,YAAY;IAC/DC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa;IACrBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,SAAS;IAC7BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,OAAO,YAAY,SAAS;IACpCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPkK,OAAA,EAAS;IACX;EACF,GACA;IACEJ,KAAA,EAAO,CAAC,OAAO,UAAU;IACzBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,MAAM;IACdC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAO8I,eAAA,GAAQ8B,MAAA;;;ACxHf,IAAMC,MAAA,GAAoB;EACxBnU,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,UAAU,UAAU;IAC5BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,QAAQ,YAAY,UAAU;IACjDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,UAAU;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,cAAc,WAAW;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,OAAO,SAAS;IACxBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACLC,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOgJ,iBAAA,GAAQ6B,MAAA;;;AC3Ff,IAAMC,OAAA,GAAoB;EACxBpU,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,aAAa;IACrBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,KAAK;IACvBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,SAAS;IAC3BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CACL,WACA,YACA,YACA,aACA,OACA,YACA,UACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,QAAQ,YAAY,YAAY,YAAY;IAC/DC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOkJ,sBAAA,GAAQ4B,OAAA;;;ACtFf,IAAMC,OAAA,GAAoB;EACxBrU,KAAA,EAAO;IACLkT,eAAA,EAAiB;IACjBoB,eAAA,EAAiB;IACjBhL,KAAA,EAAO;IACPiL,UAAA,EAAY;EACd;EACApB,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,WAAW,iBAAiB,UAAU,WAAW,OAAO;IAChEC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPgK,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,aAAa;IACrBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CACL,OACA,aACA,aACA,UACA,QACA,WACA,UACF;IACAC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,UAAU;IAC9BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPiL,UAAA,EAAY;IACd;EACF,GACA;IACEnB,KAAA,EAAO,CAAC,eAAe;IACvBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,eAAe,UAAU;IAC5CC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPiL,UAAA,EACE;IACJ;EACF,GACA;IACEnB,KAAA,EAAO,CAAC,cAAc,oBAAoB,SAAS;IACnDC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPiL,UAAA,EACE;IACJ;EACF,GACA;IACEnB,KAAA,EAAO,CAAC,YAAY,QAAQ;IAC5BC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPiL,UAAA,EAAY;IACd;EACF,GACA;IACEnB,KAAA,EAAO,CAAC,aAAa,UAAU,WAAW,gBAAgB;IAC1DC,KAAA,EAAO;MACL/J,KAAA,EAAO;MACPiL,UAAA,EAAY;IACd;EACF,GACA;IACEnB,KAAA,EAAO,CAAC,UAAU,QAAQ,cAAc,SAAS,UAAU;IAC3DC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACLC,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,UAAU,KAAK;IACvBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa,MAAM;IAC3BC,KAAA,EAAO;MACLK,UAAA,EAAY;IACd;EACF,GACA;IACEN,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACLC,SAAA,EAAW;IACb;EACF,GACA;IACEF,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACLmB,MAAA,EAAQ;IACV;EACF,GACA;IACEpB,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOoJ,mBAAA,GAAQ2B,OAAA;;;ACrIf,IAAMI,OAAA,GAAoB;EACxBzU,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,UAAU,WAAW,UAAU;IACjDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,cAAc,YAAY,OAAO,WAAW;IACpDC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOsJ,gBAAA,GAAQ6B,OAAA;;;AC3Bf,IAAMC,OAAA,GAAoB;EACxB1U,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,WAAW,WAAW,2BAA2B;IACpEC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,UAAU;IAC5BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa,UAAU;IAC/BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,UAAU,cAAc,sBAAsB;IACjEC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IAAA;IAEE8J,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IAAA;IAEE8J,KAAA,EAAO,CAAC,KAAK;IACbrT,SAAA,EAAW,CAAC,QAAQ;IACpBsT,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,UAAU;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IAAA;IAEE8J,KAAA,EAAO,CAAC,aAAa;IACrBrT,SAAA,EAAW,CAAC,QAAQ;IACpBsT,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,MAAM;IACdC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOwJ,cAAA,GAAQ4B,OAAA;;;ACvGf,IAAMC,OAAA,GAAoB;EACxB3U,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,YAAY,UAAU;IACxCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,MAAM;IAC1BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW;IACnBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,QAAQ;IAC3BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,aAAa;IAChCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY,SAAS;IAC7BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAO0J,eAAA,GAAQ2B,OAAA;;;ACtEf,IAAMC,OAAA,GAAoB;EACxB5U,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,WAAW,WAAW,2BAA2B;IACpEC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,UAAU;IAC5BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa,UAAU;IAC/BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,UAAU,cAAc,sBAAsB;IACjEC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbrT,SAAA,EAAW,CAAC,QAAQ;IACpBsT,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,UAAU;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa;IACrBrT,SAAA,EAAW,CAAC,QAAQ;IACpBsT,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,MAAM;IACdC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOoI,oBAAA,GAAQkD,OAAA;;;ACtGf,IAAMC,OAAA,GAAoB;EACxB7U,KAAA,EAAO;IACLsJ,KAAA,EAAO;IACP4J,eAAA,EAAiB;EACnB;EACAC,MAAA,EAAQ,CACN;IACEC,KAAA,EAAO,CAAC,QAAQ;IAChBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,SAAS;IACjBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,WAAW,WAAW,2BAA2B;IACpEC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU,UAAU;IAC5BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa,UAAU;IAC/BC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,WAAW,UAAU,cAAc,sBAAsB;IACjEC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,KAAK;IACbrT,SAAA,EAAW,CAAC,QAAQ;IACpBsT,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,eAAe,UAAU;IACjCC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,aAAa;IACrBrT,SAAA,EAAW,CAAC,QAAQ;IACpBsT,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,UAAU;IAClBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,YAAY;IACpBC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF,GACA;IACE8J,KAAA,EAAO,CAAC,MAAM;IACdC,KAAA,EAAO;MACL/J,KAAA,EAAO;IACT;EACF;AAEJ;AACA,IAAOsI,qBAAA,GAAQiD,OAAA;;;ACtGf,SAASC,aAAA,QAAqB;;;ACD9B,SAASC,SAAA,EAAWC,MAAA,EAAQC,QAAA,QAAgB;;;ACM5C,IAAMC,WAAA,GAAcA,CAACC,OAAA,EAAmB5V,QAAA,KAAkC;EACxE,MAAM;IAAES;EAAM,IAAImV,OAAA;EAClB,MAAMC,SAAA,GAAYD,OAAA,CAAMhC,MAAA,CAAOkC,MAAA,CAAkB,CAACC,GAAA,EAAKC,UAAA,KAAe;IACpE,MAAM;MAAExV,SAAA,EAAAyV,UAAA;MAAWnC;IAAM,IAAIkC,UAAA;IAE7B,IAAIC,UAAA,IAAa,CAACA,UAAA,CAAUC,QAAA,CAASlW,QAAQ,GAAG;MAC9C,OAAO+V,GAAA;IACT;IAEAC,UAAA,CAAWnC,KAAA,CAAMxU,OAAA,CAAQvB,IAAA,IAAQ;MAC/B,MAAMqY,QAAA,GAAqBC,cAAA,CAAAA,cAAA,KAAKL,GAAA,CAAIjY,IAAI,IAAMgW,KAAA;MAC9CiC,GAAA,CAAIjY,IAAI,IAAIqY,QAAA;IACd,CAAC;IACD,OAAOJ,GAAA;EACT,GAAG,CAAC,CAAc;EAElBF,SAAA,CAAUzU,IAAA,GAAOX,KAAA;EACjBoV,SAAA,CAAUpV,KAAA,GAAQ4V,aAAA,CAAAD,cAAA,KAAK3V,KAAA,GAAL;IAAYkT,eAAA,EAAiB;EAAU;EACzD,OAAOkC,SAAA;AACT;AAEA,IAAOS,mBAAA,GAAQX,WAAA;;;ADxBR,IAAMY,kBAAA,GAAqBA,CAACvW,QAAA,EAAoB4V,OAAA,KAAsB;EAC3E,MAAM,CAACY,eAAA,EAAiBC,kBAAkB,IAAIf,QAAA,CAC5CY,mBAAA,CAAYV,OAAA,EAAO5V,QAAQ,CAC7B;EACA,MAAM0W,aAAA,GAAgBjB,MAAA,CAAmB;EACzC,MAAMkB,gBAAA,GAAmBlB,MAAA,CAAiB;EAE1CD,SAAA,CAAU,MAAM;IACd,IACEI,OAAA,KAAUc,aAAA,CAAcE,OAAA,IACxB5W,QAAA,KAAa2W,gBAAA,CAAiBC,OAAA,EAC9B;MACAF,aAAA,CAAcE,OAAA,GAAUhB,OAAA;MACxBe,gBAAA,CAAiBC,OAAA,GAAU5W,QAAA;MAC3ByW,kBAAA,CAAmBH,mBAAA,CAAYV,OAAA,EAAO5V,QAAQ,CAAC;IACjD;EACF,GAAG,CAACA,QAAA,EAAU4V,OAAK,CAAC;EAEpB,OAAOY,eAAA;AACT;;;AEtBA,SAASK,WAAA,QAAmB;AAE5B,OAAOC,IAAA,MAAU;AAEV,IAAMC,eAAA,GAAmBP,eAAA,IAC9BK,WAAA,CACGG,EAAA,IAAwD;EAAxD,IAAAC,EAAA,GAAAD,EAAA;IAAE;MAAApX,SAAA;MAAWkU,KAAA;MAAOoD;IAPzB,IAOKD,EAAA;IAA6B1U,IAAA,GAAA4U,SAAA,CAA7BF,EAAA,EAA6B,CAA3B,aAAW,SAAO;EACnB,MAAMG,MAAA,GAA0Bf,aAAA,CAAAD,cAAA,KAC3B7T,IAAA,GAD2B;IAE9B3C,SAAA,EAAWkX,IAAA,CAAK,cAAclX,SAAS;EACzC;EAEA,IAAI,OAAO4W,eAAA,KAAoB,YAAY,WAAWA,eAAA,EACpDY,MAAA,CAAOtD,KAAA,GAAQ0C,eAAA,CAAgB/V,KAAA;EAEjC,IAAI,OAAOqT,KAAA,KAAU,UACnBsD,MAAA,CAAOtD,KAAA,GAAQsC,cAAA,CAAAA,cAAA,KAAMgB,MAAA,CAAOtD,KAAA,IAAS,CAAC,IAAOA,KAAA;EAE/C,OAAOsD,MAAA;AACT,GACA,CAACZ,eAAe,CAClB;;;ACrBF,SAAwBK,WAAA,IAAAQ,YAAA,QAAmB;AAE3C,OAAOC,KAAA,MAAU;AAEV,IAAMC,gBAAA,GAAoBf,eAAA,IAAgC;EAC/D,MAAMgB,aAAA,GAAgBH,YAAA,CACpBI,IAAA,IAA6B;IAAA,IAA5B;MAAE5D,KAAA;MAAO6D;IAAM,IAAAD,IAAA;IACd,IAAIjB,eAAA,IAAmB,MAAM,OAAO,gBAC3B3C,KAAA,CAAM1Q,MAAA,KAAW,KAAK0Q,KAAA,CAAM,CAAC,MAAM,SAAS;MACnD,OAAO6D,KAAA,IAAS,OAAO;QAAEC,OAAA,EAAS;MAAe,IAAI;IACvD,WAAW9D,KAAA,CAAM1Q,MAAA,KAAW,KAAKuU,KAAA,IAAS,MAAM;MAC9C,OAAOlB,eAAA,CAAgB3C,KAAA,CAAM,CAAC,CAAC;IACjC;IAEA,OAAOvV,MAAA,CAAOsZ,MAAA,CACZF,KAAA,IAAS,OAAO;MAAEC,OAAA,EAAS;IAAe,IAAI,CAAC,GAC/C,GAAG9D,KAAA,CAAM1V,GAAA,CAAIL,IAAA,IAAQ0Y,eAAA,CAAgB1Y,IAAI,CAAC,CAC5C;EACF,GACA,CAAC0Y,eAAe,CAClB;EAEA,OAAOa,YAAA,CACJL,EAAA,IAA0D;IAA1D,IAAAC,EAAA,GAAAD,EAAA;MAAE;QAAAzV,KAAA;QAAO3B,SAAA;QAAWkU;MAxBzB,IAwBKmD,EAAA;MAA8B1U,IAAA,GAAA4U,SAAA,CAA9BF,EAAA,EAA8B,CAA5B,SAAO,aAAW;IACnB,MAAMG,MAAA,GAA2Bf,aAAA,CAAAD,cAAA,KAC5B7T,IAAA,GAD4B;MAE/B3C,SAAA,EAAW0X,KAAA,CAAK,SAAS,GAAG/V,KAAA,CAAMsS,KAAA,EAAOjU,SAAS;MAClDiY,QAAA,EAAUtW,KAAA,CAAMxD,OAAA;MAChB+V,KAAA,EAAO0D,aAAA,CAAcjW,KAAK;IAC5B;IAEA,IAAIuS,KAAA,IAAS,MAAM;MACjBsD,MAAA,CAAOtD,KAAA,GAAQsC,cAAA,CAAAA,cAAA,KACTgB,MAAA,CAAOtD,KAAA,IAAS,CAAC,IAClBA,KAAA;IAEP;IAEA,OAAOsD,MAAA;EACT,GACA,CAACI,aAAa,CAChB;AACF;;;ACxCA,IAAMM,SAAA,GAAY;AAGlB,IAAMC,mBAAA,GAAuBb,IAAA,IAAkB;EAC7C,IAAIA,IAAA,CAAK/T,MAAA,KAAW,GAAG;IACrB+T,IAAA,CAAKjU,IAAA,CAAK;MACR4Q,KAAA,EAAO,CAAC,OAAO;MACf9V,OAAA,EAAS;MACT2Z,KAAA,EAAO;IACT,CAAC;EACH,WAAWR,IAAA,CAAK/T,MAAA,KAAW,KAAK+T,IAAA,CAAK,CAAC,EAAEnZ,OAAA,KAAY,IAAI;IACtDmZ,IAAA,CAAK,CAAC,EAAEnZ,OAAA,GAAU;IAClBmZ,IAAA,CAAK,CAAC,EAAEQ,KAAA,GAAQ;EAClB;AACF;AAEA,IAAMM,WAAA,GAAcA,CAACnE,KAAA,EAAiB1T,GAAA,KAAqC;EACzE,MAAM8X,SAAA,GAAYpE,KAAA,CAAM1Q,MAAA;EAExB,IAAI8U,SAAA,GAAY,KAAKpE,KAAA,CAAMoE,SAAA,GAAY,CAAC,MAAM9X,GAAA,EAAK;IACjD,OAAO0T,KAAA;EACT;EAEA,OAAOA,KAAA,CAAMjF,MAAA,CAAOzO,GAAG;AACzB;AAQA,IAAM+X,eAAA,GAAmBta,MAAA,IAA+C;EACtE,MAAMua,YAAA,GAA2B,CAAC,EAAE;EACpC,MAAMC,aAAA,GAAgB,CAACxa,MAAM;EAC7B,MAAMya,kBAAA,GAAqB,CAAC,CAAC;EAC7B,MAAMC,iBAAA,GAAoB,CAAC1a,MAAA,CAAOuF,MAAM;EACxC,IAAI5D,CAAA,GAAI;EACR,IAAIgZ,UAAA,GAAa;EACjB,IAAIC,WAAA,GAAuB,EAAC;EAC5B,MAAMzC,GAAA,GAAM,CAACyC,WAAW;EAExB,OAAOD,UAAA,GAAa,IAAI;IACtB,QACGhZ,CAAA,GAAI8Y,kBAAA,CAAmBE,UAAU,OAAOD,iBAAA,CAAkBC,UAAU,GACrE;MACA,IAAIxa,OAAA;MACJ,IAAI8V,KAAA,GAAQsE,YAAA,CAAaI,UAAU;MACnC,MAAME,QAAA,GAAWL,aAAA,CAAcG,UAAU;MACzC,MAAMhX,KAAA,GAAQkX,QAAA,CAASlZ,CAAC;MAGxB,IAAI,OAAOgC,KAAA,KAAU,UAAU;QAC7BsS,KAAA,GAAQ0E,UAAA,GAAa,IAAI1E,KAAA,GAAQ,CAAC,OAAO;QACzC9V,OAAA,GAAUwD,KAAA;MACZ,OAAO;QACLsS,KAAA,GAAQmE,WAAA,CAAYnE,KAAA,EAAOtS,KAAA,CAAMzD,IAAI;QAErC,IAAIyD,KAAA,CAAMvD,KAAA,EAAO;UACf6V,KAAA,GAAQmE,WAAA,CAAYnE,KAAA,EAAOtS,KAAA,CAAMvD,KAAK;QACxC;QAEAD,OAAA,GAAUwD,KAAA,CAAMxD,OAAA;MAClB;MAGA,IAAI,OAAOA,OAAA,KAAY,UAAU;QAC/Bwa,UAAA;QACAJ,YAAA,CAAalV,IAAA,CAAK4Q,KAAK;QACvBuE,aAAA,CAAcnV,IAAA,CAAKlF,OAAuB;QAC1Csa,kBAAA,CAAmBpV,IAAA,CAAK,CAAC;QACzBqV,iBAAA,CAAkBrV,IAAA,CAAKlF,OAAA,CAAQoF,MAAM;QACrC;MACF;MAGA,MAAMuV,eAAA,GAAkB3a,OAAA,CAAQ4a,KAAA,CAAMb,SAAS;MAC/C,MAAMc,YAAA,GAAeF,eAAA,CAAgBvV,MAAA;MACrCqV,WAAA,CAAYvV,IAAA,CAAK;QACf4Q,KAAA;QACA9V,OAAA,EAAS2a,eAAA,CAAgB,CAAC;MAC5B,CAAC;MAGD,SAASG,EAAA,GAAI,GAAGA,EAAA,GAAID,YAAA,EAAcC,EAAA,IAAK;QACrCd,mBAAA,CAAoBS,WAAW;QAC/BzC,GAAA,CAAI9S,IAAA,CAAMuV,WAAA,GAAc,EAAG;QAC3BA,WAAA,CAAYvV,IAAA,CAAK;UACf4Q,KAAA;UACA9V,OAAA,EAAS2a,eAAA,CAAgBG,EAAC;QAC5B,CAAC;MACH;IACF;IAGAN,UAAA;IACAJ,YAAA,CAAa/H,GAAA,CAAI;IACjBgI,aAAA,CAAchI,GAAA,CAAI;IAClBiI,kBAAA,CAAmBjI,GAAA,CAAI;IACvBkI,iBAAA,CAAkBlI,GAAA,CAAI;EACxB;EAEA2H,mBAAA,CAAoBS,WAAW;EAC/B,OAAOzC,GAAA;AACT;AAEA,IAAO+C,uBAAA,GAAQZ,eAAA;;;AC3Gf,SAASa,OAAA,EAAStD,MAAA,IAAAuD,OAAA,QAAc;AASzB,IAAMC,WAAA,GAAcC,KAAA,IAAiD;EAAA,IAAhD;IAAEC,KAAA;IAAOlX,IAAA;IAAMZ,OAAA;IAASrB;EAAS,IAAAkZ,KAAA;EAC3D,MAAME,QAAA,GAAWJ,OAAA,CAAOG,KAAK;EAC7B,OAAOJ,OAAA,CAAQ,MAAM;IACnB,IAAI1X,OAAA,IAAW,MAAM,OAAOyX,uBAAA,CAAgB,CAAC7W,IAAI,CAAC;IAElD,MAAMoX,WAAA,GAAyB;MAC7BpX,IAAA;MACAZ,OAAA;MACArB,QAAA;MACApC,MAAA,EAAQ;IACV;IAEAwb,QAAA,CAASxC,OAAA,CAAQ1U,KAAA,CAAMC,GAAA,CAAI,mBAAmBkX,WAAW;IACzDA,WAAA,CAAYzb,MAAA,GAASwb,QAAA,CAASxC,OAAA,CAAQvU,QAAA,CAASJ,IAAA,EAAMZ,OAAO;IAC5D+X,QAAA,CAASxC,OAAA,CAAQ1U,KAAA,CAAMC,GAAA,CAAI,kBAAkBkX,WAAW;IACxD,OAAOP,uBAAA,CAAgBO,WAAA,CAAYzb,MAAM;EAC3C,GAAG,CAACqE,IAAA,EAAMZ,OAAA,EAASrB,QAAQ,CAAC;AAC9B;;;ACtBO,IAAMsZ,SAAA,GAAYC,KAAA,IAMK;EAAA,IANJ;IACxB1B,QAAA;IACA7X,QAAA,EAAUwZ,SAAA;IACVvX,IAAA;IACAyR,KAAA,EAAAkC,OAAA;IACAuD;EACF,IAAAI,KAAA;EACE,MAAMvZ,QAAA,GAAWwZ,SAAA,CAAU3Z,WAAA,CAAY;EACvC,MAAM2W,eAAA,GAAkBD,kBAAA,CAAmBvW,QAAA,EAAU4V,OAAK;EAC1D,MAAM6D,YAAA,GAAe1C,eAAA,CAAgBP,eAAe;EACpD,MAAMkD,aAAA,GAAgBnC,gBAAA,CAAiBf,eAAe;EACtD,MAAMnV,OAAA,GAAU8X,KAAA,CAAM3Y,SAAA,CAAUR,QAAQ;EACxC,MAAMpC,MAAA,GAASqb,WAAA,CAAY;IAAEE,KAAA;IAAOnZ,QAAA;IAAUiC,IAAA;IAAMZ;EAAQ,CAAC;EAE7D,OAAOwW,QAAA,CAAS;IACdja,MAAA;IACAgC,SAAA,EAAW,uBAAuBI,QAAA;IAClC8T,KAAA,EAAO0C,eAAA,IAAmB,OAAOA,eAAA,CAAgBpV,IAAA,GAAO,CAAC;IACzDqY,YAAA;IACAC;EACF,CAAC;AACH;;;APjBA,IAAMC,UAAA,GAAaC,KAAA,IACjBrE,aAAA,CAAc+D,SAAA,EAAmBjD,aAAA,CAAAD,cAAA,KAC5BwD,KAAA,GAD4B;EAE/BT,KAAA,EAAOS,KAAA,CAAMT,KAAA,IAAU5S,KAAA;EACvBmN,KAAA,EAAOkG,KAAA,CAAMlG,KAAA,IAAgBH,cAAA;EAC7BtR,IAAA,EAAM2X,KAAA,CAAM3X,IAAA;EACZjC,QAAA,EAAU4Z,KAAA,CAAM5Z;AAClB,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}